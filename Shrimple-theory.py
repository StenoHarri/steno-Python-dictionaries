"""
@Jalexu on discord had an idea for fingerspelling using the whole keyboard, not just one letter at a time
Key considerations were that it wasn't tailored for English, as this is mostly for foreign words/names


@Jalexu is not on GitHub so DM them for the most up to date version
"""

"""
Predefined_starters={ This short list is the stuff I define before combinations get mixed
    "" : "",

    "^":"a",
    "^SK":"ex",
    "^SKPH":"em",
    "^SKHR":"excl",
    "^SKR":"excr", #maybe?
    "^TPH":"on ", #maybe?
    "^SKWR":"eng", #maybe?

    "S" : "s",
    "STK": "dis",
    "STKPW": "z", #I've decided not disg
    "SKPH":"im",
    "SKP": "and ",
    "SKWR": "j",
    "SKHR": "shr",
    "SPW":"int",
    "SH" : "sh",
    "SR" : "v",
    #"S*" : "z",

    "T" : "t",
    "TK": "d",
    "TKPW":"g",
    "TKW":"dev",
    "TKR":"dr",
    "TP": "f",
    "TPH": "n",

    "K":"k",
    "KP":"x",
    "KPW":"imp",
    "KW":"q", #interesting, cause vowel?
    "KWR":"y",
    "KH":"ch",
    "KR":"c",

    "P":"p",
    "PW":"b",
    "PH":"m",
    "PHR":"pl", #I've decided not mr

    "W":"w",

    "H":"h",
    "HR":"l",

    "R":"r"
}


Then these are the ending letters before they get mixed
ender_letter={
    "":"",
    "*":"[delete me]",
    "*FRPB":"nch",
    "*FT":"ft",
    "*PBG":"nk",
    "*PZ":"h",
    "PS":"h",
    "*BG":"ck",
    "*BGS":"ction",
    "*T":"th",
    "*S":"c",
    "*D":"y",
    "*DZ":"e",
    "*Z":"z",

    "F":"f",
    "FRP":"mp",
    "FRPB":"rch",
    "FRPL":"mpl",
    "FRB":"mb", #come back to this
    "FRL":"ml",
    "FRBL":"mbl",
    "FP":"ch",
    "FPL":"tual",
    "FPLT":"{.}",
    "FB":"v",
    "FT":"st",

    "R":"r", #if o, then end in e
    "RPBLG":"rg",
    "RB":"sh", #unless AU to make it rb carb barb
    "RBL":"rrow",
    "RBT":"tial",
    "RBG":"rk",
    "RBGS":"{,}",
    "RBS":"tious",

    "P":"p",
    "PB":"n",
    "PBLG":"dg",
    "PBLGS":"jection",
    "PBG":"ng",
    "PBGS":"nction",
    "PL":"m",
    #PZ for h?

    "B":"b",
    "BLG":"ckle",
    "BG":"k",
    "BGT":"ct", 
    "BGTS":"cts",
    "BGS":"x", #I don't know about ction, maybe asterisk?

    "L":"l", #come back to this

    "G":"g",
    "GT":"xt",
    "GS":"tion", #fuck you

    "T":"t",
    "TS":"ts",
    "TZ":"se",

    "S":"s", #might be some logic here for c? Realtime uses `SZ` for c
    "SD":"e",
    
    "D":"d",
    

    "Z":"e"

}


"""

starter_letter={
    "":"",
'STKPWHR': 'zl',
'STKPWH': 'zh',
'STKPWR': 'zr',
'STKPW': 'z',
'STKPHR': 'displ',
'STKPH': 'dism',
'STKPR': 'stxr',
'STKP': 'disp',
'STKWHR': 'sdevl',
'STKWH': 'sdevh',
'STKWR': 'sty',
'STKW': 'sdev',
'STKHR': 'disl',
'STKH': 'dish',
'STKR': 'disr',
'STK': 'dis',
'STPWHR': 'stbl',
'STPWH': 'stbh',
'STPWR': 'stbr',
'STPW': 'stb',
'STPHR': 'stpl',
'STPH': 'sn',
'STPR': 'sfr',
'STP': 'sf',
'STWHR': 'stwl',
'STWH': 'stwh',
'STWR': 'stwr',
'STW': 'stw',
'STHR': 'stl',
'STH': 'sth',
'STR': 'str',
'ST': 'st',
'SKPWHR': 'simpl',
'SKPWH': 'simph',
'SKPWR': 'simpr',
'SKPW': 'simp',
'SKPHR': 'and l',
'SKPH': 'im',
'SKPR': 'and r',
'SKP': 'and ',
'SKWHR': 'sql',
'SKWH': 'sqh',
'SKWR': 'j',
'SKW': 'sq',
'SKHR': 'shr',
'SKH': 'sch',
'SKR': 'sc',
'SK': 'sk',
'SPWHR': 'intl',
'SPWH': 'inth',
'SPWR': 'intr',
'SPW': 'int',
'SPHR': 'spl',
'SPH': 'sm',
'SPR': 'spr',
'SP': 'sp',
'SWHR': 'swl',
'SWH': 'swh',
'SWR': 'swr',
'SW': 'sw',
'SHR': 'sl',
'SH': 'sh',
'SR': 'v',
'S': 's',
'TKPWHR': 'gl',
'TKPWH': 'gh',
'TKPWR': 'gr',
'TKPW': 'g',
'TKPHR': 'dpl',
'TKPH': 'dm',
'TKPR': 'txr',
'TKP': 'tx',
'TKWHR': 'devl',
'TKWH': 'devh',
'TKWR': 'ty',
'TKW': 'dev',
'TKHR': 'dl',
'TKH': 'tch',
'TKR': 'dr',
'TK': 'd',
'TPWHR': 'tbl',
'TPWH': 'tbh',
'TPWR': 'tbr',
'TPW': 'tb',
'TPHR': 'tpl',
'TPH': 'n',
'TPR': 'fr',
'TP': 'f',
'TWHR': 'twl',
'TWH': 'twh',
'TWR': 'twr',
'TW': 'tw',
'THR': 'tl',
'TH': 'th',
'TR': 'tr',
'T': 't',
'KPWHR': 'impl',
'KPWH': 'imph',
'KPWR': 'impr',
'KPW': 'imp',
'KPHR': 'kpl',
'KPH': 'km',
'KPR': 'xr',
'KP': 'x',
'KWHR': 'ql',
'KWH': 'qh',
'KWR': 'y',
'KW': 'q',
'KHR': 'kl',
'KH': 'ch',
'KR': 'c',
'K': 'k',
'PWHR': 'bl',
'PWH': 'bh',
'PWR': 'br',
'PW': 'b',
'PHR': 'pl',
'PH': 'm',
'PR': 'pr',
'P': 'p',
'WHR': 'wl',
'WH': 'wh',
'WR': 'wr',
'W': 'w',
'HR': 'l',
'H': 'h',
'R': 'r',
}


vowels={
    "-":"",
    
    "":"",

    "*":"",

    "A"   :"a",
    "AO"  :"oo",
    "AOE" :"ee",
    "AOEU":"ie",
    "AOU" :"ue", #or "due" or "dew"?
    "AE"  :"ea",  #why not
    "AEU" :"ai", #or "ai" (can just two stroke them easily)
    "AU"  :"au", #or "aw" if at the end

    "O"   :"o",
    "OE"  :"oe", #or "ow" if at the end
    "OEU" :"oi", #or "oy" if at the end
    "OU"  :"ou", #or "ow" if at the end

    "E"   :"e",
    "EU"  :"i",

    "U"   :"u"
}

ender_letter={
    "":"",
'*FRPBLGTSDZ': 'nchlgtsde',
'FRPBLGTSDZ': 'frgtsde',
'*FRPBLGTSD': 'nchlgtsd',
'FRPBLGTSD': 'frgtsd',
'*FRPBLGTSZ': 'nchlgtse',
'FRPBLGTSZ': 'frgtse',
'*FRPBLGTS': 'nchlgts',
'FRPBLGTS': 'frgts',
'*FRPBLGTDZ': 'nchlgtde',
'FRPBLGTDZ': 'frgtde',
'*FRPBLGTD': 'nchlgtd',
'FRPBLGTD': 'frgtd',
'*FRPBLGTZ': 'nchlgte',
'FRPBLGTZ': 'frgte',
'*FRPBLGT': 'nchlgt',
'FRPBLGT': 'frgt',
'*FRPBLGSDZ': 'nchlgsde',
'FRPBLGSDZ': 'frgsde',
'*FRPBLGSD': 'nchlgsd',
'FRPBLGSD': 'frgsd',
'*FRPBLGSZ': 'nchlgse',
'FRPBLGSZ': 'frgse',
'*FRPBLGS': 'nchlgs',
'FRPBLGS': 'frgs',
'*FRPBLGDZ': 'nchlgde',
'FRPBLGDZ': 'frgde',
'*FRPBLGD': 'nchlgd',
'FRPBLGD': 'frgd',
'*FRPBLGZ': 'nchlge',
'FRPBLGZ': 'frge',
'*FRPBLG': 'nchlg',
'FRPBLG': 'frg',
'*FRPBLTSDZ': 'nchltsde',
'FRPBLTSDZ': 'rchltsde',
'*FRPBLTSD': 'nchltsd',
'FRPBLTSD': 'rchltsd',
'*FRPBLTSZ': 'nchltse',
'FRPBLTSZ': 'rchltse',
'*FRPBLTS': 'nchlts',
'FRPBLTS': 'rchlts',
'*FRPBLTDZ': 'nchltde',
'FRPBLTDZ': 'rchltde',
'*FRPBLTD': 'nchltd',
'FRPBLTD': 'rchltd',
'*FRPBLTZ': 'nchlte',
'FRPBLTZ': 'rchlte',
'*FRPBLT': 'nchlt',
'FRPBLT': 'rchlt',
'*FRPBLSDZ': 'nchlsde',
'FRPBLSDZ': 'rchlsde',
'*FRPBLSD': 'nchlsd',
'FRPBLSD': 'rchlsd',
'*FRPBLSZ': 'nchlse',
'FRPBLSZ': 'rchlse',
'*FRPBLS': 'nchls',
'FRPBLS': 'rchls',
'*FRPBLDZ': 'nchlde',
'FRPBLDZ': 'rchlde',
'*FRPBLD': 'nchld',
'FRPBLD': 'rchld',
'*FRPBLZ': 'nchle',
'FRPBLZ': 'rchle',
'*FRPBL': 'nchl',
'FRPBL': 'rchl',
'*FRPBGTSDZ': 'nchxtsde',
'FRPBGTSDZ': 'mpctsde',
'*FRPBGTSD': 'nchxtsd',
'FRPBGTSD': 'mpctsd',
'*FRPBGTSZ': 'nchxtse',
'FRPBGTSZ': 'mpctse',
'*FRPBGTS': 'nchxts',
'FRPBGTS': 'mpcts',
'*FRPBGTDZ': 'nchxtde',
'FRPBGTDZ': 'mpctde',
'*FRPBGTD': 'nchxtd',
'FRPBGTD': 'mpctd',
'*FRPBGTZ': 'nchxte',
'FRPBGTZ': 'mpcte',
'*FRPBGT': 'nchxt',
'FRPBGT': 'mpct',
'*FRPBGSDZ': 'nchtionde',
'FRPBGSDZ': 'mpxde',
'*FRPBGSD': 'nchtiond',
'FRPBGSD': 'mpxd',
'*FRPBGSZ': 'nchtione',
'FRPBGSZ': 'mpxe',
'*FRPBGS': 'nchtion',
'FRPBGS': 'mpx',
'*FRPBGDZ': 'nchgde',
'FRPBGDZ': 'mpkde',
'*FRPBGD': 'nchgd',
'FRPBGD': 'mpkd',
'*FRPBGZ': 'nchge',
'FRPBGZ': 'mpke',
'*FRPBG': 'nchg',
'FRPBG': 'mpk',
'*FRPBTSDZ': 'nchtsde',
'FRPBTSDZ': 'rchtsde',
'*FRPBTSD': 'nchtsd',
'FRPBTSD': 'rchtsd',
'*FRPBTSZ': 'nchtse',
'FRPBTSZ': 'rchtse',
'*FRPBTS': 'nchts',
'FRPBTS': 'rchts',
'*FRPBTDZ': 'nchtde',
'FRPBTDZ': 'rchtde',
'*FRPBTD': 'nchtd',
'FRPBTD': 'rchtd',
'*FRPBTZ': 'nchse',
'FRPBTZ': 'rchse',
'*FRPBT': 'ncht',
'FRPBT': 'rcht',
'*FRPBSDZ': 'nchee',
'FRPBSDZ': 'rchee',
'*FRPBSD': 'nche',
'FRPBSD': 'rche',
'*FRPBSZ': 'nchse',
'FRPBSZ': 'rchse',
'*FRPBS': 'nchs',
'FRPBS': 'rchs',
'*FRPBDZ': 'nchde',
'FRPBDZ': 'rchde',
'*FRPBD': 'nchd',
'FRPBD': 'rchd',
'*FRPBZ': 'nche',
'FRPBZ': 'rche',
'*FRPB': 'nch',
'FRPB': 'rch',
'*FRPLGTSDZ': 'mplgthsde',
'FRPLGTSDZ': 'mplxtsde',
'*FRPLGTSD': 'mplgthsd',
'FRPLGTSD': 'mplxtsd',
'*FRPLGTSZ': 'mplgthse',
'FRPLGTSZ': 'mplxtse',
'*FRPLGTS': 'mplgths',
'FRPLGTS': 'mplxts',
'*FRPLGTDZ': 'mplgthde',
'FRPLGTDZ': 'mplxtde',
'*FRPLGTD': 'mplgthd',
'FRPLGTD': 'mplxtd',
'*FRPLGTZ': 'mplgthe',
'FRPLGTZ': 'mplxte',
'*FRPLGT': 'mplgth',
'FRPLGT': 'mplxt',
'*FRPLGSDZ': 'mplgcde',
'FRPLGSDZ': 'mpltionde',
'*FRPLGSD': 'mplgcd',
'FRPLGSD': 'mpltiond',
'*FRPLGSZ': 'mplgce',
'FRPLGSZ': 'mpltione',
'*FRPLGS': 'mplgc',
'FRPLGS': 'mpltion',
'*FRPLGDZ': 'mplgye',
'FRPLGDZ': 'mplgde',
'*FRPLGD': 'mplgy',
'FRPLGD': 'mplgd',
'*FRPLGZ': 'mplgz',
'FRPLGZ': 'mplge',
'FRPLG': 'mplg',
'*FRPLTSDZ': 'mplthsde',
'FRPLTSDZ': 'mpltsde',
'*FRPLTSD': 'mplthsd',
'FRPLTSD': 'mpltsd',
'*FRPLTSZ': 'mplthse',
'FRPLTSZ': 'mpltse',
'*FRPLTS': 'mplths',
'FRPLTS': 'mplts',
'*FRPLTDZ': 'mplthde',
'FRPLTDZ': 'mpltde',
'*FRPLTD': 'mplthd',
'FRPLTD': 'mpltd',
'*FRPLTZ': 'mplthe',
'FRPLTZ': 'mplse',
'*FRPLT': 'mplth',
'FRPLT': 'mplt',
'*FRPLSDZ': 'mplcde',
'FRPLSDZ': 'mplee',
'*FRPLSD': 'mplcd',
'FRPLSD': 'mple',
'*FRPLSZ': 'mplce',
'FRPLSZ': 'mplse',
'*FRPLS': 'mplc',
'FRPLS': 'mpls',
'*FRPLDZ': 'mple',
'FRPLDZ': 'mplde',
'*FRPLD': 'mply',
'FRPLD': 'mpld',
'*FRPLZ': 'mplz',
'FRPLZ': 'mple',
'FRPL': 'mpl',
'*FRPGTSDZ': 'mpgthsde',
'FRPGTSDZ': 'mpxtsde',
'*FRPGTSD': 'mpgthsd',
'FRPGTSD': 'mpxtsd',
'*FRPGTSZ': 'mpgthse',
'FRPGTSZ': 'mpxtse',
'*FRPGTS': 'mpgths',
'FRPGTS': 'mpxts',
'*FRPGTDZ': 'mpgthde',
'FRPGTDZ': 'mpxtde',
'*FRPGTD': 'mpgthd',
'FRPGTD': 'mpxtd',
'*FRPGTZ': 'mpgthe',
'FRPGTZ': 'mpxte',
'*FRPGT': 'mpgth',
'FRPGT': 'mpxt',
'*FRPGSDZ': 'mpgcde',
'FRPGSDZ': 'mptionde',
'*FRPGSD': 'mpgcd',
'FRPGSD': 'mptiond',
'*FRPGSZ': 'mpgce',
'FRPGSZ': 'mptione',
'*FRPGS': 'mpgc',
'FRPGS': 'mption',
'*FRPGDZ': 'mpgye',
'FRPGDZ': 'mpgde',
'*FRPGD': 'mpgy',
'FRPGD': 'mpgd',
'*FRPGZ': 'mpgz',
'FRPGZ': 'mpge',
'FRPG': 'mpg',
'*FRPTSDZ': 'mpthsde',
'FRPTSDZ': 'mptsde',
'*FRPTSD': 'mpthsd',
'FRPTSD': 'mptsd',
'*FRPTSZ': 'mpthse',
'FRPTSZ': 'mptse',
'*FRPTS': 'mpths',
'FRPTS': 'mpts',
'*FRPTDZ': 'mpthde',
'FRPTDZ': 'mptde',
'*FRPTD': 'mpthd',
'FRPTD': 'mptd',
'*FRPTZ': 'mpthe',
'FRPTZ': 'mpse',
'*FRPT': 'mpth',
'FRPT': 'mpt',
'*FRPSDZ': 'mpcde',
'FRPSDZ': 'mpee',
'*FRPSD': 'mpcd',
'FRPSD': 'mpe',
'*FRPSZ': 'mpce',
'FRPSZ': 'mpse',
'*FRPS': 'mpc',
'FRPS': 'mps',
'*FRPDZ': 'mpe',
'FRPDZ': 'mpde',
'*FRPD': 'mpy',
'FRPD': 'mpd',
'*FRPZ': 'frh',
'FRPZ': 'mpe',
'FRP': 'mp',
'*FRBLGTSDZ': 'mblgthsde',
'FRBLGTSDZ': 'mblxtsde',
'*FRBLGTSD': 'mblgthsd',
'FRBLGTSD': 'mblxtsd',
'*FRBLGTSZ': 'mblgthse',
'FRBLGTSZ': 'mblxtse',
'*FRBLGTS': 'mblgths',
'FRBLGTS': 'mblxts',
'*FRBLGTDZ': 'mblgthde',
'FRBLGTDZ': 'mblxtde',
'*FRBLGTD': 'mblgthd',
'FRBLGTD': 'mblxtd',
'*FRBLGTZ': 'mblgthe',
'FRBLGTZ': 'mblxte',
'*FRBLGT': 'mblgth',
'FRBLGT': 'mblxt',
'*FRBLGSDZ': 'mblgcde',
'FRBLGSDZ': 'mbltionde',
'*FRBLGSD': 'mblgcd',
'FRBLGSD': 'mbltiond',
'*FRBLGSZ': 'mblgce',
'FRBLGSZ': 'mbltione',
'*FRBLGS': 'mblgc',
'FRBLGS': 'mbltion',
'*FRBLGDZ': 'mblgye',
'FRBLGDZ': 'mblgde',
'*FRBLGD': 'mblgy',
'FRBLGD': 'mblgd',
'*FRBLGZ': 'mblgz',
'FRBLGZ': 'mblge',
'FRBLG': 'mblg',
'*FRBLTSDZ': 'mblthsde',
'FRBLTSDZ': 'mbltsde',
'*FRBLTSD': 'mblthsd',
'FRBLTSD': 'mbltsd',
'*FRBLTSZ': 'mblthse',
'FRBLTSZ': 'mbltse',
'*FRBLTS': 'mblths',
'FRBLTS': 'mblts',
'*FRBLTDZ': 'mblthde',
'FRBLTDZ': 'mbltde',
'*FRBLTD': 'mblthd',
'FRBLTD': 'mbltd',
'*FRBLTZ': 'mblthe',
'FRBLTZ': 'mblse',
'*FRBLT': 'mblth',
'FRBLT': 'mblt',
'*FRBLSDZ': 'mblcde',
'FRBLSDZ': 'mblee',
'*FRBLSD': 'mblcd',
'FRBLSD': 'mble',
'*FRBLSZ': 'mblce',
'FRBLSZ': 'mblse',
'*FRBLS': 'mblc',
'FRBLS': 'mbls',
'*FRBLDZ': 'mble',
'FRBLDZ': 'mblde',
'*FRBLD': 'mbly',
'FRBLD': 'mbld',
'*FRBLZ': 'mblz',
'FRBLZ': 'mble',
'FRBL': 'mbl',
'*FRBGTSDZ': 'frcktsde',
'FRBGTSDZ': 'mbxtsde',
'*FRBGTSD': 'frcktsd',
'FRBGTSD': 'mbxtsd',
'*FRBGTSZ': 'frcktse',
'FRBGTSZ': 'mbxtse',
'*FRBGTS': 'frckts',
'FRBGTS': 'mbxts',
'*FRBGTDZ': 'frcktde',
'FRBGTDZ': 'mbxtde',
'*FRBGTD': 'frcktd',
'FRBGTD': 'mbxtd',
'*FRBGTZ': 'frckte',
'FRBGTZ': 'mbxte',
'*FRBGT': 'frckt',
'FRBGT': 'mbxt',
'*FRBGSDZ': 'frcksde',
'FRBGSDZ': 'f{,}de',
'*FRBGSD': 'frcksd',
'FRBGSD': 'f{,}d',
'*FRBGSZ': 'frckse',
'FRBGSZ': 'f{,}e',
'*FRBGS': 'frcks',
'FRBGS': 'f{,}',
'*FRBGDZ': 'frckde',
'FRBGDZ': 'frkde',
'*FRBGD': 'frckd',
'FRBGD': 'frkd',
'*FRBGZ': 'frcke',
'FRBGZ': 'frke',
'*FRBG': 'frck',
'FRBG': 'frk',
'*FRBTSDZ': 'mbthsde',
'FRBTSDZ': 'mbtsde',
'*FRBTSD': 'mbthsd',
'FRBTSD': 'mbtsd',
'*FRBTSZ': 'mbthse',
'FRBTSZ': 'mbtse',
'*FRBTS': 'mbths',
'FRBTS': 'mbts',
'*FRBTDZ': 'mbthde',
'FRBTDZ': 'ftialde',
'*FRBTD': 'mbthd',
'FRBTD': 'ftiald',
'*FRBTZ': 'mbthe',
'FRBTZ': 'mbse',
'*FRBT': 'mbth',
'FRBT': 'ftial',
'*FRBSDZ': 'mbcde',
'FRBSDZ': 'mbee',
'*FRBSD': 'mbcd',
'FRBSD': 'mbe',
'*FRBSZ': 'mbce',
'FRBSZ': 'ftiouse',
'*FRBS': 'mbc',
'FRBS': 'ftious',
'*FRBDZ': 'mbe',
'FRBDZ': 'mbde',
'*FRBD': 'mby',
'FRBD': 'mbd',
'*FRBZ': 'mbz',
'FRBZ': 'mbe',
'FRB': 'mb',
'*FRLGTSDZ': 'mlgthsde',
'FRLGTSDZ': 'mlxtsde',
'*FRLGTSD': 'mlgthsd',
'FRLGTSD': 'mlxtsd',
'*FRLGTSZ': 'mlgthse',
'FRLGTSZ': 'mlxtse',
'*FRLGTS': 'mlgths',
'FRLGTS': 'mlxts',
'*FRLGTDZ': 'mlgthde',
'FRLGTDZ': 'mlxtde',
'*FRLGTD': 'mlgthd',
'FRLGTD': 'mlxtd',
'*FRLGTZ': 'mlgthe',
'FRLGTZ': 'mlxte',
'*FRLGT': 'mlgth',
'FRLGT': 'mlxt',
'*FRLGSDZ': 'mlgcde',
'FRLGSDZ': 'mltionde',
'*FRLGSD': 'mlgcd',
'FRLGSD': 'mltiond',
'*FRLGSZ': 'mlgce',
'FRLGSZ': 'mltione',
'*FRLGS': 'mlgc',
'FRLGS': 'mltion',
'*FRLGDZ': 'mlgye',
'FRLGDZ': 'mlgde',
'*FRLGD': 'mlgy',
'FRLGD': 'mlgd',
'*FRLGZ': 'mlgz',
'FRLGZ': 'mlge',
'FRLG': 'mlg',
'*FRLTSDZ': 'mlthsde',
'FRLTSDZ': 'mltsde',
'*FRLTSD': 'mlthsd',
'FRLTSD': 'mltsd',
'*FRLTSZ': 'mlthse',
'FRLTSZ': 'mltse',
'*FRLTS': 'mlths',
'FRLTS': 'mlts',
'*FRLTDZ': 'mlthde',
'FRLTDZ': 'mltde',
'*FRLTD': 'mlthd',
'FRLTD': 'mltd',
'*FRLTZ': 'mlthe',
'FRLTZ': 'mlse',
'*FRLT': 'mlth',
'FRLT': 'mlt',
'*FRLSDZ': 'mlcde',
'FRLSDZ': 'mlee',
'*FRLSD': 'mlcd',
'FRLSD': 'mle',
'*FRLSZ': 'mlce',
'FRLSZ': 'mlse',
'*FRLS': 'mlc',
'FRLS': 'mls',
'*FRLDZ': 'mle',
'FRLDZ': 'mlde',
'*FRLD': 'mly',
'FRLD': 'mld',
'*FRLZ': 'mlz',
'FRLZ': 'mle',
'FRL': 'ml',
'*FRGTSDZ': 'frgthsde',
'FRGTSDZ': 'frgtsde',
'*FRGTSD': 'frgthsd',
'FRGTSD': 'frgtsd',
'*FRGTSZ': 'frgthse',
'FRGTSZ': 'frgtse',
'*FRGTS': 'frgths',
'FRGTS': 'frgts',
'*FRGTDZ': 'frgthde',
'FRGTDZ': 'frgtde',
'*FRGTD': 'frgthd',
'FRGTD': 'frgtd',
'*FRGTZ': 'frgthe',
'FRGTZ': 'frgte',
'*FRGT': 'frgth',
'FRGT': 'frgt',
'*FRGSDZ': 'frgcde',
'FRGSDZ': 'frgsde',
'*FRGSD': 'frgcd',
'FRGSD': 'frgsd',
'*FRGSZ': 'frgce',
'FRGSZ': 'frgse',
'*FRGS': 'frgc',
'FRGS': 'frgs',
'*FRGDZ': 'frgye',
'FRGDZ': 'frgde',
'*FRGD': 'frgy',
'FRGD': 'frgd',
'*FRGZ': 'frgz',
'FRGZ': 'frge',
'FRG': 'frg',
'*FRTSDZ': 'frthsde',
'FRTSDZ': 'frtsde',
'*FRTSD': 'frthsd',
'FRTSD': 'frtsd',
'*FRTSZ': 'frthse',
'FRTSZ': 'frtse',
'*FRTS': 'frths',
'FRTS': 'frts',
'*FRTDZ': 'frthde',
'FRTDZ': 'frtde',
'*FRTD': 'frthd',
'FRTD': 'frtd',
'*FRTZ': 'frthe',
'FRTZ': 'frte',
'*FRT': 'frth',
'FRT': 'frt',
'*FRSDZ': 'frcde',
'FRSDZ': 'frsde',
'*FRSD': 'frcd',
'FRSD': 'frsd',
'*FRSZ': 'frce',
'FRSZ': 'frse',
'*FRS': 'frc',
'FRS': 'frs',
'*FRDZ': 'frye',
'FRDZ': 'frde',
'*FRD': 'fry',
'FRD': 'frd',
'*FRZ': 'frz',
'FRZ': 'fre',
'FR': 'fr',
'*FPBLGTSDZ': 'fdgthsde',
'FPBLGTSDZ': 'fdgtsde',
'*FPBLGTSD': 'fdgthsd',
'FPBLGTSD': 'fdgtsd',
'*FPBLGTSZ': 'fdgthse',
'FPBLGTSZ': 'fdgtse',
'*FPBLGTS': 'fdgths',
'FPBLGTS': 'fdgts',
'*FPBLGTDZ': 'fdgthde',
'FPBLGTDZ': 'fdgtde',
'*FPBLGTD': 'fdgthd',
'FPBLGTD': 'fdgtd',
'*FPBLGTZ': 'fdgthe',
'FPBLGTZ': 'fdgte',
'*FPBLGT': 'fdgth',
'FPBLGT': 'fdgt',
'*FPBLGSDZ': 'fdgcde',
'FPBLGSDZ': 'fjectionde',
'*FPBLGSD': 'fdgcd',
'FPBLGSD': 'fjectiond',
'*FPBLGSZ': 'fdgce',
'FPBLGSZ': 'fjectione',
'*FPBLGS': 'fdgc',
'FPBLGS': 'fjection',
'*FPBLGDZ': 'fdgye',
'FPBLGDZ': 'fdgde',
'*FPBLGD': 'fdgy',
'FPBLGD': 'fdgd',
'*FPBLGZ': 'fdgz',
'FPBLGZ': 'fdge',
'FPBLG': 'fdg',
'*FPBLTSDZ': 'fnlthsde',
'FPBLTSDZ': 'fnltsde',
'*FPBLTSD': 'fnlthsd',
'FPBLTSD': 'fnltsd',
'*FPBLTSZ': 'fnlthse',
'FPBLTSZ': 'fnltse',
'*FPBLTS': 'fnlths',
'FPBLTS': 'fnlts',
'*FPBLTDZ': 'fnlthde',
'FPBLTDZ': 'fnltde',
'*FPBLTD': 'fnlthd',
'FPBLTD': 'fnltd',
'*FPBLTZ': 'fnlthe',
'FPBLTZ': 'fnlte',
'*FPBLT': 'fnlth',
'FPBLT': 'fnlt',
'*FPBLSDZ': 'fnlcde',
'FPBLSDZ': 'fnlsde',
'*FPBLSD': 'fnlcd',
'FPBLSD': 'fnlsd',
'*FPBLSZ': 'fnlce',
'FPBLSZ': 'fnlse',
'*FPBLS': 'fnlc',
'FPBLS': 'fnls',
'*FPBLDZ': 'fnlye',
'FPBLDZ': 'fnlde',
'*FPBLD': 'fnly',
'FPBLD': 'fnld',
'*FPBLZ': 'fnlz',
'FPBLZ': 'fnle',
'FPBL': 'fnl',
'*FPBGTSDZ': 'fnktsde',
'FPBGTSDZ': 'chctsde',
'*FPBGTSD': 'fnktsd',
'FPBGTSD': 'chctsd',
'*FPBGTSZ': 'fnktse',
'FPBGTSZ': 'chctse',
'*FPBGTS': 'fnkts',
'FPBGTS': 'chcts',
'*FPBGTDZ': 'fnktde',
'FPBGTDZ': 'chctde',
'*FPBGTD': 'fnktd',
'FPBGTD': 'chctd',
'*FPBGTZ': 'fnkte',
'FPBGTZ': 'chcte',
'*FPBGT': 'fnkt',
'FPBGT': 'chct',
'*FPBGSDZ': 'fnksde',
'FPBGSDZ': 'fnctionde',
'*FPBGSD': 'fnksd',
'FPBGSD': 'fnctiond',
'*FPBGSZ': 'fnkse',
'FPBGSZ': 'fnctione',
'*FPBGS': 'fnks',
'FPBGS': 'fnction',
'*FPBGDZ': 'fnkde',
'FPBGDZ': 'fngde',
'*FPBGD': 'fnkd',
'FPBGD': 'fngd',
'*FPBGZ': 'fnke',
'FPBGZ': 'fnge',
'*FPBG': 'fnk',
'FPBG': 'fng',
'*FPBTSDZ': 'fnthsde',
'FPBTSDZ': 'fntsde',
'*FPBTSD': 'fnthsd',
'FPBTSD': 'fntsd',
'*FPBTSZ': 'fnthse',
'FPBTSZ': 'fntse',
'*FPBTS': 'fnths',
'FPBTS': 'fnts',
'*FPBTDZ': 'fnthde',
'FPBTDZ': 'fntde',
'*FPBTD': 'fnthd',
'FPBTD': 'fntd',
'*FPBTZ': 'fnthe',
'FPBTZ': 'fnte',
'*FPBT': 'fnth',
'FPBT': 'fnt',
'*FPBSDZ': 'fncde',
'FPBSDZ': 'fnsde',
'*FPBSD': 'fncd',
'FPBSD': 'fnsd',
'*FPBSZ': 'fnce',
'FPBSZ': 'fnse',
'*FPBS': 'fnc',
'FPBS': 'fns',
'*FPBDZ': 'fnye',
'FPBDZ': 'fnde',
'*FPBD': 'fny',
'FPBD': 'fnd',
'*FPBZ': 'fnz',
'FPBZ': 'fne',
'FPB': 'fn',
'*FPLGTSDZ': 'tualgthsde',
'FPLGTSDZ': 'tualxtsde',
'*FPLGTSD': 'tualgthsd',
'FPLGTSD': 'tualxtsd',
'*FPLGTSZ': 'tualgthse',
'FPLGTSZ': 'tualxtse',
'*FPLGTS': 'tualgths',
'FPLGTS': 'tualxts',
'*FPLGTDZ': 'tualgthde',
'FPLGTDZ': 'tualxtde',
'*FPLGTD': 'tualgthd',
'FPLGTD': 'tualxtd',
'*FPLGTZ': 'tualgthe',
'FPLGTZ': 'tualxte',
'*FPLGT': 'tualgth',
'FPLGT': 'tualxt',
'*FPLGSDZ': 'tualgcde',
'FPLGSDZ': 'tualtionde',
'*FPLGSD': 'tualgcd',
'FPLGSD': 'tualtiond',
'*FPLGSZ': 'tualgce',
'FPLGSZ': 'tualtione',
'*FPLGS': 'tualgc',
'FPLGS': 'tualtion',
'*FPLGDZ': 'tualgye',
'FPLGDZ': 'tualgde',
'*FPLGD': 'tualgy',
'FPLGD': 'tualgd',
'*FPLGZ': 'tualgz',
'FPLGZ': 'tualge',
'FPLG': 'tualg',
'*FPLTSDZ': 'tualthsde',
'FPLTSDZ': '{.}ee',
'*FPLTSD': 'tualthsd',
'FPLTSD': '{.}e',
'*FPLTSZ': 'tualthse',
'FPLTSZ': 'tualtse',
'*FPLTS': 'tualths',
'FPLTS': 'tualts',
'*FPLTDZ': 'tualthde',
'FPLTDZ': '{.}de',
'*FPLTD': 'tualthd',
'FPLTD': '{.}d',
'*FPLTZ': 'tualthe',
'FPLTZ': 'tualse',
'*FPLT': 'tualth',
'FPLT': '{.}',
'*FPLSDZ': 'tualcde',
'FPLSDZ': 'tualee',
'*FPLSD': 'tualcd',
'FPLSD': 'tuale',
'*FPLSZ': 'tualce',
'FPLSZ': 'tualse',
'*FPLS': 'tualc',
'FPLS': 'tuals',
'*FPLDZ': 'tuale',
'FPLDZ': 'tualde',
'*FPLD': 'tualy',
'FPLD': 'tuald',
'*FPLZ': 'tualz',
'FPLZ': 'tuale',
'FPL': 'tual',
'*FPGTSDZ': 'chgthsde',
'FPGTSDZ': 'chxtsde',
'*FPGTSD': 'chgthsd',
'FPGTSD': 'chxtsd',
'*FPGTSZ': 'chgthse',
'FPGTSZ': 'chxtse',
'*FPGTS': 'chgths',
'FPGTS': 'chxts',
'*FPGTDZ': 'chgthde',
'FPGTDZ': 'chxtde',
'*FPGTD': 'chgthd',
'FPGTD': 'chxtd',
'*FPGTZ': 'chgthe',
'FPGTZ': 'chxte',
'*FPGT': 'chgth',
'FPGT': 'chxt',
'*FPGSDZ': 'chgcde',
'FPGSDZ': 'chtionde',
'*FPGSD': 'chgcd',
'FPGSD': 'chtiond',
'*FPGSZ': 'chgce',
'FPGSZ': 'chtione',
'*FPGS': 'chgc',
'FPGS': 'chtion',
'*FPGDZ': 'chgye',
'FPGDZ': 'chgde',
'*FPGD': 'chgy',
'FPGD': 'chgd',
'*FPGZ': 'chgz',
'FPGZ': 'chge',
'FPG': 'chg',
'*FPTSDZ': 'chthsde',
'FPTSDZ': 'chtsde',
'*FPTSD': 'chthsd',
'FPTSD': 'chtsd',
'*FPTSZ': 'chthse',
'FPTSZ': 'chtse',
'*FPTS': 'chths',
'FPTS': 'chts',
'*FPTDZ': 'chthde',
'FPTDZ': 'chtde',
'*FPTD': 'chthd',
'FPTD': 'chtd',
'*FPTZ': 'chthe',
'FPTZ': 'chse',
'*FPT': 'chth',
'FPT': 'cht',
'*FPSDZ': 'chcde',
'FPSDZ': 'chee',
'*FPSD': 'chcd',
'FPSD': 'che',
'*FPSZ': 'chce',
'FPSZ': 'fhe',
'*FPS': 'chc',
'FPS': 'fh',
'*FPDZ': 'che',
'FPDZ': 'chde',
'*FPD': 'chy',
'FPD': 'chd',
'*FPZ': 'fh',
'FPZ': 'che',
'FP': 'ch',
'*FBLGTSDZ': 'fcklethsde',
'FBLGTSDZ': 'fckletsde',
'*FBLGTSD': 'fcklethsd',
'FBLGTSD': 'fckletsd',
'*FBLGTSZ': 'fcklethse',
'FBLGTSZ': 'fckletse',
'*FBLGTS': 'fckleths',
'FBLGTS': 'fcklets',
'*FBLGTDZ': 'fcklethde',
'FBLGTDZ': 'fckletde',
'*FBLGTD': 'fcklethd',
'FBLGTD': 'fckletd',
'*FBLGTZ': 'fcklethe',
'FBLGTZ': 'fcklete',
'*FBLGT': 'fckleth',
'FBLGT': 'fcklet',
'*FBLGSDZ': 'fcklecde',
'FBLGSDZ': 'fcklesde',
'*FBLGSD': 'fcklecd',
'FBLGSD': 'fcklesd',
'*FBLGSZ': 'fcklece',
'FBLGSZ': 'fcklese',
'*FBLGS': 'fcklec',
'FBLGS': 'fckles',
'*FBLGDZ': 'fckleye',
'FBLGDZ': 'fcklede',
'*FBLGD': 'fckley',
'FBLGD': 'fckled',
'*FBLGZ': 'fcklez',
'FBLGZ': 'fcklee',
'FBLG': 'fckle',
'*FBLTSDZ': 'vlthsde',
'FBLTSDZ': 'vltsde',
'*FBLTSD': 'vlthsd',
'FBLTSD': 'vltsd',
'*FBLTSZ': 'vlthse',
'FBLTSZ': 'vltse',
'*FBLTS': 'vlths',
'FBLTS': 'vlts',
'*FBLTDZ': 'vlthde',
'FBLTDZ': 'vltde',
'*FBLTD': 'vlthd',
'FBLTD': 'vltd',
'*FBLTZ': 'vlthe',
'FBLTZ': 'vlte',
'*FBLT': 'vlth',
'FBLT': 'vlt',
'*FBLSDZ': 'vlcde',
'FBLSDZ': 'vlsde',
'*FBLSD': 'vlcd',
'FBLSD': 'vlsd',
'*FBLSZ': 'vlce',
'FBLSZ': 'vlse',
'*FBLS': 'vlc',
'FBLS': 'vls',
'*FBLDZ': 'vlye',
'FBLDZ': 'vlde',
'*FBLD': 'vly',
'FBLD': 'vld',
'*FBLZ': 'vlz',
'FBLZ': 'vle',
'FBL': 'vl',
'*FBGTSDZ': 'fcktsde',
'FBGTSDZ': 'fctsde',
'*FBGTSD': 'fcktsd',
'FBGTSD': 'fctsd',
'*FBGTSZ': 'fcktse',
'FBGTSZ': 'fctse',
'*FBGTS': 'fckts',
'FBGTS': 'fcts',
'*FBGTDZ': 'fcktde',
'FBGTDZ': 'fctde',
'*FBGTD': 'fcktd',
'FBGTD': 'fctd',
'*FBGTZ': 'fckte',
'FBGTZ': 'fcte',
'*FBGT': 'fckt',
'FBGT': 'fct',
'*FBGSDZ': 'fctionde',
'FBGSDZ': 'fxde',
'*FBGSD': 'fctiond',
'FBGSD': 'fxd',
'*FBGSZ': 'fctione',
'FBGSZ': 'fxe',
'*FBGS': 'fction',
'FBGS': 'fx',
'*FBGDZ': 'fckde',
'FBGDZ': 'fkde',
'*FBGD': 'fckd',
'FBGD': 'fkd',
'*FBGZ': 'fcke',
'FBGZ': 'fke',
'*FBG': 'fck',
'FBG': 'fk',
'*FBTSDZ': 'vthsde',
'FBTSDZ': 'vtsde',
'*FBTSD': 'vthsd',
'FBTSD': 'vtsd',
'*FBTSZ': 'vthse',
'FBTSZ': 'vtse',
'*FBTS': 'vths',
'FBTS': 'vts',
'*FBTDZ': 'vthde',
'FBTDZ': 'vtde',
'*FBTD': 'vthd',
'FBTD': 'vtd',
'*FBTZ': 'vthe',
'FBTZ': 'vse',
'*FBT': 'vth',
'FBT': 'vt',
'*FBSDZ': 'vcde',
'FBSDZ': 'vee',
'*FBSD': 'vcd',
'FBSD': 've',
'*FBSZ': 'vce',
'FBSZ': 'vse',
'*FBS': 'vc',
'FBS': 'vs',
'*FBDZ': 've',
'FBDZ': 'vde',
'*FBD': 'vy',
'FBD': 'vd',
'*FBZ': 'vz',
'FBZ': 've',
'FB': 'v',
'*FLGTSDZ': 'flgthsde',
'FLGTSDZ': 'flgtsde',
'*FLGTSD': 'flgthsd',
'FLGTSD': 'flgtsd',
'*FLGTSZ': 'flgthse',
'FLGTSZ': 'flgtse',
'*FLGTS': 'flgths',
'FLGTS': 'flgts',
'*FLGTDZ': 'flgthde',
'FLGTDZ': 'flgtde',
'*FLGTD': 'flgthd',
'FLGTD': 'flgtd',
'*FLGTZ': 'flgthe',
'FLGTZ': 'flgte',
'*FLGT': 'flgth',
'FLGT': 'flgt',
'*FLGSDZ': 'flgcde',
'FLGSDZ': 'flgsde',
'*FLGSD': 'flgcd',
'FLGSD': 'flgsd',
'*FLGSZ': 'flgce',
'FLGSZ': 'flgse',
'*FLGS': 'flgc',
'FLGS': 'flgs',
'*FLGDZ': 'flgye',
'FLGDZ': 'flgde',
'*FLGD': 'flgy',
'FLGD': 'flgd',
'*FLGZ': 'flgz',
'FLGZ': 'flge',
'FLG': 'flg',
'*FLTSDZ': 'flthsde',
'FLTSDZ': 'fltsde',
'*FLTSD': 'flthsd',
'FLTSD': 'fltsd',
'*FLTSZ': 'flthse',
'FLTSZ': 'fltse',
'*FLTS': 'flths',
'FLTS': 'flts',
'*FLTDZ': 'flthde',
'FLTDZ': 'fltde',
'*FLTD': 'flthd',
'FLTD': 'fltd',
'*FLTZ': 'flthe',
'FLTZ': 'flte',
'*FLT': 'flth',
'FLT': 'flt',
'*FLSDZ': 'flcde',
'FLSDZ': 'flsde',
'*FLSD': 'flcd',
'FLSD': 'flsd',
'*FLSZ': 'flce',
'FLSZ': 'flse',
'*FLS': 'flc',
'FLS': 'fls',
'*FLDZ': 'flye',
'FLDZ': 'flde',
'*FLD': 'fly',
'FLD': 'fld',
'*FLZ': 'flz',
'FLZ': 'fle',
'FL': 'fl',
'*FGTSDZ': 'fgthsde',
'FGTSDZ': 'fxtsde',
'*FGTSD': 'fgthsd',
'FGTSD': 'fxtsd',
'*FGTSZ': 'fgthse',
'FGTSZ': 'fxtse',
'*FGTS': 'fgths',
'FGTS': 'fxts',
'*FGTDZ': 'fgthde',
'FGTDZ': 'fxtde',
'*FGTD': 'fgthd',
'FGTD': 'fxtd',
'*FGTZ': 'fgthe',
'FGTZ': 'fxte',
'*FGT': 'fgth',
'FGT': 'fxt',
'*FGSDZ': 'fgcde',
'FGSDZ': 'ftionde',
'*FGSD': 'fgcd',
'FGSD': 'ftiond',
'*FGSZ': 'fgce',
'FGSZ': 'ftione',
'*FGS': 'fgc',
'FGS': 'ftion',
'*FGDZ': 'fgye',
'FGDZ': 'fgde',
'*FGD': 'fgy',
'FGD': 'fgd',
'*FGZ': 'fgz',
'FGZ': 'fge',
'FG': 'fg',
'*FTSDZ': 'ftee',
'FTSDZ': 'stee',
'*FTSD': 'fte',
'FTSD': 'ste',
'*FTSZ': 'ftse',
'FTSZ': 'ftse',
'*FTS': 'fts',
'FTS': 'fts',
'*FTDZ': 'ftde',
'FTDZ': 'stde',
'*FTD': 'ftd',
'FTD': 'std',
'*FTZ': 'fte',
'FTZ': 'fse',
'*FT': 'ft',
'FT': 'st',
'*FSDZ': 'fcde',
'FSDZ': 'fee',
'*FSD': 'fcd',
'FSD': 'fe',
'*FSZ': 'fce',
'FSZ': 'fse',
'*FS': 'fc',
'FS': 'fs',
'*FDZ': 'fe',
'FDZ': 'fde',
'*FD': 'fy',
'FD': 'fd',
'*FZ': 'fz',
'FZ': 'fe',
'F': 'f',
'*RPBLGTSDZ': 'rgthsde',
'RPBLGTSDZ': 'rgtsde',
'*RPBLGTSD': 'rgthsd',
'RPBLGTSD': 'rgtsd',
'*RPBLGTSZ': 'rgthse',
'RPBLGTSZ': 'rgtse',
'*RPBLGTS': 'rgths',
'RPBLGTS': 'rgts',
'*RPBLGTDZ': 'rgthde',
'RPBLGTDZ': 'rgtde',
'*RPBLGTD': 'rgthd',
'RPBLGTD': 'rgtd',
'*RPBLGTZ': 'rgthe',
'RPBLGTZ': 'rgse',
'*RPBLGT': 'rgth',
'RPBLGT': 'rgt',
'*RPBLGSDZ': 'rgcde',
'RPBLGSDZ': 'rgee',
'*RPBLGSD': 'rgcd',
'RPBLGSD': 'rge',
'*RPBLGSZ': 'rgce',
'RPBLGSZ': 'rjectione',
'*RPBLGS': 'rgc',
'RPBLGS': 'rjection',
'*RPBLGDZ': 'rge',
'RPBLGDZ': 'rgde',
'*RPBLGD': 'rgy',
'RPBLGD': 'rgd',
'*RPBLGZ': 'rgz',
'RPBLGZ': 'rge',
'RPBLG': 'rg',
'*RPBLTSDZ': 'rnlthsde',
'RPBLTSDZ': 'rnltsde',
'*RPBLTSD': 'rnlthsd',
'RPBLTSD': 'rnltsd',
'*RPBLTSZ': 'rnlthse',
'RPBLTSZ': 'rnltse',
'*RPBLTS': 'rnlths',
'RPBLTS': 'rnlts',
'*RPBLTDZ': 'rnlthde',
'RPBLTDZ': 'rnltde',
'*RPBLTD': 'rnlthd',
'RPBLTD': 'rnltd',
'*RPBLTZ': 'rnlthe',
'RPBLTZ': 'rnlte',
'*RPBLT': 'rnlth',
'RPBLT': 'rnlt',
'*RPBLSDZ': 'rnlcde',
'RPBLSDZ': 'rnlsde',
'*RPBLSD': 'rnlcd',
'RPBLSD': 'rnlsd',
'*RPBLSZ': 'rnlce',
'RPBLSZ': 'rnlse',
'*RPBLS': 'rnlc',
'RPBLS': 'rnls',
'*RPBLDZ': 'rnlye',
'RPBLDZ': 'rnlde',
'*RPBLD': 'rnly',
'RPBLD': 'rnld',
'*RPBLZ': 'rnlz',
'RPBLZ': 'rnle',
'RPBL': 'rnl',
'*RPBGTSDZ': 'rnktsde',
'RPBGTSDZ': 'rngtsde',
'*RPBGTSD': 'rnktsd',
'RPBGTSD': 'rngtsd',
'*RPBGTSZ': 'rnktse',
'RPBGTSZ': 'rngtse',
'*RPBGTS': 'rnkts',
'RPBGTS': 'rngts',
'*RPBGTDZ': 'rnktde',
'RPBGTDZ': 'rngtde',
'*RPBGTD': 'rnktd',
'RPBGTD': 'rngtd',
'*RPBGTZ': 'rnkte',
'RPBGTZ': 'rngte',
'*RPBGT': 'rnkt',
'RPBGT': 'rngt',
'*RPBGSDZ': 'rnksde',
'RPBGSDZ': 'rnctionde',
'*RPBGSD': 'rnksd',
'RPBGSD': 'rnctiond',
'*RPBGSZ': 'rnkse',
'RPBGSZ': 'rnctione',
'*RPBGS': 'rnks',
'RPBGS': 'rnction',
'*RPBGDZ': 'rnkde',
'RPBGDZ': 'rngde',
'*RPBGD': 'rnkd',
'RPBGD': 'rngd',
'*RPBGZ': 'rnke',
'RPBGZ': 'rnge',
'*RPBG': 'rnk',
'RPBG': 'rng',
'*RPBTSDZ': 'rnthsde',
'RPBTSDZ': 'rntsde',
'*RPBTSD': 'rnthsd',
'RPBTSD': 'rntsd',
'*RPBTSZ': 'rnthse',
'RPBTSZ': 'rntse',
'*RPBTS': 'rnths',
'RPBTS': 'rnts',
'*RPBTDZ': 'rnthde',
'RPBTDZ': 'rntde',
'*RPBTD': 'rnthd',
'RPBTD': 'rntd',
'*RPBTZ': 'rnthe',
'RPBTZ': 'rnte',
'*RPBT': 'rnth',
'RPBT': 'rnt',
'*RPBSDZ': 'rncde',
'RPBSDZ': 'rnsde',
'*RPBSD': 'rncd',
'RPBSD': 'rnsd',
'*RPBSZ': 'rnce',
'RPBSZ': 'rnse',
'*RPBS': 'rnc',
'RPBS': 'rns',
'*RPBDZ': 'rnye',
'RPBDZ': 'rnde',
'*RPBD': 'rny',
'RPBD': 'rnd',
'*RPBZ': 'rnz',
'RPBZ': 'rne',
'RPB': 'rn',
'*RPLGTSDZ': 'rmgthsde',
'RPLGTSDZ': 'rmgtsde',
'*RPLGTSD': 'rmgthsd',
'RPLGTSD': 'rmgtsd',
'*RPLGTSZ': 'rmgthse',
'RPLGTSZ': 'rmgtse',
'*RPLGTS': 'rmgths',
'RPLGTS': 'rmgts',
'*RPLGTDZ': 'rmgthde',
'RPLGTDZ': 'rmgtde',
'*RPLGTD': 'rmgthd',
'RPLGTD': 'rmgtd',
'*RPLGTZ': 'rmgthe',
'RPLGTZ': 'rmgte',
'*RPLGT': 'rmgth',
'RPLGT': 'rmgt',
'*RPLGSDZ': 'rmgcde',
'RPLGSDZ': 'rmgsde',
'*RPLGSD': 'rmgcd',
'RPLGSD': 'rmgsd',
'*RPLGSZ': 'rmgce',
'RPLGSZ': 'rmgse',
'*RPLGS': 'rmgc',
'RPLGS': 'rmgs',
'*RPLGDZ': 'rmgye',
'RPLGDZ': 'rmgde',
'*RPLGD': 'rmgy',
'RPLGD': 'rmgd',
'*RPLGZ': 'rmgz',
'RPLGZ': 'rmge',
'RPLG': 'rmg',
'*RPLTSDZ': 'rmthsde',
'RPLTSDZ': 'rmtsde',
'*RPLTSD': 'rmthsd',
'RPLTSD': 'rmtsd',
'*RPLTSZ': 'rmthse',
'RPLTSZ': 'rmtse',
'*RPLTS': 'rmths',
'RPLTS': 'rmts',
'*RPLTDZ': 'rmthde',
'RPLTDZ': 'rmtde',
'*RPLTD': 'rmthd',
'RPLTD': 'rmtd',
'*RPLTZ': 'rmthe',
'RPLTZ': 'rmte',
'*RPLT': 'rmth',
'RPLT': 'rmt',
'*RPLSDZ': 'rmcde',
'RPLSDZ': 'rmsde',
'*RPLSD': 'rmcd',
'RPLSD': 'rmsd',
'*RPLSZ': 'rmce',
'RPLSZ': 'rmse',
'*RPLS': 'rmc',
'RPLS': 'rms',
'*RPLDZ': 'rmye',
'RPLDZ': 'rmde',
'*RPLD': 'rmy',
'RPLD': 'rmd',
'*RPLZ': 'rmz',
'RPLZ': 'rme',
'RPL': 'rm',
'*RPGTSDZ': 'rpgthsde',
'RPGTSDZ': 'rpgtsde',
'*RPGTSD': 'rpgthsd',
'RPGTSD': 'rpgtsd',
'*RPGTSZ': 'rpgthse',
'RPGTSZ': 'rpgtse',
'*RPGTS': 'rpgths',
'RPGTS': 'rpgts',
'*RPGTDZ': 'rpgthde',
'RPGTDZ': 'rpgtde',
'*RPGTD': 'rpgthd',
'RPGTD': 'rpgtd',
'*RPGTZ': 'rpgthe',
'RPGTZ': 'rpgte',
'*RPGT': 'rpgth',
'RPGT': 'rpgt',
'*RPGSDZ': 'rpgcde',
'RPGSDZ': 'rpgsde',
'*RPGSD': 'rpgcd',
'RPGSD': 'rpgsd',
'*RPGSZ': 'rpgce',
'RPGSZ': 'rpgse',
'*RPGS': 'rpgc',
'RPGS': 'rpgs',
'*RPGDZ': 'rpgye',
'RPGDZ': 'rpgde',
'*RPGD': 'rpgy',
'RPGD': 'rpgd',
'*RPGZ': 'rpgz',
'RPGZ': 'rpge',
'RPG': 'rpg',
'*RPTSDZ': 'rpthsde',
'RPTSDZ': 'rptsde',
'*RPTSD': 'rpthsd',
'RPTSD': 'rptsd',
'*RPTSZ': 'rpthse',
'RPTSZ': 'rptse',
'*RPTS': 'rpths',
'RPTS': 'rpts',
'*RPTDZ': 'rpthde',
'RPTDZ': 'rptde',
'*RPTD': 'rpthd',
'RPTD': 'rptd',
'*RPTZ': 'rpthe',
'RPTZ': 'rpte',
'*RPT': 'rpth',
'RPT': 'rpt',
'*RPSDZ': 'rpcde',
'RPSDZ': 'rhde',
'*RPSD': 'rpcd',
'RPSD': 'rhd',
'*RPSZ': 'rpce',
'RPSZ': 'rhe',
'*RPS': 'rpc',
'RPS': 'rh',
'*RPDZ': 'rpye',
'RPDZ': 'rpde',
'*RPD': 'rpy',
'RPD': 'rpd',
'*RPZ': 'rh',
'RPZ': 'rpe',
'RP': 'rp',
'*RBLGTSDZ': 'rcklethsde',
'RBLGTSDZ': 'rrowxtsde',
'*RBLGTSD': 'rcklethsd',
'RBLGTSD': 'rrowxtsd',
'*RBLGTSZ': 'rcklethse',
'RBLGTSZ': 'rrowxtse',
'*RBLGTS': 'rckleths',
'RBLGTS': 'rrowxts',
'*RBLGTDZ': 'rcklethde',
'RBLGTDZ': 'rrowxtde',
'*RBLGTD': 'rcklethd',
'RBLGTD': 'rrowxtd',
'*RBLGTZ': 'rcklethe',
'RBLGTZ': 'rrowxte',
'*RBLGT': 'rckleth',
'RBLGT': 'rrowxt',
'*RBLGSDZ': 'rcklecde',
'RBLGSDZ': 'rrowtionde',
'*RBLGSD': 'rcklecd',
'RBLGSD': 'rrowtiond',
'*RBLGSZ': 'rcklece',
'RBLGSZ': 'rrowtione',
'*RBLGS': 'rcklec',
'RBLGS': 'rrowtion',
'*RBLGDZ': 'rckleye',
'RBLGDZ': 'rcklede',
'*RBLGD': 'rckley',
'RBLGD': 'rckled',
'*RBLGZ': 'rcklez',
'RBLGZ': 'rcklee',
'RBLG': 'rckle',
'*RBLTSDZ': 'rrowthsde',
'RBLTSDZ': 'rrowtsde',
'*RBLTSD': 'rrowthsd',
'RBLTSD': 'rrowtsd',
'*RBLTSZ': 'rrowthse',
'RBLTSZ': 'rrowtse',
'*RBLTS': 'rrowths',
'RBLTS': 'rrowts',
'*RBLTDZ': 'rrowthde',
'RBLTDZ': 'rrowtde',
'*RBLTD': 'rrowthd',
'RBLTD': 'rrowtd',
'*RBLTZ': 'rrowthe',
'RBLTZ': 'rrowse',
'*RBLT': 'rrowth',
'RBLT': 'rrowt',
'*RBLSDZ': 'rrowcde',
'RBLSDZ': 'rrowee',
'*RBLSD': 'rrowcd',
'RBLSD': 'rrowe',
'*RBLSZ': 'rrowce',
'RBLSZ': 'rrowse',
'*RBLS': 'rrowc',
'RBLS': 'rrows',
'*RBLDZ': 'rrowe',
'RBLDZ': 'rrowde',
'*RBLD': 'rrowy',
'RBLD': 'rrowd',
'*RBLZ': 'rrowz',
'RBLZ': 'rrowe',
'RBL': 'rrow',
'*RBGTSDZ': 'rcktsde',
'RBGTSDZ': 'rctsde',
'*RBGTSD': 'rcktsd',
'RBGTSD': 'rctsd',
'*RBGTSZ': 'rcktse',
'RBGTSZ': 'rctse',
'*RBGTS': 'rckts',
'RBGTS': 'rcts',
'*RBGTDZ': 'rcktde',
'RBGTDZ': 'rctde',
'*RBGTD': 'rcktd',
'RBGTD': 'rctd',
'*RBGTZ': 'rckte',
'RBGTZ': 'rkse',
'*RBGT': 'rckt',
'RBGT': 'rct',
'*RBGSDZ': 'rctionde',
'RBGSDZ': 'rkee',
'*RBGSD': 'rctiond',
'RBGSD': 'rke',
'*RBGSZ': 'rctione',
'RBGSZ': '{,}e',
'*RBGS': 'rction',
'RBGS': '{,}',
'*RBGDZ': 'rckde',
'RBGDZ': 'rkde',
'*RBGD': 'rckd',
'RBGD': 'rkd',
'*RBGZ': 'rcke',
'RBGZ': 'rke',
'*RBG': 'rck',
'RBG': 'rk',
'*RBTSDZ': 'shthsde',
'RBTSDZ': 'tialee',
'*RBTSD': 'shthsd',
'RBTSD': 'tiale',
'*RBTSZ': 'shthse',
'RBTSZ': 'shtse',
'*RBTS': 'shths',
'RBTS': 'shts',
'*RBTDZ': 'shthde',
'RBTDZ': 'tialde',
'*RBTD': 'shthd',
'RBTD': 'tiald',
'*RBTZ': 'shthe',
'RBTZ': 'shse',
'*RBT': 'shth',
'RBT': 'tial',
'*RBSDZ': 'shcde',
'RBSDZ': 'shee',
'*RBSD': 'shcd',
'RBSD': 'she',
'*RBSZ': 'shce',
'RBSZ': 'tiouse',
'*RBS': 'shc',
'RBS': 'tious',
'*RBDZ': 'she',
'RBDZ': 'shde',
'*RBD': 'shy',
'RBD': 'shd',
'*RBZ': 'shz',
'RBZ': 'she',
'RB': 'sh',
'*RLGTSDZ': 'rlgthsde',
'RLGTSDZ': 'rlgtsde',
'*RLGTSD': 'rlgthsd',
'RLGTSD': 'rlgtsd',
'*RLGTSZ': 'rlgthse',
'RLGTSZ': 'rlgtse',
'*RLGTS': 'rlgths',
'RLGTS': 'rlgts',
'*RLGTDZ': 'rlgthde',
'RLGTDZ': 'rlgtde',
'*RLGTD': 'rlgthd',
'RLGTD': 'rlgtd',
'*RLGTZ': 'rlgthe',
'RLGTZ': 'rlgte',
'*RLGT': 'rlgth',
'RLGT': 'rlgt',
'*RLGSDZ': 'rlgcde',
'RLGSDZ': 'rlgsde',
'*RLGSD': 'rlgcd',
'RLGSD': 'rlgsd',
'*RLGSZ': 'rlgce',
'RLGSZ': 'rlgse',
'*RLGS': 'rlgc',
'RLGS': 'rlgs',
'*RLGDZ': 'rlgye',
'RLGDZ': 'rlgde',
'*RLGD': 'rlgy',
'RLGD': 'rlgd',
'*RLGZ': 'rlgz',
'RLGZ': 'rlge',
'RLG': 'rlg',
'*RLTSDZ': 'rlthsde',
'RLTSDZ': 'rltsde',
'*RLTSD': 'rlthsd',
'RLTSD': 'rltsd',
'*RLTSZ': 'rlthse',
'RLTSZ': 'rltse',
'*RLTS': 'rlths',
'RLTS': 'rlts',
'*RLTDZ': 'rlthde',
'RLTDZ': 'rltde',
'*RLTD': 'rlthd',
'RLTD': 'rltd',
'*RLTZ': 'rlthe',
'RLTZ': 'rlte',
'*RLT': 'rlth',
'RLT': 'rlt',
'*RLSDZ': 'rlcde',
'RLSDZ': 'rlsde',
'*RLSD': 'rlcd',
'RLSD': 'rlsd',
'*RLSZ': 'rlce',
'RLSZ': 'rlse',
'*RLS': 'rlc',
'RLS': 'rls',
'*RLDZ': 'rlye',
'RLDZ': 'rlde',
'*RLD': 'rly',
'RLD': 'rld',
'*RLZ': 'rlz',
'RLZ': 'rle',
'RL': 'rl',
'*RGTSDZ': 'rgthsde',
'RGTSDZ': 'rxtsde',
'*RGTSD': 'rgthsd',
'RGTSD': 'rxtsd',
'*RGTSZ': 'rgthse',
'RGTSZ': 'rxtse',
'*RGTS': 'rgths',
'RGTS': 'rxts',
'*RGTDZ': 'rgthde',
'RGTDZ': 'rxtde',
'*RGTD': 'rgthd',
'RGTD': 'rxtd',
'*RGTZ': 'rgthe',
'RGTZ': 'rxte',
'*RGT': 'rgth',
'RGT': 'rxt',
'*RGSDZ': 'rgcde',
'RGSDZ': 'rtionde',
'*RGSD': 'rgcd',
'RGSD': 'rtiond',
'*RGSZ': 'rgce',
'RGSZ': 'rtione',
'*RGS': 'rgc',
'RGS': 'rtion',
'*RGDZ': 'rgye',
'RGDZ': 'rgde',
'*RGD': 'rgy',
'RGD': 'rgd',
'*RGZ': 'rgz',
'RGZ': 'rge',
'RG': 'rg',
'*RTSDZ': 'rthsde',
'RTSDZ': 'rtsde',
'*RTSD': 'rthsd',
'RTSD': 'rtsd',
'*RTSZ': 'rthse',
'RTSZ': 'rtse',
'*RTS': 'rths',
'RTS': 'rts',
'*RTDZ': 'rthde',
'RTDZ': 'rtde',
'*RTD': 'rthd',
'RTD': 'rtd',
'*RTZ': 'rthe',
'RTZ': 'rse',
'*RT': 'rth',
'RT': 'rt',
'*RSDZ': 'rcde',
'RSDZ': 'ree',
'*RSD': 'rcd',
'RSD': 're',
'*RSZ': 'rce',
'RSZ': 'rse',
'*RS': 'rc',
'RS': 'rs',
'*RDZ': 're',
'RDZ': 'rde',
'*RD': 'ry',
'RD': 'rd',
'*RZ': 'rz',
'RZ': 're',
'R': 'r',
'*PBLGTSDZ': 'dgthsde',
'PBLGTSDZ': 'dgtsde',
'*PBLGTSD': 'dgthsd',
'PBLGTSD': 'dgtsd',
'*PBLGTSZ': 'dgthse',
'PBLGTSZ': 'dgtse',
'*PBLGTS': 'dgths',
'PBLGTS': 'dgts',
'*PBLGTDZ': 'dgthde',
'PBLGTDZ': 'dgtde',
'*PBLGTD': 'dgthd',
'PBLGTD': 'dgtd',
'*PBLGTZ': 'dgthe',
'PBLGTZ': 'dgse',
'*PBLGT': 'dgth',
'PBLGT': 'dgt',
'*PBLGSDZ': 'dgcde',
'PBLGSDZ': 'dgee',
'*PBLGSD': 'dgcd',
'PBLGSD': 'dge',
'*PBLGSZ': 'dgce',
'PBLGSZ': 'jectione',
'*PBLGS': 'dgc',
'PBLGS': 'jection',
'*PBLGDZ': 'dge',
'PBLGDZ': 'dgde',
'*PBLGD': 'dgy',
'PBLGD': 'dgd',
'*PBLGZ': 'dgz',
'PBLGZ': 'dge',
'PBLG': 'dg',
'*PBLTSDZ': 'nlthsde',
'PBLTSDZ': 'nltsde',
'*PBLTSD': 'nlthsd',
'PBLTSD': 'nltsd',
'*PBLTSZ': 'nlthse',
'PBLTSZ': 'nltse',
'*PBLTS': 'nlths',
'PBLTS': 'nlts',
'*PBLTDZ': 'nlthde',
'PBLTDZ': 'nltde',
'*PBLTD': 'nlthd',
'PBLTD': 'nltd',
'*PBLTZ': 'nlthe',
'PBLTZ': 'nlte',
'*PBLT': 'nlth',
'PBLT': 'nlt',
'*PBLSDZ': 'nlcde',
'PBLSDZ': 'nlsde',
'*PBLSD': 'nlcd',
'PBLSD': 'nlsd',
'*PBLSZ': 'nlce',
'PBLSZ': 'nlse',
'*PBLS': 'nlc',
'PBLS': 'nls',
'*PBLDZ': 'nlye',
'PBLDZ': 'nlde',
'*PBLD': 'nly',
'PBLD': 'nld',
'*PBLZ': 'nlz',
'PBLZ': 'nle',
'PBL': 'nl',
'*PBGTSDZ': 'nktsde',
'PBGTSDZ': 'pctsde',
'*PBGTSD': 'nktsd',
'PBGTSD': 'pctsd',
'*PBGTSZ': 'nktse',
'PBGTSZ': 'pctse',
'*PBGTS': 'nkts',
'PBGTS': 'pcts',
'*PBGTDZ': 'nktde',
'PBGTDZ': 'pctde',
'*PBGTD': 'nktd',
'PBGTD': 'pctd',
'*PBGTZ': 'nkse',
'PBGTZ': 'ngse',
'*PBGT': 'nkt',
'PBGT': 'pct',
'*PBGSDZ': 'nkee',
'PBGSDZ': 'ngee',
'*PBGSD': 'nke',
'PBGSD': 'nge',
'*PBGSZ': 'nkse',
'PBGSZ': 'nctione',
'*PBGS': 'pction',
'PBGS': 'nction',
'*PBGDZ': 'nkde',
'PBGDZ': 'ngde',
'*PBGD': 'nkd',
'PBGD': 'ngd',
'*PBGZ': 'nke',
'PBGZ': 'nge',
'*PBG': 'nk',
'PBG': 'ng',
'*PBTSDZ': 'nthsde',
'PBTSDZ': 'ntsde',
'*PBTSD': 'nthsd',
'PBTSD': 'ntsd',
'*PBTSZ': 'nthse',
'PBTSZ': 'ntse',
'*PBTS': 'nths',
'PBTS': 'nts',
'*PBTDZ': 'nthde',
'PBTDZ': 'ntde',
'*PBTD': 'nthd',
'PBTD': 'ntd',
'*PBTZ': 'nthe',
'PBTZ': 'nse',
'*PBT': 'nth',
'PBT': 'nt',
'*PBSDZ': 'ncde',
'PBSDZ': 'nee',
'*PBSD': 'ncd',
'PBSD': 'ne',
'*PBSZ': 'nce',
'PBSZ': 'nse',
'*PBS': 'nc',
'PBS': 'ns',
'*PBDZ': 'ne',
'PBDZ': 'nde',
'*PBD': 'ny',
'PBD': 'nd',
'*PBZ': 'nz',
'PBZ': 'ne',
'PB': 'n',
'*PLGTSDZ': 'mgthsde',
'PLGTSDZ': 'mxtsde',
'*PLGTSD': 'mgthsd',
'PLGTSD': 'mxtsd',
'*PLGTSZ': 'mgthse',
'PLGTSZ': 'mxtse',
'*PLGTS': 'mgths',
'PLGTS': 'mxts',
'*PLGTDZ': 'mgthde',
'PLGTDZ': 'mxtde',
'*PLGTD': 'mgthd',
'PLGTD': 'mxtd',
'*PLGTZ': 'mgthe',
'PLGTZ': 'mxte',
'*PLGT': 'mgth',
'PLGT': 'mxt',
'*PLGSDZ': 'mgcde',
'PLGSDZ': 'mtionde',
'*PLGSD': 'mgcd',
'PLGSD': 'mtiond',
'*PLGSZ': 'mgce',
'PLGSZ': 'mtione',
'*PLGS': 'mgc',
'PLGS': 'mtion',
'*PLGDZ': 'mgye',
'PLGDZ': 'mgde',
'*PLGD': 'mgy',
'PLGD': 'mgd',
'*PLGZ': 'mgz',
'PLGZ': 'mge',
'PLG': 'mg',
'*PLTSDZ': 'mthsde',
'PLTSDZ': 'mtsde',
'*PLTSD': 'mthsd',
'PLTSD': 'mtsd',
'*PLTSZ': 'mthse',
'PLTSZ': 'mtse',
'*PLTS': 'mths',
'PLTS': 'mts',
'*PLTDZ': 'mthde',
'PLTDZ': 'mtde',
'*PLTD': 'mthd',
'PLTD': 'mtd',
'*PLTZ': 'mthe',
'PLTZ': 'mse',
'*PLT': 'mth',
'PLT': 'mt',
'*PLSDZ': 'mcde',
'PLSDZ': 'mee',
'*PLSD': 'mcd',
'PLSD': 'me',
'*PLSZ': 'mce',
'PLSZ': 'mse',
'*PLS': 'mc',
'PLS': 'ms',
'*PLDZ': 'me',
'PLDZ': 'mde',
'*PLD': 'my',
'PLD': 'md',
'*PLZ': 'mz',
'PLZ': 'me',
'PL': 'm',
'*PGTSDZ': 'pgthsde',
'PGTSDZ': 'pxtsde',
'*PGTSD': 'pgthsd',
'PGTSD': 'pxtsd',
'*PGTSZ': 'pgthse',
'PGTSZ': 'pxtse',
'*PGTS': 'pgths',
'PGTS': 'pxts',
'*PGTDZ': 'pgthde',
'PGTDZ': 'pxtde',
'*PGTD': 'pgthd',
'PGTD': 'pxtd',
'*PGTZ': 'pgthe',
'PGTZ': 'pxte',
'*PGT': 'pgth',
'PGT': 'pxt',
'*PGSDZ': 'pgcde',
'PGSDZ': 'ptionde',
'*PGSD': 'pgcd',
'PGSD': 'ptiond',
'*PGSZ': 'pgce',
'PGSZ': 'ptione',
'*PGS': 'pgc',
'PGS': 'ption',
'*PGDZ': 'pgye',
'PGDZ': 'pgde',
'*PGD': 'pgy',
'PGD': 'pgd',
'*PGZ': 'pgz',
'PGZ': 'pge',
'PG': 'pg',
'*PTSDZ': 'pthsde',
'PTSDZ': 'ptsde',
'*PTSD': 'pthsd',
'PTSD': 'ptsd',
'*PTSZ': 'pthse',
'PTSZ': 'ptse',
'*PTS': 'pths',
'PTS': 'pts',
'*PTDZ': 'pthde',
'PTDZ': 'ptde',
'*PTD': 'pthd',
'PTD': 'ptd',
'*PTZ': 'pthe',
'PTZ': 'pse',
'*PT': 'pth',
'PT': 'pt',
'*PSDZ': 'pcde',
'PSDZ': 'pee',
'*PSD': 'pcd',
'PSD': 'pe',
'*PSZ': 'pce',
'PSZ': 'he',
'*PS': 'pc',
'PS': 'h',
'*PDZ': 'pe',
'PDZ': 'pde',
'*PD': 'py',
'PD': 'pd',
'*PZ': 'h',
'PZ': 'pe',
'P': 'p',
'*BLGTSDZ': 'cklethsde',
'BLGTSDZ': 'ckletsde',
'*BLGTSD': 'cklethsd',
'BLGTSD': 'ckletsd',
'*BLGTSZ': 'cklethse',
'BLGTSZ': 'ckletse',
'*BLGTS': 'ckleths',
'BLGTS': 'cklets',
'*BLGTDZ': 'cklethde',
'BLGTDZ': 'ckletde',
'*BLGTD': 'cklethd',
'BLGTD': 'ckletd',
'*BLGTZ': 'cklethe',
'BLGTZ': 'cklese',
'*BLGT': 'ckleth',
'BLGT': 'cklet',
'*BLGSDZ': 'cklecde',
'BLGSDZ': 'ckleee',
'*BLGSD': 'cklecd',
'BLGSD': 'cklee',
'*BLGSZ': 'cklece',
'BLGSZ': 'cklese',
'*BLGS': 'cklec',
'BLGS': 'ckles',
'*BLGDZ': 'cklee',
'BLGDZ': 'cklede',
'*BLGD': 'ckley',
'BLGD': 'ckled',
'*BLGZ': 'cklez',
'BLGZ': 'cklee',
'BLG': 'ckle',
'*BLTSDZ': 'blthsde',
'BLTSDZ': 'bltsde',
'*BLTSD': 'blthsd',
'BLTSD': 'bltsd',
'*BLTSZ': 'blthse',
'BLTSZ': 'bltse',
'*BLTS': 'blths',
'BLTS': 'blts',
'*BLTDZ': 'blthde',
'BLTDZ': 'bltde',
'*BLTD': 'blthd',
'BLTD': 'bltd',
'*BLTZ': 'blthe',
'BLTZ': 'blte',
'*BLT': 'blth',
'BLT': 'blt',
'*BLSDZ': 'blcde',
'BLSDZ': 'blsde',
'*BLSD': 'blcd',
'BLSD': 'blsd',
'*BLSZ': 'blce',
'BLSZ': 'blse',
'*BLS': 'blc',
'BLS': 'bls',
'*BLDZ': 'blye',
'BLDZ': 'blde',
'*BLD': 'bly',
'BLD': 'bld',
'*BLZ': 'blz',
'BLZ': 'ble',
'BL': 'bl',
'*BGTSDZ': 'cktee',
'BGTSDZ': 'ctee',
'*BGTSD': 'ckte',
'BGTSD': 'cte',
'*BGTSZ': 'cktse',
'BGTSZ': 'ctse',
'*BGTS': 'kths',
'BGTS': 'cts',
'*BGTDZ': 'cktde',
'BGTDZ': 'ctde',
'*BGTD': 'cktd',
'BGTD': 'ctd',
'*BGTZ': 'ckse',
'BGTZ': 'kse',
'*BGT': 'kth',
'BGT': 'ct',
'*BGSDZ': 'ckee',
'BGSDZ': 'kee',
'*BGSD': 'cke',
'BGSD': 'ke',
'*BGSZ': 'ctione',
'BGSZ': 'xe',
'*BGS': 'ction',
'BGS': 'x',
'*BGDZ': 'ckde',
'BGDZ': 'kde',
'*BGD': 'ckd',
'BGD': 'kd',
'*BGZ': 'cke',
'BGZ': 'ke',
'*BG': 'ck',
'BG': 'k',
'*BTSDZ': 'bthsde',
'BTSDZ': 'btsde',
'*BTSD': 'bthsd',
'BTSD': 'btsd',
'*BTSZ': 'bthse',
'BTSZ': 'btse',
'*BTS': 'bths',
'BTS': 'bts',
'*BTDZ': 'bthde',
'BTDZ': 'btde',
'*BTD': 'bthd',
'BTD': 'btd',
'*BTZ': 'bthe',
'BTZ': 'bse',
'*BT': 'bth',
'BT': 'bt',
'*BSDZ': 'bcde',
'BSDZ': 'bee',
'*BSD': 'bcd',
'BSD': 'be',
'*BSZ': 'bce',
'BSZ': 'bse',
'*BS': 'bc',
'BS': 'bs',
'*BDZ': 'be',
'BDZ': 'bde',
'*BD': 'by',
'BD': 'bd',
'*BZ': 'bz',
'BZ': 'be',
'B': 'b',
'*LGTSDZ': 'lgthsde',
'LGTSDZ': 'lxtsde',
'*LGTSD': 'lgthsd',
'LGTSD': 'lxtsd',
'*LGTSZ': 'lgthse',
'LGTSZ': 'lxtse',
'*LGTS': 'lgths',
'LGTS': 'lxts',
'*LGTDZ': 'lgthde',
'LGTDZ': 'lxtde',
'*LGTD': 'lgthd',
'LGTD': 'lxtd',
'*LGTZ': 'lgthe',
'LGTZ': 'lxte',
'*LGT': 'lgth',
'LGT': 'lxt',
'*LGSDZ': 'lgcde',
'LGSDZ': 'ltionde',
'*LGSD': 'lgcd',
'LGSD': 'ltiond',
'*LGSZ': 'lgce',
'LGSZ': 'ltione',
'*LGS': 'lgc',
'LGS': 'ltion',
'*LGDZ': 'lgye',
'LGDZ': 'lgde',
'*LGD': 'lgy',
'LGD': 'lgd',
'*LGZ': 'lgz',
'LGZ': 'lge',
'LG': 'lg',
'*LTSDZ': 'lthsde',
'LTSDZ': 'ltsde',
'*LTSD': 'lthsd',
'LTSD': 'ltsd',
'*LTSZ': 'lthse',
'LTSZ': 'ltse',
'*LTS': 'lths',
'LTS': 'lts',
'*LTDZ': 'lthde',
'LTDZ': 'ltde',
'*LTD': 'lthd',
'LTD': 'ltd',
'*LTZ': 'lthe',
'LTZ': 'lse',
'*LT': 'lth',
'LT': 'lt',
'*LSDZ': 'lcde',
'LSDZ': 'lee',
'*LSD': 'lcd',
'LSD': 'le',
'*LSZ': 'lce',
'LSZ': 'lse',
'*LS': 'lc',
'LS': 'ls',
'*LDZ': 'le',
'LDZ': 'lde',
'*LD': 'ly',
'LD': 'ld',
'*LZ': 'lz',
'LZ': 'le',
'L': 'l',
'*GTSDZ': 'gthsde',
'GTSDZ': 'xtee',
'*GTSD': 'gthsd',
'GTSD': 'xte',
'*GTSZ': 'gthse',
'GTSZ': 'gtse',
'*GTS': 'gths',
'GTS': 'gts',
'*GTDZ': 'gthde',
'GTDZ': 'xtde',
'*GTD': 'gthd',
'GTD': 'xtd',
'*GTZ': 'gthe',
'GTZ': 'gse',
'*GT': 'gth',
'GT': 'xt',
'*GSDZ': 'gcde',
'GSDZ': 'gee',
'*GSD': 'gcd',
'GSD': 'ge',
'*GSZ': 'gce',
'GSZ': "{^'^}",
'*GS': 'gc',
'GS': 'tion',
'*GDZ': 'ge',
'GDZ': 'gde',
'*GD': 'gy',
'GD': 'gd',
'*GZ': 'gz',
'GZ': 'ge',
'G': 'g',
'*TSDZ': 'thee',
'TSDZ': 'tee',
'*TSD': 'the',
'TSD': 'te',
'*TSZ': 'thse',
'TSZ': 'tse',
'*TS': 'tc',
'TS': 'ts',
'*TDZ': 'thde',
'TDZ': 'tde',
'*TD': 'thd',
'TD': 'td',
'*TZ': 'tz',
'TZ': 'se',
'*T': 'th',
'T': 't',
'*SDZ': 'cde',
'SDZ': 'ee',
'*SD': 'sy',
'SD': 'e',
'*SZ': 'ce',
'SZ': 'se',
'*S': 'c',
'S': 's',
'*DZ': 'e',
'DZ': 'de',
'*D': 'y',
'D': 'd',
'*Z': 'z',
'Z': 'e',
}




import re

LONGEST_KEY = 20

numbers_to_letters = {
    "1": "S",
    "2": "T",
    "3": "P",
    "4": "H",
    "5": "A",
    "6": "F",
    "7": "P",
    "8": "L",
    "9": "T",
    "0": "O"
    }

def aericks_denumberizer(old_outline):

    old_strokes = old_outline.split("/")
    new_strokes = []

    for stroke in old_strokes:

        new_strokes.append(stroke)

        for match in numbers_to_letters.keys():

            if match in stroke:

                if new_strokes[-1][0] != "#":
                    new_strokes[-1] = "#" + new_strokes[-1]

                new_strokes[-1] = new_strokes[-1].replace(match, numbers_to_letters[match])

        if new_strokes == []:
            new_strokes = old_strokes

    return "/".join(new_strokes)


def lookup(strokes):

    if not strokes[0] == "#T":
        raise KeyError



    output_string=""

    for stroke in strokes:
        if stroke=="+":
            raise KeyError

        #punctuation
        if stroke=="TK-LS":
            raise KeyError
        if stroke=="S-P":
            raise KeyError
        if stroke=="KPA":
            raise KeyError
        if stroke=="KPA*":
            raise KeyError
        if stroke=="R-R":
            raise KeyError
        if stroke=="TP-PL":
            raise KeyError
        if stroke=="KW-PL":
            raise KeyError
        if stroke=="TP-BG":
            raise KeyError
        if stroke=="KW-BG":
            raise KeyError
        if stroke=="AEZ":
            raise KeyError

        #navigation
        if stroke=="STPH-R":
            raise KeyError
        if stroke=="STPH-RB":
            raise KeyError
        if stroke=="STPH-P":
            raise KeyError
        if stroke=="STPH-B":
            raise KeyError
        if stroke=="STPH-BG":
            raise KeyError
        if stroke=="STPH-G":
            raise KeyError
        if stroke=="PW-FP":
            raise KeyError
        
        #Emily's stuff (might also have to do this for my phrasing too?)
        if "SKWH"in stroke:
            raise KeyError
        if "LTZ" in stroke:
            raise KeyError


    if (len(strokes)) == 1:
        return(" ")

    for stroke_number in range(len(strokes)):



        if not stroke_number ==0 and strokes[stroke_number] =="#T":
            raise KeyError



        #match the strokes
        match= re.fullmatch(
            #dissect the string to starter_letters, vowels and ender_letters
            r'(#?)(S?T?K?P?W?H?R?)(A?O?\*?\-?E?U?)(F?R?P?B?L?G?T?S?D?Z?)',

            #this string:
            aericks_denumberizer(strokes[stroke_number]))

        if not match:
            raise KeyError

        start_thing=starter_letter[match[2]]
        if "*" in match[3]:
            end_thing=ender_letter["*"+match[4]]
            if not end_thing:
                raise KeyError
        else:
            end_thing=ender_letter[match[4]]
        middle_thing=vowels[match[3].replace("*","")]



        if not stroke_number==0:
            if "#" in match[1]:
                output_string+=(
                    (start_thing+
                    middle_thing+
                    end_thing
                    ).capitalize())

            else:
                output_string+=(
                    start_thing+
                    middle_thing+
                    end_thing
                    )
    return output_string
