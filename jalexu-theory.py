"""
@Jalexu wants a deterministic steno theory, cause they don't like the idea of adding words into their dictionary forever
"""


starter_letter={
        '':'',
        'STKPWHR': 'zl',
        'STKPWH': 'zh',
        'STKPWR': 'zr',
        'STKPW': 'z',
        'STKPHR': 'displ',
        'STKPH': 'dism',
        'STKPR': 'dispr',
        'STKP': 'disp',
        'STKWHR': 'diswhr',
        'STKWH': 'diswh',
        'STKWR': 'diswr',
        'STKW': 'disw',
        'STKHR': 'disl',
        'STKH': 'dish',
        'STKR': 'disr',
        'STK': 'dis',
        'STPWHR': 'sfwhr',
        'STPWH': 'sfwh',
        'STPWR': 'sfwr',
        'STPW': 'sfw',
        'STPHR': 'snr',
        'STPH': 'sn',
        'STPR': 'sfr',
        'STP': 'sf',
        'STWHR': 'stwhr',
        'STWH': 'stwh',
        'STWR': 'stwr',
        'STW': 'stw',
        'STHR': 'sthr',
        'STH': 'sth',
        'STR': 'str',
        'ST': 'st',
        'SKPWHR': 'simphr',
        'SKPWH': 'simph',
        'SKPWR': 'simpr',
        'SKPW': 'simp',
        'SKPHR': 'skphr',
        'SKPH': 'skph',
        'SKPR': 'skpr',
        'SKP': 'skp',
        'SKWHR': 'squhr',
        'SKWH': 'squh',
        'SKWR': 'j',
        'SKW': 'squ',
        'SKHR': 'shr',
        'SKH': 'sch',
        'SKR': 'sc',
        'SK': 'sk',
        'SPWHR': 'sbhr',
        'SPWH': 'sbh',
        'SPWR': 'sbr',
        'SPW': 'sb',
        'SPHR': 'spl',
        'SPH': 'sm',
        'SPR': 'spr',
        'SP': 'sp',
        'SWHR': 'swhr',
        'SWH': 'swh',
        'SWR': 'swr',
        'SW': 'sw',
        'SHR': 'sl',
        'SH': 'sh',
        'SR': 'v',
        'S': 's',
        'TKPWHR': 'gl',
        'TKPWH': 'gh',
        'TKPWR': 'gr',
        'TKPW': 'g',
        'TKPHR': 'dpl',
        'TKPH': 'dm',
        'TKPR': 'dpr',
        'TKP': 'dp',
        'TKWHR': 'tquhr',
        'TKWH': 'tquh',
        'TKWR': 'ty',
        'TKW': 'tqu',
        'TKHR': 'dl',
        'TKH': 'tch',
        'TKR': 'tc',
        'TK': 'd',
        'TPWHR': 'tbhr',
        'TPWH': 'tbh',
        'TPWR': 'tbr',
        'TPW': 'tb',
        'TPHR': 'tpl',
        'TPH': 'n',
        'TPR': 'fr',
        'TP': 'f',
        'TWHR': 'twhr',
        'TWH': 'twh',
        'TWR': 'twr',
        'TW': 'tw',
        'THR': 'tl',
        'TH': 'th',
        'TR': 'tr',
        'T': 't',
        'KPWHR': 'impl',
        'KPWH': 'imph',
        'KPWR': 'impr',
        'KPW': 'imp',
        'KPHR': 'kpl',
        'KPH': 'km',
        'KPR': 'kpr',
        'KP': 'kp',
        'KWHR': 'qul',
        'KWH': 'quh',
        'KWR': 'y',
        'KW': 'qu',
        'KHR': 'kl',
        'KH': 'ch',
        'KR': 'c',
        'K': 'k',
        'PWHR': 'bl',
        'PWH': 'bh',
        'PWR': 'br',
        'PW': 'b',
        'PHR': 'pl',
        'PH': 'm',
        'PR': 'pr',
        'P': 'p',
        'WHR': 'wl',
        'WH': 'wh',
        'WR': 'wr',
        'W': 'w',
        'HR': 'l',
        'H': 'h',
        'R': 'r'
}





        

vowels={
    "-":"",
    
    "*":"",

    "A": "a",
    "AO":"oo",
    "AOE":"ee",
    "AOEU":"i_e", #or "ie" if at the end
    "AOU":"u_e", #or "due" or "dew"
    "AE":"ea",
    "AEU":"a_e",
    "AU":"aw", 

    "O":"o",
    "OE":"o_e", #or "ow" if at the end
    "OEU":"oi", #or "oy" if at the end
    "OU":"ou", #or "ow" if at the end

    "E":"e",
    "EU":"i", #or "y" if at the end

    "U": "u"
}

ender_letter={
        '':'',
        'FRPBLGTSD': 'magetsd',
        'FRPBLGTS': 'magets',
        'FRPBLGTD': 'magetd',
        'FRPBLGT': 'maget',
        'FRPBLGSD': 'magesed',
        'FRPBLGS': 'magese',
        'FRPBLGD': 'maged',
        'FRPBLG': 'mage',
        'FRPBLTSD': 'mpbltsed',
        'FRPBLTS': 'mpbltse',
        'FRPBLTD': 'mpbltd',
        'FRPBLT': 'mpblt',
        'FRPBLSD': 'mpblsed',
        'FRPBLS': 'mpblse',
        'FRPBLD': 'mpbld',
        'FRPBL': 'mpbl',
        'FRPBGTSD': 'rchxtsed',
        'FRPBGTS': 'rchxtse',
        'FRPBGTD': 'rchxtd',
        'FRPBGT': 'rchxt',
        'FRPBGSD': 'vernctiond',
        'FRPBGS': 'vernction',
        'FRPBGD': 'verngd',
        'FRPBG': 'verng',
        'FRPBTSD': 'rchtsd',
        'FRPBTS': 'rchts',
        'FRPBTD': 'rchtd',
        'FRPBT': 'rcht',
        'FRPBSD': 'rchsed',
        'FRPBS': 'rchse',
        'FRPBD': 'rchd',
        'FRPB': 'rch',
        'FRPLGTSD': 'mplextsed',
        'FRPLGTS': 'mplextse',
        'FRPLGTD': 'mplextd',
        'FRPLGT': 'mplext',
        'FRPLGSD': 'mpletiond',
        'FRPLGS': 'mpletion',
        'FRPLGD': 'mplegd',
        'FRPLG': 'mpleg',
        'FRPLTSD': 'mpletsd',
        'FRPLTS': 'mplets',
        'FRPLTD': 'mpletd',
        'FRPLT': 'mplet',
        'FRPLSD': 'mplesed',
        'FRPLS': 'mplese',
        'FRPLD': 'mpled',
        'FRPL': 'mple',
        'FRPGTSD': 'mpxtsed',
        'FRPGTS': 'mpxtse',
        'FRPGTD': 'mpxtd',
        'FRPGT': 'mpxt',
        'FRPGSD': 'mptiond',
        'FRPGS': 'mption',
        'FRPGD': 'mpgd',
        'FRPG': 'mpg',
        'FRPTSD': 'mptsd',
        'FRPTS': 'mpts',
        'FRPTD': 'mptd',
        'FRPT': 'mpt',
        'FRPSD': 'mpsed',
        'FRPS': 'mpse',
        'FRPD': 'mpd',
        'FRP': 'mp',
        'FRBLGTSD': 'mblextsed',
        'FRBLGTS': 'mblextse',
        'FRBLGTD': 'mblextd',
        'FRBLGT': 'mblext',
        'FRBLGSD': 'mbletiond',
        'FRBLGS': 'mbletion',
        'FRBLGD': 'mblegd',
        'FRBLG': 'mbleg',
        'FRBLTSD': 'mbletsd',
        'FRBLTS': 'mblets',
        'FRBLTD': 'mbletd',
        'FRBLT': 'mblet',
        'FRBLSD': 'mblesed',
        'FRBLS': 'mblese',
        'FRBLD': 'mbled',
        'FRBL': 'mble',
        'FRBGTSD': 'rvextsed',
        'FRBGTS': 'rvextse',
        'FRBGTD': 'rvextd',
        'FRBGT': 'rvext',
        'FRBGSD': 'verxd',
        'FRBGS': 'verx',
        'FRBGD': 'verckd',
        'FRBG': 'verck',
        'FRBTSD': 'rvetsd',
        'FRBTS': 'rvets',
        'FRBTD': 'ftiald',
        'FRBT': 'ftial',
        'FRBSD': 'ftiousd',
        'FRBS': 'ftious',
        'FRBD': 'rved',
        'FRB': 'rve',
        'FRLGTSD': 'mlextsed',
        'FRLGTS': 'mlextse',
        'FRLGTD': 'mlextd',
        'FRLGT': 'mlext',
        'FRLGSD': 'mletiond',
        'FRLGS': 'mletion',
        'FRLGD': 'mlegd',
        'FRLG': 'mleg',
        'FRLTSD': 'mletsd',
        'FRLTS': 'mlets',
        'FRLTD': 'mletd',
        'FRLT': 'mlet',
        'FRLSD': 'mlesed',
        'FRLS': 'mlese',
        'FRLD': 'mled',
        'FRL': 'mle',
        'FRGTSD': 'verxtsed',
        'FRGTS': 'verxtse',
        'FRGTD': 'verxtd',
        'FRGT': 'verxt',
        'FRGSD': 'vertiond',
        'FRGS': 'vertion',
        'FRGD': 'vergd',
        'FRG': 'verg',
        'FRTSD': 'vertsd',
        'FRTS': 'verts',
        'FRTD': 'vertd',
        'FRT': 'vert',
        'FRSD': 'versed',
        'FRS': 'verse',
        'FRD': 'verd',
        'FR': 'ver',
        'FPBLGTSD': 'fdgetsed',
        'FPBLGTS': 'fdgetse',
        'FPBLGTD': 'fdgetd',
        'FPBLGT': 'fdget',
        'FPBLGSD': 'fdgesed',
        'FPBLGS': 'fdgese',
        'FPBLGD': 'fdged',
        'FPBLG': 'fdge',
        'FPBLTSD': 'chbltsed',
        'FPBLTS': 'chbltse',
        'FPBLTD': 'chbltd',
        'FPBLT': 'chblt',
        'FPBLSD': 'chblsed',
        'FPBLS': 'chblse',
        'FPBLD': 'chbld',
        'FPBL': 'chbl',
        'FPBGTSD': 'venxtsed',
        'FPBGTS': 'venxtse',
        'FPBGTD': 'venxtd',
        'FPBGT': 'venxt',
        'FPBGSD': 'fnctiond',
        'FPBGS': 'fnction',
        'FPBGD': 'fngd',
        'FPBG': 'fng',
        'FPBTSD': 'ventsd',
        'FPBTS': 'vents',
        'FPBTD': 'ventd',
        'FPBT': 'vent',
        'FPBSD': 'vensed',
        'FPBS': 'vense',
        'FPBD': 'vend',
        'FPB': 'ven',
        'FPLGTSD': 'tualxtsed',
        'FPLGTS': 'tualxtse',
        'FPLGTD': 'tualxtd',
        'FPLGT': 'tualxt',
        'FPLGSD': 'tualtiond',
        'FPLGS': 'tualtion',
        'FPLGD': 'tualgd',
        'FPLG': 'tualg',
        'FPLTSD': 'tualtsd',
        'FPLTS': 'tualts',
        'FPLTD': 'tualtd',
        'FPLT': 'tualt',
        'FPLSD': 'tualsed',
        'FPLS': 'tualse',
        'FPLD': 'tuald',
        'FPL': 'tual',
        'FPGTSD': 'chxtsed',
        'FPGTS': 'chxtse',
        'FPGTD': 'chxtd',
        'FPGT': 'chxt',
        'FPGSD': 'chtiond',
        'FPGS': 'chtion',
        'FPGD': 'chgd',
        'FPG': 'chg',
        'FPTSD': 'chtsd',
        'FPTS': 'chts',
        'FPTD': 'chtd',
        'FPT': 'cht',
        'FPSD': 'chsed',
        'FPS': 'chse',
        'FPD': 'chd',
        'FP': 'ch',
        'FBLGTSD': 'fblgtsed',
        'FBLGTS': 'fblgtse',
        'FBLGTD': 'fblgtd',
        'FBLGT': 'fblgt',
        'FBLGSD': 'fblgsed',
        'FBLGS': 'fblgse',
        'FBLGD': 'fblgd',
        'FBLG': 'fblg',
        'FBLTSD': 'fbltsed',
        'FBLTS': 'fbltse',
        'FBLTD': 'fbltd',
        'FBLT': 'fblt',
        'FBLSD': 'fblsed',
        'FBLS': 'fblse',
        'FBLD': 'fbld',
        'FBL': 'fbl',
        'FBGTSD': 'vextsed',
        'FBGTS': 'vextse',
        'FBGTD': 'vextd',
        'FBGT': 'vext',
        'FBGSD': 'fxd',
        'FBGS': 'fx',
        'FBGD': 'fckd',
        'FBG': 'fck',
        'FBTSD': 'vetsd',
        'FBTS': 'vets',
        'FBTD': 'vetd',
        'FBT': 'vet',
        'FBSD': 'vesed',
        'FBS': 'vese',
        'FBD': 'ved',
        'FB': 've',
        'FLGTSD': 'fflextsed',
        'FLGTS': 'fflextse',
        'FLGTD': 'fflextd',
        'FLGT': 'fflext',
        'FLGSD': 'ffletiond',
        'FLGS': 'ffletion',
        'FLGD': 'fflegd',
        'FLG': 'ffleg',
        'FLTSD': 'ffletsd',
        'FLTS': 'fflets',
        'FLTD': 'ffletd',
        'FLT': 'fflet',
        'FLSD': 'fflesed',
        'FLS': 'fflese',
        'FLD': 'ffled',
        'FL': 'ffle',
        'FGTSD': 'fxtsed',
        'FGTS': 'fxtse',
        'FGTD': 'fxtd',
        'FGT': 'fxt',
        'FGSD': 'ftiond',
        'FGS': 'ftion',
        'FGD': 'fgd',
        'FG': 'fg',
        'FTSD': 'ftsd',
        'FTS': 'fts',
        'FTD': 'ftd',
        'FT': 'ft',
        'FSD': 'fsed',
        'FS': 'fse',
        'FD': 'fd',
        'F': 'f',
        'RPBLGTSD': 'rdgetsed',
        'RPBLGTS': 'rdgetse',
        'RPBLGTD': 'rdgetd',
        'RPBLGT': 'rdget',
        'RPBLGSD': 'rdgesed',
        'RPBLGS': 'rdgese',
        'RPBLGD': 'rdged',
        'RPBLG': 'rdge',
        'RPBLTSD': 'rnlltsed',
        'RPBLTS': 'rnlltse',
        'RPBLTD': 'rnlltd',
        'RPBLT': 'rnllt',
        'RPBLSD': 'rnllsed',
        'RPBLS': 'rnllse',
        'RPBLD': 'rnlld',
        'RPBL': 'rnll',
        'RPBGTSD': 'rngtsed',
        'RPBGTS': 'rngtse',
        'RPBGTD': 'rngtd',
        'RPBGT': 'rngt',
        'RPBGSD': 'rnctiond',
        'RPBGS': 'rnction',
        'RPBGD': 'rngd',
        'RPBG': 'rng',
        'RPBTSD': 'rntsed',
        'RPBTS': 'rntse',
        'RPBTD': 'rntd',
        'RPBT': 'rnt',
        'RPBSD': 'rnsed',
        'RPBS': 'rnse',
        'RPBD': 'rnd',
        'RPB': 'rn',
        'RPLGTSD': 'rmgtsed',
        'RPLGTS': 'rmgtse',
        'RPLGTD': 'rmgtd',
        'RPLGT': 'rmgt',
        'RPLGSD': 'rmgsed',
        'RPLGS': 'rmgse',
        'RPLGD': 'rmgd',
        'RPLG': 'rmg',
        'RPLTSD': 'rmtsed',
        'RPLTS': 'rmtse',
        'RPLTD': 'rmtd',
        'RPLT': 'rmt',
        'RPLSD': 'rmsed',
        'RPLS': 'rmse',
        'RPLD': 'rmd',
        'RPL': 'rm',
        'RPGTSD': 'rpgtsed',
        'RPGTS': 'rpgtse',
        'RPGTD': 'rpgtd',
        'RPGT': 'rpgt',
        'RPGSD': 'rpgsed',
        'RPGS': 'rpgse',
        'RPGD': 'rpgd',
        'RPG': 'rpg',
        'RPTSD': 'rptsed',
        'RPTS': 'rptse',
        'RPTD': 'rptd',
        'RPT': 'rpt',
        'RPSD': 'rpsed',
        'RPS': 'rpse',
        'RPD': 'rpd',
        'RP': 'rp',
        'RBLGTSD': 'rblgtsed',
        'RBLGTS': 'rblgtse',
        'RBLGTD': 'rblgtd',
        'RBLGT': 'rblgt',
        'RBLGSD': 'rblgsed',
        'RBLGS': 'rblgse',
        'RBLGD': 'rblgd',
        'RBLG': 'rblg',
        'RBLTSD': 'rbltsed',
        'RBLTS': 'rbltse',
        'RBLTD': 'rbltd',
        'RBLT': 'rblt',
        'RBLSD': 'rblsed',
        'RBLS': 'rblse',
        'RBLD': 'rbld',
        'RBL': 'rbl',
        'RBGTSD': 'shxtsed',
        'RBGTS': 'shxtse',
        'RBGTD': 'shxtd',
        'RBGT': 'shxt',
        'RBGSD': 'rxd',
        'RBGS': 'rx',
        'RBGD': 'rckd',
        'RBG': 'rck',
        'RBTSD': 'shtsd',
        'RBTS': 'shts',
        'RBTD': 'tiald',
        'RBT': 'tial',
        'RBSD': 'tiousd',
        'RBS': 'tious',
        'RBD': 'shd',
        'RB': 'sh',
        'RLGTSD': 'rlxtsed',
        'RLGTS': 'rlxtse',
        'RLGTD': 'rlxtd',
        'RLGT': 'rlxt',
        'RLGSD': 'rltiond',
        'RLGS': 'rltion',
        'RLGD': 'rlgd',
        'RLG': 'rlg',
        'RLTSD': 'rltsd',
        'RLTS': 'rlts',
        'RLTD': 'rltd',
        'RLT': 'rlt',
        'RLSD': 'rlsed',
        'RLS': 'rlse',
        'RLD': 'rld',
        'RL': 'rl',
        'RGTSD': 'rxtsed',
        'RGTS': 'rxtse',
        'RGTD': 'rxtd',
        'RGT': 'rxt',
        'RGSD': 'rtiond',
        'RGS': 'rtion',
        'RGD': 'rgd',
        'RG': 'rg',
        'RTSD': 'rtsd',
        'RTS': 'rts',
        'RTD': 'rtd',
        'RT': 'rt',
        'RSD': 'rsed',
        'RS': 'rse',
        'RD': 'rd',
        'R': 'r',
        'PBLGTSD': 'dgetsd',
        'PBLGTS': 'dgets',
        'PBLGTD': 'dgetd',
        'PBLGT': 'dget',
        'PBLGSD': 'dgesed',
        'PBLGS': 'dgese',
        'PBLGD': 'dged',
        'PBLG': 'dge',
        'PBLTSD': 'pbltsed',
        'PBLTS': 'pbltse',
        'PBLTD': 'pbltd',
        'PBLT': 'pblt',
        'PBLSD': 'pblsed',
        'PBLS': 'pblse',
        'PBLD': 'pbld',
        'PBL': 'pbl',
        'PBGTSD': 'ngtsd',
        'PBGTS': 'ngts',
        'PBGTD': 'nxtd',
        'PBGT': 'nxt',
        'PBGSD': 'nctiond',
        'PBGS': 'nction',
        'PBGD': 'ngd',
        'PBG': 'ng',
        'PBTSD': 'ntsd',
        'PBTS': 'nts',
        'PBTD': 'ntd',
        'PBT': 'nt',
        'PBSD': 'nsed',
        'PBS': 'nse',
        'PBD': 'nd',
        'PB': 'n',
        'PLGTSD': 'mxtsed',
        'PLGTS': 'mxtse',
        'PLGTD': 'mxtd',
        'PLGT': 'mxt',
        'PLGSD': 'mtiond',
        'PLGS': 'mtion',
        'PLGD': 'mgd',
        'PLG': 'mg',
        'PLTSD': 'mtsd',
        'PLTS': 'mts',
        'PLTD': 'mtd',
        'PLT': 'mt',
        'PLSD': 'msed',
        'PLS': 'mse',
        'PLD': 'md',
        'PL': 'm',
        'PGTSD': 'pxtsed',
        'PGTS': 'pxtse',
        'PGTD': 'pxtd',
        'PGT': 'pxt',
        'PGSD': 'ptiond',
        'PGS': 'ption',
        'PGD': 'pgd',
        'PG': 'pg',
        'PTSD': 'ptsd',
        'PTS': 'pts',
        'PTD': 'ptd',
        'PT': 'pt',
        'PSD': 'psed',
        'PS': 'pse',
        'PD': 'pd',
        'P': 'p',
        'BLGTSD': 'blxtsed',
        'BLGTS': 'blxtse',
        'BLGTD': 'blxtd',
        'BLGT': 'blxt',
        'BLGSD': 'bltiond',
        'BLGS': 'bltion',
        'BLGD': 'blgd',
        'BLG': 'blg',
        'BLTSD': 'bltsd',
        'BLTS': 'blts',
        'BLTD': 'bltd',
        'BLT': 'blt',
        'BLSD': 'blsed',
        'BLS': 'blse',
        'BLD': 'bld',
        'BL': 'bl',
        'BGTSD': 'cktsd',
        'BGTS': 'ckts',
        'BGTD': 'bxtd',
        'BGT': 'bxt',
        'BGSD': 'xd',
        'BGS': 'x',
        'BGD': 'ckd',
        'BG': 'ck',
        'BTSD': 'btsd',
        'BTS': 'bts',
        'BTD': 'btd',
        'BT': 'bt',
        'BSD': 'bsed',
        'BS': 'bse',
        'BD': 'bd',
        'B': 'b',
        'LGTSD': 'llxtsed',
        'LGTS': 'llxtse',
        'LGTD': 'llxtd',
        'LGT': 'llxt',
        'LGSD': 'lltiond',
        'LGS': 'lltion',
        'LGD': 'llgd',
        'LG': 'llg',
        'LTSD': 'lltsd',
        'LTS': 'llts',
        'LTD': 'lltd',
        'LT': 'llt',
        'LSD': 'llsed',
        'LS': 'llse',
        'LD': 'lld',
        'L': 'll',
        'GTSD': 'gtsd',
        'GTS': 'gts',
        'GTD': 'xtd',
        'GT': 'xt',
        'GSD': 'tiond',
        'GS': 'tion',
        'GD': 'gd',
        'G': 'g',
        'TSD': 'tsd',
        'TS': 'ts',
        'TD': 'td',
        'T': 't',
        'SD': 'sed',
        'S': 'se',
        'D': 'd',
}


zed_key={
    "":"",
    "Z":"s" #logic that it doesn't count as a consonant, something to do with ending e from the vowels
}


import re

LONGEST_KEY = 1



def lookup(strokes):

    #I don't know what this does
    assert len(strokes) <= LONGEST_KEY, '%d/%d' % (len(strokes), LONGEST_KEY)

    #match the strokes
    match= re.fullmatch(
        #dissect the string to starter_letters, vowels and ender_letters
        r'(S?T?K?P?W?H?R?)(A?O?\*?\-?E?U?)(F?R?P?B?L?G?T?S?D?)(Z?)',

        #this string:
        strokes[0])

    if not match:
        raise KeyError

    #If there's no vowel
    #if match[2]=="":
    #    raise KeyError


    return(
        starter_letter[match[1]]+
        vowels[match[2]]+
        ender_letter[match[3]]+
        zed_key[match[4]]
        )





