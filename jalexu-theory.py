"""
@Jalexu wants a deterministic steno theory, cause they don't like the idea of adding words into their dictionary forever
"""


starter_letter={
    "":"",
'^STKPWHR': 'azl',
'^STKPWH': 'azh',
'^STKPWR': 'azr',
'^STKPW': 'az',
'^STKPHR': 'adispl',
'^STKPH': 'adism',
'^STKPR': 'astxr',
'^STKP': 'adisp',
'^STKWHR': 'asdevl',
'^STKWH': 'asdevh',
'^STKWR': 'asty',
'^STKW': 'asdev',
'^STKHR': 'adisl',
'^STKH': 'adish',
'^STKR': 'adisr',
'^STK': 'adis',
'^STPWHR': 'astbl',
'^STPWH': 'astbh',
'^STPWR': 'astbr',
'^STPW': 'astb',
'^STPHR': 'astpl',
'^STPH': 'asn',
'^STPR': 'asfr',
'^STP': 'asf',
'^STWHR': 'astwl',
'^STWH': 'astwh',
'^STWR': 'astwr',
'^STW': 'astw',
'^STHR': 'astl',
'^STH': 'asth',
'^STR': 'astr',
'^ST': 'ast',
'^SKPWHR': 'asimpl',
'^SKPWH': 'asimph',
'^SKPWR': 'asimpr',
'^SKPW': 'exb',
'^SKPHR': 'expl',
'^SKPH': 'em',
'^SKPR': 'aand r',
'^SKP': 'aand ',
'^SKWHR': 'asql',
'^SKWH': 'asqh',
'^SKWR': 'eng',
'^SKW': 'exw',
'^SKHR': 'excl',
'^SKH': 'exh',
'^SKR': 'excr',
'^SK': 'ex',
'^SPWHR': 'aintl',
'^SPWH': 'ainth',
'^SPWR': 'aintr',
'^SPW': 'aint',
'^SPHR': 'aspl',
'^SPH': 'asm',
'^SPR': 'aspr',
'^SP': 'asp',
'^SWHR': 'aswl',
'^SWH': 'aswh',
'^SWR': 'aswr',
'^SW': 'asw',
'^SHR': 'asl',
'^SH': 'ash',
'^SR': 'av',
'^S': 'as',
'^TKPWHR': 'agl',
'^TKPWH': 'agh',
'^TKPWR': 'agr',
'^TKPW': 'ag',
'^TKPHR': 'adpl',
'^TKPH': 'adm',
'^TKPR': 'atxr',
'^TKP': 'atx',
'^TKWHR': 'adevl',
'^TKWH': 'adevh',
'^TKWR': 'aty',
'^TKW': 'adev',
'^TKHR': 'adl',
'^TKH': 'atch',
'^TKR': 'atc',
'^TK': 'ad',
'^TPWHR': 'atbl',
'^TPWH': 'atbh',
'^TPWR': 'atbr',
'^TPW': 'atb',
'^TPHR': 'on r',
'^TPH': 'on ',
'^TPR': 'afr',
'^TP': 'af',
'^TWHR': 'atwl',
'^TWH': 'atwh',
'^TWR': 'atwr',
'^TW': 'atw',
'^THR': 'atl',
'^TH': 'ath',
'^TR': 'atr',
'^T': 'at',
'^KPWHR': 'aimpl',
'^KPWH': 'aimph',
'^KPWR': 'aimpr',
'^KPW': 'aimp',
'^KPHR': 'akpl',
'^KPH': 'akm',
'^KPR': 'axr',
'^KP': 'ax',
'^KWHR': 'aql',
'^KWH': 'aqh',
'^KWR': 'ay',
'^KW': 'aq',
'^KHR': 'akl',
'^KH': 'ach',
'^KR': 'ac',
'^K': 'ak',
'^PWHR': 'abl',
'^PWH': 'abh',
'^PWR': 'abr',
'^PW': 'ab',
'^PHR': 'apl',
'^PH': 'am',
'^PR': 'apr',
'^P': 'ap',
'^WHR': 'awl',
'^WH': 'awh',
'^WR': 'awr',
'^W': 'aw',
'^HR': 'al',
'^H': 'ah',
'^R': 'ar',
'^': 'a',
'STKPWHR': 'zl',
'STKPWH': 'zh',
'STKPWR': 'zr',
'STKPW': 'z',
'STKPHR': 'displ',
'STKPH': 'dism',
'STKPR': 'stxr',
'STKP': 'disp',
'STKWHR': 'sdevl',
'STKWH': 'sdevh',
'STKWR': 'sty',
'STKW': 'sdev',
'STKHR': 'disl',
'STKH': 'dish',
'STKR': 'disr',
'STK': 'dis',
'STPWHR': 'stbl',
'STPWH': 'stbh',
'STPWR': 'stbr',
'STPW': 'stb',
'STPHR': 'stpl',
'STPH': 'sn',
'STPR': 'sfr',
'STP': 'sf',
'STWHR': 'stwl',
'STWH': 'stwh',
'STWR': 'stwr',
'STW': 'stw',
'STHR': 'stl',
'STH': 'sth',
'STR': 'str',
'ST': 'st',
'SKPWHR': 'simpl',
'SKPWH': 'simph',
'SKPWR': 'simpr',
'SKPW': 'simp',
'SKPHR': 'and l',
'SKPH': 'im',
'SKPR': 'and r',
'SKP': 'and ',
'SKWHR': 'sql',
'SKWH': 'sqh',
'SKWR': 'j',
'SKW': 'sq',
'SKHR': 'shr',
'SKH': 'sch',
'SKR': 'sc',
'SK': 'sk',
'SPWHR': 'intl',
'SPWH': 'inth',
'SPWR': 'intr',
'SPW': 'int',
'SPHR': 'spl',
'SPH': 'sm',
'SPR': 'spr',
'SP': 'sp',
'SWHR': 'swl',
'SWH': 'swh',
'SWR': 'swr',
'SW': 'sw',
'SHR': 'sl',
'SH': 'sh',
'SR': 'v',
'S': 's',
'TKPWHR': 'gl',
'TKPWH': 'gh',
'TKPWR': 'gr',
'TKPW': 'g',
'TKPHR': 'dpl',
'TKPH': 'dm',
'TKPR': 'txr',
'TKP': 'tx',
'TKWHR': 'devl',
'TKWH': 'devh',
'TKWR': 'ty',
'TKW': 'dev',
'TKHR': 'dl',
'TKH': 'tch',
'TKR': 'tc',
'TK': 'd',
'TPWHR': 'tbl',
'TPWH': 'tbh',
'TPWR': 'tbr',
'TPW': 'tb',
'TPHR': 'tpl',
'TPH': 'n',
'TPR': 'fr',
'TP': 'f',
'TWHR': 'twl',
'TWH': 'twh',
'TWR': 'twr',
'TW': 'tw',
'THR': 'tl',
'TH': 'th',
'TR': 'tr',
'T': 't',
'KPWHR': 'impl',
'KPWH': 'imph',
'KPWR': 'impr',
'KPW': 'imp',
'KPHR': 'kpl',
'KPH': 'km',
'KPR': 'xr',
'KP': 'x',
'KWHR': 'ql',
'KWH': 'qh',
'KWR': 'y',
'KW': 'q',
'KHR': 'kl',
'KH': 'ch',
'KR': 'c',
'K': 'k',
'PWHR': 'bl',
'PWH': 'bh',
'PWR': 'br',
'PW': 'b',
'PHR': 'pl',
'PH': 'm',
'PR': 'pr',
'P': 'p',
'WHR': 'wl',
'WH': 'wh',
'WR': 'wr',
'W': 'w',
'HR': 'l',
'H': 'h',
'R': 'r',
}


vowels={
    "-":"",
    
    "":"",

    "*":"",

    "A"   :"a",
    "AO"  :"oo",
    "AOE" :"ee",
    "AOEU":"ie",
    "AOU" :"ue", #or "due" or "dew"?
    "AE"  :"ea",  #why not
    "AEU" :"ai", #or "ai" (can just two stroke them easily)
    "AU"  :"au", #or "aw" if at the end

    "O"   :"o",
    "OE"  :"oe", #or "ow" if at the end
    "OEU" :"oi", #or "oy" if at the end
    "OU"  :"ou", #or "ow" if at the end

    "E"   :"e",
    "EU"  :"i",          #or "y" if at the end????

    "U"   :"u"
}

ender_letter={
    "":"",
'*FRPBLGTSDZ': 'nchlgtsds',
'FRPBLGTSDZ': 'frgtsds',
'*FRPBLGTSD': 'nchlgtsd',
'FRPBLGTSD': 'frgtsd',
'*FRPBLGTSZ': 'nchlgtss',
'FRPBLGTSZ': 'frgtss',
'*FRPBLGTS': 'nchlgts',
'FRPBLGTS': 'frgts',
'*FRPBLGTDZ': 'nchlgtds',
'FRPBLGTDZ': 'frgtds',
'*FRPBLGTD': 'nchlgtd',
'FRPBLGTD': 'frgtd',
'*FRPBLGTZ': 'nchlgts',
'FRPBLGTZ': 'frgts',
'*FRPBLGT': 'nchlgt',
'FRPBLGT': 'frgt',
'*FRPBLGSDZ': 'nchlgsds',
'FRPBLGSDZ': 'frgsds',
'*FRPBLGSD': 'nchlgsd',
'FRPBLGSD': 'frgsd',
'*FRPBLGSZ': 'nchlgss',
'FRPBLGSZ': 'frgss',
'*FRPBLGS': 'nchlgs',
'FRPBLGS': 'frgs',
'*FRPBLGDZ': 'nchlgds',
'FRPBLGDZ': 'frgds',
'*FRPBLGD': 'nchlgd',
'FRPBLGD': 'frgd',
'*FRPBLGZ': 'nchlgs',
'FRPBLGZ': 'frgs',
'*FRPBLG': 'nchlg',
'FRPBLG': 'frg',
'*FRPBLTSDZ': 'nchltsds',
'FRPBLTSDZ': 'rchltsds',
'*FRPBLTSD': 'nchltsd',
'FRPBLTSD': 'rchltsd',
'*FRPBLTSZ': 'nchltss',
'FRPBLTSZ': 'rchltss',
'*FRPBLTS': 'nchlts',
'FRPBLTS': 'rchlts',
'*FRPBLTDZ': 'nchltds',
'FRPBLTDZ': 'rchltds',
'*FRPBLTD': 'nchltd',
'FRPBLTD': 'rchltd',
'*FRPBLTZ': 'nchlts',
'FRPBLTZ': 'rchlts',
'*FRPBLT': 'nchlt',
'FRPBLT': 'rchlt',
'*FRPBLSDZ': 'nchlsds',
'FRPBLSDZ': 'rchlsds',
'*FRPBLSD': 'nchlsd',
'FRPBLSD': 'rchlsd',
'*FRPBLSZ': 'nchlss',
'FRPBLSZ': 'rchlss',
'*FRPBLS': 'nchls',
'FRPBLS': 'rchls',
'*FRPBLDZ': 'nchlds',
'FRPBLDZ': 'rchlds',
'*FRPBLD': 'nchld',
'FRPBLD': 'rchld',
'*FRPBLZ': 'nchls',
'FRPBLZ': 'rchls',
'*FRPBL': 'nchl',
'FRPBL': 'rchl',
'*FRPBGTSDZ': 'nchxtsds',
'FRPBGTSDZ': 'mpctsds',
'*FRPBGTSD': 'nchxtsd',
'FRPBGTSD': 'mpctsd',
'*FRPBGTSZ': 'nchxtss',
'FRPBGTSZ': 'mpctss',
'*FRPBGTS': 'nchxts',
'FRPBGTS': 'mpcts',
'*FRPBGTDZ': 'nchxtds',
'FRPBGTDZ': 'mpctds',
'*FRPBGTD': 'nchxtd',
'FRPBGTD': 'mpctd',
'*FRPBGTZ': 'nchxts',
'FRPBGTZ': 'mpcts',
'*FRPBGT': 'nchxt',
'FRPBGT': 'mpct',
'*FRPBGSDZ': 'nchtionds',
'FRPBGSDZ': 'mpxds',
'*FRPBGSD': 'nchtiond',
'FRPBGSD': 'mpxd',
'*FRPBGSZ': 'nchtions',
'FRPBGSZ': 'mpxs',
'*FRPBGS': 'nchtion',
'FRPBGS': 'mpx',
'*FRPBGDZ': 'nchgds',
'FRPBGDZ': 'mpkds',
'*FRPBGD': 'nchgd',
'FRPBGD': 'mpkd',
'*FRPBGZ': 'nchgs',
'FRPBGZ': 'mpks',
'*FRPBG': 'nchg',
'FRPBG': 'mpk',
'*FRPBTSDZ': 'nchtsds',
'FRPBTSDZ': 'rchtsds',
'*FRPBTSD': 'nchtsd',
'FRPBTSD': 'rchtsd',
'*FRPBTSZ': 'nchtss',
'FRPBTSZ': 'rchtss',
'*FRPBTS': 'nchts',
'FRPBTS': 'rchts',
'*FRPBTDZ': 'nchtds',
'FRPBTDZ': 'rchtds',
'*FRPBTD': 'nchtd',
'FRPBTD': 'rchtd',
'*FRPBTZ': 'nchse',
'FRPBTZ': 'rchse',
'*FRPBT': 'ncht',
'FRPBT': 'rcht',
'*FRPBSDZ': 'nches',
'FRPBSDZ': 'rches',
'*FRPBSD': 'nche',
'FRPBSD': 'rche',
'*FRPBSZ': 'nchss',
'FRPBSZ': 'rchss',
'*FRPBS': 'nchs',
'FRPBS': 'rchs',
'*FRPBDZ': 'nchds',
'FRPBDZ': 'rchds',
'*FRPBD': 'nchd',
'FRPBD': 'rchd',
'*FRPBZ': 'nchs',
'FRPBZ': 'rchs',
'*FRPB': 'nch',
'FRPB': 'rch',
'*FRPLGTSDZ': 'mplgthsds',
'FRPLGTSDZ': 'mplxtsds',
'*FRPLGTSD': 'mplgthsd',
'FRPLGTSD': 'mplxtsd',
'*FRPLGTSZ': 'mplgthss',
'FRPLGTSZ': 'mplxtss',
'*FRPLGTS': 'mplgths',
'FRPLGTS': 'mplxts',
'*FRPLGTDZ': 'mplgthds',
'FRPLGTDZ': 'mplxtds',
'*FRPLGTD': 'mplgthd',
'FRPLGTD': 'mplxtd',
'*FRPLGTZ': 'mplgths',
'FRPLGTZ': 'mplxts',
'*FRPLGT': 'mplgth',
'FRPLGT': 'mplxt',
'*FRPLGSDZ': 'mplgcds',
'FRPLGSDZ': 'mpltionds',
'*FRPLGSD': 'mplgcd',
'FRPLGSD': 'mpltiond',
'*FRPLGSZ': 'mplgcs',
'FRPLGSZ': 'mpltions',
'*FRPLGS': 'mplgc',
'FRPLGS': 'mpltion',
'*FRPLGDZ': 'mplgys',
'FRPLGDZ': 'mplgds',
'*FRPLGD': 'mplgy',
'FRPLGD': 'mplgd',
'*FRPLGZ': 'mplgz',
'FRPLGZ': 'mplgs',
'FRPLG': 'mplg',
'*FRPLTSDZ': 'mplthsds',
'FRPLTSDZ': 'mpltsds',
'*FRPLTSD': 'mplthsd',
'FRPLTSD': 'mpltsd',
'*FRPLTSZ': 'mplthss',
'FRPLTSZ': 'mpltss',
'*FRPLTS': 'mplths',
'FRPLTS': 'mplts',
'*FRPLTDZ': 'mplthds',
'FRPLTDZ': 'mpltds',
'*FRPLTD': 'mplthd',
'FRPLTD': 'mpltd',
'*FRPLTZ': 'mplths',
'FRPLTZ': 'mplse',
'*FRPLT': 'mplth',
'FRPLT': 'mplt',
'*FRPLSDZ': 'mplcds',
'FRPLSDZ': 'mples',
'*FRPLSD': 'mplcd',
'FRPLSD': 'mple',
'*FRPLSZ': 'mplcs',
'FRPLSZ': 'mplss',
'*FRPLS': 'mplc',
'FRPLS': 'mpls',
'*FRPLDZ': 'mple',
'FRPLDZ': 'mplds',
'*FRPLD': 'mply',
'FRPLD': 'mpld',
'*FRPLZ': 'mplz',
'FRPLZ': 'mpls',
'FRPL': 'mpl',
'*FRPGTSDZ': 'mpgthsds',
'FRPGTSDZ': 'mpxtsds',
'*FRPGTSD': 'mpgthsd',
'FRPGTSD': 'mpxtsd',
'*FRPGTSZ': 'mpgthss',
'FRPGTSZ': 'mpxtss',
'*FRPGTS': 'mpgths',
'FRPGTS': 'mpxts',
'*FRPGTDZ': 'mpgthds',
'FRPGTDZ': 'mpxtds',
'*FRPGTD': 'mpgthd',
'FRPGTD': 'mpxtd',
'*FRPGTZ': 'mpgths',
'FRPGTZ': 'mpxts',
'*FRPGT': 'mpgth',
'FRPGT': 'mpxt',
'*FRPGSDZ': 'mpgcds',
'FRPGSDZ': 'mptionds',
'*FRPGSD': 'mpgcd',
'FRPGSD': 'mptiond',
'*FRPGSZ': 'mpgcs',
'FRPGSZ': 'mptions',
'*FRPGS': 'mpgc',
'FRPGS': 'mption',
'*FRPGDZ': 'mpgys',
'FRPGDZ': 'mpgds',
'*FRPGD': 'mpgy',
'FRPGD': 'mpgd',
'*FRPGZ': 'mpgz',
'FRPGZ': 'mpgs',
'FRPG': 'mpg',
'*FRPTSDZ': 'mpthsds',
'FRPTSDZ': 'mptsds',
'*FRPTSD': 'mpthsd',
'FRPTSD': 'mptsd',
'*FRPTSZ': 'mpthss',
'FRPTSZ': 'mptss',
'*FRPTS': 'mpths',
'FRPTS': 'mpts',
'*FRPTDZ': 'mpthds',
'FRPTDZ': 'mptds',
'*FRPTD': 'mpthd',
'FRPTD': 'mptd',
'*FRPTZ': 'mpths',
'FRPTZ': 'mpse',
'*FRPT': 'mpth',
'FRPT': 'mpt',
'*FRPSDZ': 'mpcds',
'FRPSDZ': 'mpes',
'*FRPSD': 'mpcd',
'FRPSD': 'mpe',
'*FRPSZ': 'mpcs',
'FRPSZ': 'mpss',
'*FRPS': 'mpc',
'FRPS': 'mps',
'*FRPDZ': 'mpe',
'FRPDZ': 'mpds',
'*FRPD': 'mpy',
'FRPD': 'mpd',
'*FRPZ': 'frh',
'FRPZ': 'mps',
'FRP': 'mp',
'*FRBLGTSDZ': 'mblgthsds',
'FRBLGTSDZ': 'mblxtsds',
'*FRBLGTSD': 'mblgthsd',
'FRBLGTSD': 'mblxtsd',
'*FRBLGTSZ': 'mblgthss',
'FRBLGTSZ': 'mblxtss',
'*FRBLGTS': 'mblgths',
'FRBLGTS': 'mblxts',
'*FRBLGTDZ': 'mblgthds',
'FRBLGTDZ': 'mblxtds',
'*FRBLGTD': 'mblgthd',
'FRBLGTD': 'mblxtd',
'*FRBLGTZ': 'mblgths',
'FRBLGTZ': 'mblxts',
'*FRBLGT': 'mblgth',
'FRBLGT': 'mblxt',
'*FRBLGSDZ': 'mblgcds',
'FRBLGSDZ': 'mbltionds',
'*FRBLGSD': 'mblgcd',
'FRBLGSD': 'mbltiond',
'*FRBLGSZ': 'mblgcs',
'FRBLGSZ': 'mbltions',
'*FRBLGS': 'mblgc',
'FRBLGS': 'mbltion',
'*FRBLGDZ': 'mblgys',
'FRBLGDZ': 'mblgds',
'*FRBLGD': 'mblgy',
'FRBLGD': 'mblgd',
'*FRBLGZ': 'mblgz',
'FRBLGZ': 'mblgs',
'FRBLG': 'mblg',
'*FRBLTSDZ': 'mblthsds',
'FRBLTSDZ': 'mbltsds',
'*FRBLTSD': 'mblthsd',
'FRBLTSD': 'mbltsd',
'*FRBLTSZ': 'mblthss',
'FRBLTSZ': 'mbltss',
'*FRBLTS': 'mblths',
'FRBLTS': 'mblts',
'*FRBLTDZ': 'mblthds',
'FRBLTDZ': 'mbltds',
'*FRBLTD': 'mblthd',
'FRBLTD': 'mbltd',
'*FRBLTZ': 'mblths',
'FRBLTZ': 'mblse',
'*FRBLT': 'mblth',
'FRBLT': 'mblt',
'*FRBLSDZ': 'mblcds',
'FRBLSDZ': 'mbles',
'*FRBLSD': 'mblcd',
'FRBLSD': 'mble',
'*FRBLSZ': 'mblcs',
'FRBLSZ': 'mblss',
'*FRBLS': 'mblc',
'FRBLS': 'mbls',
'*FRBLDZ': 'mble',
'FRBLDZ': 'mblds',
'*FRBLD': 'mbly',
'FRBLD': 'mbld',
'*FRBLZ': 'mblz',
'FRBLZ': 'mbls',
'FRBL': 'mbl',
'*FRBGTSDZ': 'frcktsds',
'FRBGTSDZ': 'mbxtsds',
'*FRBGTSD': 'frcktsd',
'FRBGTSD': 'mbxtsd',
'*FRBGTSZ': 'frcktss',
'FRBGTSZ': 'mbxtss',
'*FRBGTS': 'frckts',
'FRBGTS': 'mbxts',
'*FRBGTDZ': 'frcktds',
'FRBGTDZ': 'mbxtds',
'*FRBGTD': 'frcktd',
'FRBGTD': 'mbxtd',
'*FRBGTZ': 'frckts',
'FRBGTZ': 'mbxts',
'*FRBGT': 'frckt',
'FRBGT': 'mbxt',
'*FRBGSDZ': 'frcksds',
'FRBGSDZ': 'f{,}ds',
'*FRBGSD': 'frcksd',
'FRBGSD': 'f{,}d',
'*FRBGSZ': 'frckss',
'FRBGSZ': 'f{,}s',
'*FRBGS': 'frcks',
'FRBGS': 'f{,}',
'*FRBGDZ': 'frckds',
'FRBGDZ': 'frkds',
'*FRBGD': 'frckd',
'FRBGD': 'frkd',
'*FRBGZ': 'frcks',
'FRBGZ': 'frks',
'*FRBG': 'frck',
'FRBG': 'frk',
'*FRBTSDZ': 'mbthsds',
'FRBTSDZ': 'mbtsds',
'*FRBTSD': 'mbthsd',
'FRBTSD': 'mbtsd',
'*FRBTSZ': 'mbthss',
'FRBTSZ': 'mbtss',
'*FRBTS': 'mbths',
'FRBTS': 'mbts',
'*FRBTDZ': 'mbthds',
'FRBTDZ': 'ftialds',
'*FRBTD': 'mbthd',
'FRBTD': 'ftiald',
'*FRBTZ': 'mbths',
'FRBTZ': 'mbse',
'*FRBT': 'mbth',
'FRBT': 'ftial',
'*FRBSDZ': 'mbcds',
'FRBSDZ': 'mbes',
'*FRBSD': 'mbcd',
'FRBSD': 'mbe',
'*FRBSZ': 'mbcs',
'FRBSZ': 'ftiouss',
'*FRBS': 'mbc',
'FRBS': 'ftious',
'*FRBDZ': 'mbe',
'FRBDZ': 'mbds',
'*FRBD': 'mby',
'FRBD': 'mbd',
'*FRBZ': 'mbz',
'FRBZ': 'mbs',
'FRB': 'mb',
'*FRLGTSDZ': 'mlgthsds',
'FRLGTSDZ': 'mlxtsds',
'*FRLGTSD': 'mlgthsd',
'FRLGTSD': 'mlxtsd',
'*FRLGTSZ': 'mlgthss',
'FRLGTSZ': 'mlxtss',
'*FRLGTS': 'mlgths',
'FRLGTS': 'mlxts',
'*FRLGTDZ': 'mlgthds',
'FRLGTDZ': 'mlxtds',
'*FRLGTD': 'mlgthd',
'FRLGTD': 'mlxtd',
'*FRLGTZ': 'mlgths',
'FRLGTZ': 'mlxts',
'*FRLGT': 'mlgth',
'FRLGT': 'mlxt',
'*FRLGSDZ': 'mlgcds',
'FRLGSDZ': 'mltionds',
'*FRLGSD': 'mlgcd',
'FRLGSD': 'mltiond',
'*FRLGSZ': 'mlgcs',
'FRLGSZ': 'mltions',
'*FRLGS': 'mlgc',
'FRLGS': 'mltion',
'*FRLGDZ': 'mlgys',
'FRLGDZ': 'mlgds',
'*FRLGD': 'mlgy',
'FRLGD': 'mlgd',
'*FRLGZ': 'mlgz',
'FRLGZ': 'mlgs',
'FRLG': 'mlg',
'*FRLTSDZ': 'mlthsds',
'FRLTSDZ': 'mltsds',
'*FRLTSD': 'mlthsd',
'FRLTSD': 'mltsd',
'*FRLTSZ': 'mlthss',
'FRLTSZ': 'mltss',
'*FRLTS': 'mlths',
'FRLTS': 'mlts',
'*FRLTDZ': 'mlthds',
'FRLTDZ': 'mltds',
'*FRLTD': 'mlthd',
'FRLTD': 'mltd',
'*FRLTZ': 'mlths',
'FRLTZ': 'mlse',
'*FRLT': 'mlth',
'FRLT': 'mlt',
'*FRLSDZ': 'mlcds',
'FRLSDZ': 'mles',
'*FRLSD': 'mlcd',
'FRLSD': 'mle',
'*FRLSZ': 'mlcs',
'FRLSZ': 'mlss',
'*FRLS': 'mlc',
'FRLS': 'mls',
'*FRLDZ': 'mle',
'FRLDZ': 'mlds',
'*FRLD': 'mly',
'FRLD': 'mld',
'*FRLZ': 'mlz',
'FRLZ': 'mls',
'FRL': 'ml',
'*FRGTSDZ': 'frgthsds',
'FRGTSDZ': 'frgtsds',
'*FRGTSD': 'frgthsd',
'FRGTSD': 'frgtsd',
'*FRGTSZ': 'frgthss',
'FRGTSZ': 'frgtss',
'*FRGTS': 'frgths',
'FRGTS': 'frgts',
'*FRGTDZ': 'frgthds',
'FRGTDZ': 'frgtds',
'*FRGTD': 'frgthd',
'FRGTD': 'frgtd',
'*FRGTZ': 'frgths',
'FRGTZ': 'frgts',
'*FRGT': 'frgth',
'FRGT': 'frgt',
'*FRGSDZ': 'frgcds',
'FRGSDZ': 'frgsds',
'*FRGSD': 'frgcd',
'FRGSD': 'frgsd',
'*FRGSZ': 'frgcs',
'FRGSZ': 'frgss',
'*FRGS': 'frgc',
'FRGS': 'frgs',
'*FRGDZ': 'frgys',
'FRGDZ': 'frgds',
'*FRGD': 'frgy',
'FRGD': 'frgd',
'*FRGZ': 'frgz',
'FRGZ': 'frgs',
'FRG': 'frg',
'*FRTSDZ': 'frthsds',
'FRTSDZ': 'frtsds',
'*FRTSD': 'frthsd',
'FRTSD': 'frtsd',
'*FRTSZ': 'frthss',
'FRTSZ': 'frtss',
'*FRTS': 'frths',
'FRTS': 'frts',
'*FRTDZ': 'frthds',
'FRTDZ': 'frtds',
'*FRTD': 'frthd',
'FRTD': 'frtd',
'*FRTZ': 'frths',
'FRTZ': 'frts',
'*FRT': 'frth',
'FRT': 'frt',
'*FRSDZ': 'frcds',
'FRSDZ': 'frsds',
'*FRSD': 'frcd',
'FRSD': 'frsd',
'*FRSZ': 'frcs',
'FRSZ': 'frss',
'*FRS': 'frc',
'FRS': 'frs',
'*FRDZ': 'frys',
'FRDZ': 'frds',
'*FRD': 'fry',
'FRD': 'frd',
'*FRZ': 'frz',
'FRZ': 'frs',
'FR': 'fr',
'*FPBLGTSDZ': 'fdgthsds',
'FPBLGTSDZ': 'fdgtsds',
'*FPBLGTSD': 'fdgthsd',
'FPBLGTSD': 'fdgtsd',
'*FPBLGTSZ': 'fdgthss',
'FPBLGTSZ': 'fdgtss',
'*FPBLGTS': 'fdgths',
'FPBLGTS': 'fdgts',
'*FPBLGTDZ': 'fdgthds',
'FPBLGTDZ': 'fdgtds',
'*FPBLGTD': 'fdgthd',
'FPBLGTD': 'fdgtd',
'*FPBLGTZ': 'fdgths',
'FPBLGTZ': 'fdgts',
'*FPBLGT': 'fdgth',
'FPBLGT': 'fdgt',
'*FPBLGSDZ': 'fdgcds',
'FPBLGSDZ': 'fjectionds',
'*FPBLGSD': 'fdgcd',
'FPBLGSD': 'fjectiond',
'*FPBLGSZ': 'fdgcs',
'FPBLGSZ': 'fjections',
'*FPBLGS': 'fdgc',
'FPBLGS': 'fjection',
'*FPBLGDZ': 'fdgys',
'FPBLGDZ': 'fdgds',
'*FPBLGD': 'fdgy',
'FPBLGD': 'fdgd',
'*FPBLGZ': 'fdgz',
'FPBLGZ': 'fdgs',
'FPBLG': 'fdg',
'*FPBLTSDZ': 'fnlthsds',
'FPBLTSDZ': 'fnltsds',
'*FPBLTSD': 'fnlthsd',
'FPBLTSD': 'fnltsd',
'*FPBLTSZ': 'fnlthss',
'FPBLTSZ': 'fnltss',
'*FPBLTS': 'fnlths',
'FPBLTS': 'fnlts',
'*FPBLTDZ': 'fnlthds',
'FPBLTDZ': 'fnltds',
'*FPBLTD': 'fnlthd',
'FPBLTD': 'fnltd',
'*FPBLTZ': 'fnlths',
'FPBLTZ': 'fnlts',
'*FPBLT': 'fnlth',
'FPBLT': 'fnlt',
'*FPBLSDZ': 'fnlcds',
'FPBLSDZ': 'fnlsds',
'*FPBLSD': 'fnlcd',
'FPBLSD': 'fnlsd',
'*FPBLSZ': 'fnlcs',
'FPBLSZ': 'fnlss',
'*FPBLS': 'fnlc',
'FPBLS': 'fnls',
'*FPBLDZ': 'fnlys',
'FPBLDZ': 'fnlds',
'*FPBLD': 'fnly',
'FPBLD': 'fnld',
'*FPBLZ': 'fnlz',
'FPBLZ': 'fnls',
'FPBL': 'fnl',
'*FPBGTSDZ': 'fnktsds',
'FPBGTSDZ': 'chctsds',
'*FPBGTSD': 'fnktsd',
'FPBGTSD': 'chctsd',
'*FPBGTSZ': 'fnktss',
'FPBGTSZ': 'chctss',
'*FPBGTS': 'fnkts',
'FPBGTS': 'chcts',
'*FPBGTDZ': 'fnktds',
'FPBGTDZ': 'chctds',
'*FPBGTD': 'fnktd',
'FPBGTD': 'chctd',
'*FPBGTZ': 'fnkts',
'FPBGTZ': 'chcts',
'*FPBGT': 'fnkt',
'FPBGT': 'chct',
'*FPBGSDZ': 'fnksds',
'FPBGSDZ': 'fnctionds',
'*FPBGSD': 'fnksd',
'FPBGSD': 'fnctiond',
'*FPBGSZ': 'fnkss',
'FPBGSZ': 'fnctions',
'*FPBGS': 'fnks',
'FPBGS': 'fnction',
'*FPBGDZ': 'fnkds',
'FPBGDZ': 'fngds',
'*FPBGD': 'fnkd',
'FPBGD': 'fngd',
'*FPBGZ': 'fnks',
'FPBGZ': 'fngs',
'*FPBG': 'fnk',
'FPBG': 'fng',
'*FPBTSDZ': 'fnthsds',
'FPBTSDZ': 'fntsds',
'*FPBTSD': 'fnthsd',
'FPBTSD': 'fntsd',
'*FPBTSZ': 'fnthss',
'FPBTSZ': 'fntss',
'*FPBTS': 'fnths',
'FPBTS': 'fnts',
'*FPBTDZ': 'fnthds',
'FPBTDZ': 'fntds',
'*FPBTD': 'fnthd',
'FPBTD': 'fntd',
'*FPBTZ': 'fnths',
'FPBTZ': 'fnts',
'*FPBT': 'fnth',
'FPBT': 'fnt',
'*FPBSDZ': 'fncds',
'FPBSDZ': 'fnsds',
'*FPBSD': 'fncd',
'FPBSD': 'fnsd',
'*FPBSZ': 'fncs',
'FPBSZ': 'fnss',
'*FPBS': 'fnc',
'FPBS': 'fns',
'*FPBDZ': 'fnys',
'FPBDZ': 'fnds',
'*FPBD': 'fny',
'FPBD': 'fnd',
'*FPBZ': 'fnz',
'FPBZ': 'fns',
'FPB': 'fn',
'*FPLGTSDZ': 'tualgthsds',
'FPLGTSDZ': 'tualxtsds',
'*FPLGTSD': 'tualgthsd',
'FPLGTSD': 'tualxtsd',
'*FPLGTSZ': 'tualgthss',
'FPLGTSZ': 'tualxtss',
'*FPLGTS': 'tualgths',
'FPLGTS': 'tualxts',
'*FPLGTDZ': 'tualgthds',
'FPLGTDZ': 'tualxtds',
'*FPLGTD': 'tualgthd',
'FPLGTD': 'tualxtd',
'*FPLGTZ': 'tualgths',
'FPLGTZ': 'tualxts',
'*FPLGT': 'tualgth',
'FPLGT': 'tualxt',
'*FPLGSDZ': 'tualgcds',
'FPLGSDZ': 'tualtionds',
'*FPLGSD': 'tualgcd',
'FPLGSD': 'tualtiond',
'*FPLGSZ': 'tualgcs',
'FPLGSZ': 'tualtions',
'*FPLGS': 'tualgc',
'FPLGS': 'tualtion',
'*FPLGDZ': 'tualgys',
'FPLGDZ': 'tualgds',
'*FPLGD': 'tualgy',
'FPLGD': 'tualgd',
'*FPLGZ': 'tualgz',
'FPLGZ': 'tualgs',
'FPLG': 'tualg',
'*FPLTSDZ': 'tualthsds',
'FPLTSDZ': '{.}es',
'*FPLTSD': 'tualthsd',
'FPLTSD': '{.}e',
'*FPLTSZ': 'tualthss',
'FPLTSZ': 'tualtss',
'*FPLTS': 'tualths',
'FPLTS': 'tualts',
'*FPLTDZ': 'tualthds',
'FPLTDZ': '{.}ds',
'*FPLTD': 'tualthd',
'FPLTD': '{.}d',
'*FPLTZ': 'tualths',
'FPLTZ': 'tualse',
'*FPLT': 'tualth',
'FPLT': '{.}',
'*FPLSDZ': 'tualcds',
'FPLSDZ': 'tuales',
'*FPLSD': 'tualcd',
'FPLSD': 'tuale',
'*FPLSZ': 'tualcs',
'FPLSZ': 'tualss',
'*FPLS': 'tualc',
'FPLS': 'tuals',
'*FPLDZ': 'tuale',
'FPLDZ': 'tualds',
'*FPLD': 'tualy',
'FPLD': 'tuald',
'*FPLZ': 'tualz',
'FPLZ': 'tuals',
'FPL': 'tual',
'*FPGTSDZ': 'chgthsds',
'FPGTSDZ': 'chxtsds',
'*FPGTSD': 'chgthsd',
'FPGTSD': 'chxtsd',
'*FPGTSZ': 'chgthss',
'FPGTSZ': 'chxtss',
'*FPGTS': 'chgths',
'FPGTS': 'chxts',
'*FPGTDZ': 'chgthds',
'FPGTDZ': 'chxtds',
'*FPGTD': 'chgthd',
'FPGTD': 'chxtd',
'*FPGTZ': 'chgths',
'FPGTZ': 'chxts',
'*FPGT': 'chgth',
'FPGT': 'chxt',
'*FPGSDZ': 'chgcds',
'FPGSDZ': 'chtionds',
'*FPGSD': 'chgcd',
'FPGSD': 'chtiond',
'*FPGSZ': 'chgcs',
'FPGSZ': 'chtions',
'*FPGS': 'chgc',
'FPGS': 'chtion',
'*FPGDZ': 'chgys',
'FPGDZ': 'chgds',
'*FPGD': 'chgy',
'FPGD': 'chgd',
'*FPGZ': 'chgz',
'FPGZ': 'chgs',
'FPG': 'chg',
'*FPTSDZ': 'chthsds',
'FPTSDZ': 'chtsds',
'*FPTSD': 'chthsd',
'FPTSD': 'chtsd',
'*FPTSZ': 'chthss',
'FPTSZ': 'chtss',
'*FPTS': 'chths',
'FPTS': 'chts',
'*FPTDZ': 'chthds',
'FPTDZ': 'chtds',
'*FPTD': 'chthd',
'FPTD': 'chtd',
'*FPTZ': 'chths',
'FPTZ': 'chse',
'*FPT': 'chth',
'FPT': 'cht',
'*FPSDZ': 'chcds',
'FPSDZ': 'ches',
'*FPSD': 'chcd',
'FPSD': 'che',
'*FPSZ': 'chcs',
'FPSZ': 'fhs',
'*FPS': 'chc',
'FPS': 'fh',
'*FPDZ': 'che',
'FPDZ': 'chds',
'*FPD': 'chy',
'FPD': 'chd',
'*FPZ': 'fh',
'FPZ': 'chs',
'FP': 'ch',
'*FBLGTSDZ': 'fcklethsds',
'FBLGTSDZ': 'fckletsds',
'*FBLGTSD': 'fcklethsd',
'FBLGTSD': 'fckletsd',
'*FBLGTSZ': 'fcklethss',
'FBLGTSZ': 'fckletss',
'*FBLGTS': 'fckleths',
'FBLGTS': 'fcklets',
'*FBLGTDZ': 'fcklethds',
'FBLGTDZ': 'fckletds',
'*FBLGTD': 'fcklethd',
'FBLGTD': 'fckletd',
'*FBLGTZ': 'fckleths',
'FBLGTZ': 'fcklets',
'*FBLGT': 'fckleth',
'FBLGT': 'fcklet',
'*FBLGSDZ': 'fcklecds',
'FBLGSDZ': 'fcklesds',
'*FBLGSD': 'fcklecd',
'FBLGSD': 'fcklesd',
'*FBLGSZ': 'fcklecs',
'FBLGSZ': 'fckless',
'*FBLGS': 'fcklec',
'FBLGS': 'fckles',
'*FBLGDZ': 'fckleys',
'FBLGDZ': 'fckleds',
'*FBLGD': 'fckley',
'FBLGD': 'fckled',
'*FBLGZ': 'fcklez',
'FBLGZ': 'fckles',
'FBLG': 'fckle',
'*FBLTSDZ': 'vlthsds',
'FBLTSDZ': 'vltsds',
'*FBLTSD': 'vlthsd',
'FBLTSD': 'vltsd',
'*FBLTSZ': 'vlthss',
'FBLTSZ': 'vltss',
'*FBLTS': 'vlths',
'FBLTS': 'vlts',
'*FBLTDZ': 'vlthds',
'FBLTDZ': 'vltds',
'*FBLTD': 'vlthd',
'FBLTD': 'vltd',
'*FBLTZ': 'vlths',
'FBLTZ': 'vlts',
'*FBLT': 'vlth',
'FBLT': 'vlt',
'*FBLSDZ': 'vlcds',
'FBLSDZ': 'vlsds',
'*FBLSD': 'vlcd',
'FBLSD': 'vlsd',
'*FBLSZ': 'vlcs',
'FBLSZ': 'vlss',
'*FBLS': 'vlc',
'FBLS': 'vls',
'*FBLDZ': 'vlys',
'FBLDZ': 'vlds',
'*FBLD': 'vly',
'FBLD': 'vld',
'*FBLZ': 'vlz',
'FBLZ': 'vls',
'FBL': 'vl',
'*FBGTSDZ': 'fcktsds',
'FBGTSDZ': 'fctsds',
'*FBGTSD': 'fcktsd',
'FBGTSD': 'fctsd',
'*FBGTSZ': 'fcktss',
'FBGTSZ': 'fctss',
'*FBGTS': 'fckts',
'FBGTS': 'fcts',
'*FBGTDZ': 'fcktds',
'FBGTDZ': 'fctds',
'*FBGTD': 'fcktd',
'FBGTD': 'fctd',
'*FBGTZ': 'fckts',
'FBGTZ': 'fcts',
'*FBGT': 'fckt',
'FBGT': 'fct',
'*FBGSDZ': 'fctionds',
'FBGSDZ': 'fxds',
'*FBGSD': 'fctiond',
'FBGSD': 'fxd',
'*FBGSZ': 'fctions',
'FBGSZ': 'fxs',
'*FBGS': 'fction',
'FBGS': 'fx',
'*FBGDZ': 'fckds',
'FBGDZ': 'fkds',
'*FBGD': 'fckd',
'FBGD': 'fkd',
'*FBGZ': 'fcks',
'FBGZ': 'fks',
'*FBG': 'fck',
'FBG': 'fk',
'*FBTSDZ': 'vthsds',
'FBTSDZ': 'vtsds',
'*FBTSD': 'vthsd',
'FBTSD': 'vtsd',
'*FBTSZ': 'vthss',
'FBTSZ': 'vtss',
'*FBTS': 'vths',
'FBTS': 'vts',
'*FBTDZ': 'vthds',
'FBTDZ': 'vtds',
'*FBTD': 'vthd',
'FBTD': 'vtd',
'*FBTZ': 'vths',
'FBTZ': 'vse',
'*FBT': 'vth',
'FBT': 'vt',
'*FBSDZ': 'vcds',
'FBSDZ': 'ves',
'*FBSD': 'vcd',
'FBSD': 've',
'*FBSZ': 'vcs',
'FBSZ': 'vss',
'*FBS': 'vc',
'FBS': 'vs',
'*FBDZ': 've',
'FBDZ': 'vds',
'*FBD': 'vy',
'FBD': 'vd',
'*FBZ': 'vz',
'FBZ': 'vs',
'FB': 'v',
'*FLGTSDZ': 'flgthsds',
'FLGTSDZ': 'flgtsds',
'*FLGTSD': 'flgthsd',
'FLGTSD': 'flgtsd',
'*FLGTSZ': 'flgthss',
'FLGTSZ': 'flgtss',
'*FLGTS': 'flgths',
'FLGTS': 'flgts',
'*FLGTDZ': 'flgthds',
'FLGTDZ': 'flgtds',
'*FLGTD': 'flgthd',
'FLGTD': 'flgtd',
'*FLGTZ': 'flgths',
'FLGTZ': 'flgts',
'*FLGT': 'flgth',
'FLGT': 'flgt',
'*FLGSDZ': 'flgcds',
'FLGSDZ': 'flgsds',
'*FLGSD': 'flgcd',
'FLGSD': 'flgsd',
'*FLGSZ': 'flgcs',
'FLGSZ': 'flgss',
'*FLGS': 'flgc',
'FLGS': 'flgs',
'*FLGDZ': 'flgys',
'FLGDZ': 'flgds',
'*FLGD': 'flgy',
'FLGD': 'flgd',
'*FLGZ': 'flgz',
'FLGZ': 'flgs',
'FLG': 'flg',
'*FLTSDZ': 'flthsds',
'FLTSDZ': 'fltsds',
'*FLTSD': 'flthsd',
'FLTSD': 'fltsd',
'*FLTSZ': 'flthss',
'FLTSZ': 'fltss',
'*FLTS': 'flths',
'FLTS': 'flts',
'*FLTDZ': 'flthds',
'FLTDZ': 'fltds',
'*FLTD': 'flthd',
'FLTD': 'fltd',
'*FLTZ': 'flths',
'FLTZ': 'flts',
'*FLT': 'flth',
'FLT': 'flt',
'*FLSDZ': 'flcds',
'FLSDZ': 'flsds',
'*FLSD': 'flcd',
'FLSD': 'flsd',
'*FLSZ': 'flcs',
'FLSZ': 'flss',
'*FLS': 'flc',
'FLS': 'fls',
'*FLDZ': 'flys',
'FLDZ': 'flds',
'*FLD': 'fly',
'FLD': 'fld',
'*FLZ': 'flz',
'FLZ': 'fls',
'FL': 'fl',
'*FGTSDZ': 'fgthsds',
'FGTSDZ': 'fxtsds',
'*FGTSD': 'fgthsd',
'FGTSD': 'fxtsd',
'*FGTSZ': 'fgthss',
'FGTSZ': 'fxtss',
'*FGTS': 'fgths',
'FGTS': 'fxts',
'*FGTDZ': 'fgthds',
'FGTDZ': 'fxtds',
'*FGTD': 'fgthd',
'FGTD': 'fxtd',
'*FGTZ': 'fgths',
'FGTZ': 'fxts',
'*FGT': 'fgth',
'FGT': 'fxt',
'*FGSDZ': 'fgcds',
'FGSDZ': 'ftionds',
'*FGSD': 'fgcd',
'FGSD': 'ftiond',
'*FGSZ': 'fgcs',
'FGSZ': 'ftions',
'*FGS': 'fgc',
'FGS': 'ftion',
'*FGDZ': 'fgys',
'FGDZ': 'fgds',
'*FGD': 'fgy',
'FGD': 'fgd',
'*FGZ': 'fgz',
'FGZ': 'fgs',
'FG': 'fg',
'*FTSDZ': 'ftes',
'FTSDZ': 'stes',
'*FTSD': 'fte',
'FTSD': 'ste',
'*FTSZ': 'ftss',
'FTSZ': 'ftss',
'*FTS': 'fts',
'FTS': 'fts',
'*FTDZ': 'ftds',
'FTDZ': 'stds',
'*FTD': 'ftd',
'FTD': 'std',
'*FTZ': 'fts',
'FTZ': 'fse',
'*FT': 'ft',
'FT': 'st',
'*FSDZ': 'fcds',
'FSDZ': 'fes',
'*FSD': 'fcd',
'FSD': 'fe',
'*FSZ': 'fcs',
'FSZ': 'fss',
'*FS': 'fc',
'FS': 'fs',
'*FDZ': 'fe',
'FDZ': 'fds',
'*FD': 'fy',
'FD': 'fd',
'*FZ': 'fz',
'FZ': 'fs',
'F': 'f',
'*RPBLGTSDZ': 'rgthsds',
'RPBLGTSDZ': 'rgtsds',
'*RPBLGTSD': 'rgthsd',
'RPBLGTSD': 'rgtsd',
'*RPBLGTSZ': 'rgthss',
'RPBLGTSZ': 'rgtss',
'*RPBLGTS': 'rgths',
'RPBLGTS': 'rgts',
'*RPBLGTDZ': 'rgthds',
'RPBLGTDZ': 'rgtds',
'*RPBLGTD': 'rgthd',
'RPBLGTD': 'rgtd',
'*RPBLGTZ': 'rgths',
'RPBLGTZ': 'rgse',
'*RPBLGT': 'rgth',
'RPBLGT': 'rgt',
'*RPBLGSDZ': 'rgcds',
'RPBLGSDZ': 'rges',
'*RPBLGSD': 'rgcd',
'RPBLGSD': 'rge',
'*RPBLGSZ': 'rgcs',
'RPBLGSZ': 'rjections',
'*RPBLGS': 'rgc',
'RPBLGS': 'rjection',
'*RPBLGDZ': 'rge',
'RPBLGDZ': 'rgds',
'*RPBLGD': 'rgy',
'RPBLGD': 'rgd',
'*RPBLGZ': 'rgz',
'RPBLGZ': 'rgs',
'RPBLG': 'rg',
'*RPBLTSDZ': 'rnlthsds',
'RPBLTSDZ': 'rnltsds',
'*RPBLTSD': 'rnlthsd',
'RPBLTSD': 'rnltsd',
'*RPBLTSZ': 'rnlthss',
'RPBLTSZ': 'rnltss',
'*RPBLTS': 'rnlths',
'RPBLTS': 'rnlts',
'*RPBLTDZ': 'rnlthds',
'RPBLTDZ': 'rnltds',
'*RPBLTD': 'rnlthd',
'RPBLTD': 'rnltd',
'*RPBLTZ': 'rnlths',
'RPBLTZ': 'rnlts',
'*RPBLT': 'rnlth',
'RPBLT': 'rnlt',
'*RPBLSDZ': 'rnlcds',
'RPBLSDZ': 'rnlsds',
'*RPBLSD': 'rnlcd',
'RPBLSD': 'rnlsd',
'*RPBLSZ': 'rnlcs',
'RPBLSZ': 'rnlss',
'*RPBLS': 'rnlc',
'RPBLS': 'rnls',
'*RPBLDZ': 'rnlys',
'RPBLDZ': 'rnlds',
'*RPBLD': 'rnly',
'RPBLD': 'rnld',
'*RPBLZ': 'rnlz',
'RPBLZ': 'rnls',
'RPBL': 'rnl',
'*RPBGTSDZ': 'rnktsds',
'RPBGTSDZ': 'rngtsds',
'*RPBGTSD': 'rnktsd',
'RPBGTSD': 'rngtsd',
'*RPBGTSZ': 'rnktss',
'RPBGTSZ': 'rngtss',
'*RPBGTS': 'rnkts',
'RPBGTS': 'rngts',
'*RPBGTDZ': 'rnktds',
'RPBGTDZ': 'rngtds',
'*RPBGTD': 'rnktd',
'RPBGTD': 'rngtd',
'*RPBGTZ': 'rnkts',
'RPBGTZ': 'rngts',
'*RPBGT': 'rnkt',
'RPBGT': 'rngt',
'*RPBGSDZ': 'rnksds',
'RPBGSDZ': 'rnctionds',
'*RPBGSD': 'rnksd',
'RPBGSD': 'rnctiond',
'*RPBGSZ': 'rnkss',
'RPBGSZ': 'rnctions',
'*RPBGS': 'rnks',
'RPBGS': 'rnction',
'*RPBGDZ': 'rnkds',
'RPBGDZ': 'rngds',
'*RPBGD': 'rnkd',
'RPBGD': 'rngd',
'*RPBGZ': 'rnks',
'RPBGZ': 'rngs',
'*RPBG': 'rnk',
'RPBG': 'rng',
'*RPBTSDZ': 'rnthsds',
'RPBTSDZ': 'rntsds',
'*RPBTSD': 'rnthsd',
'RPBTSD': 'rntsd',
'*RPBTSZ': 'rnthss',
'RPBTSZ': 'rntss',
'*RPBTS': 'rnths',
'RPBTS': 'rnts',
'*RPBTDZ': 'rnthds',
'RPBTDZ': 'rntds',
'*RPBTD': 'rnthd',
'RPBTD': 'rntd',
'*RPBTZ': 'rnths',
'RPBTZ': 'rnts',
'*RPBT': 'rnth',
'RPBT': 'rnt',
'*RPBSDZ': 'rncds',
'RPBSDZ': 'rnsds',
'*RPBSD': 'rncd',
'RPBSD': 'rnsd',
'*RPBSZ': 'rncs',
'RPBSZ': 'rnss',
'*RPBS': 'rnc',
'RPBS': 'rns',
'*RPBDZ': 'rnys',
'RPBDZ': 'rnds',
'*RPBD': 'rny',
'RPBD': 'rnd',
'*RPBZ': 'rnz',
'RPBZ': 'rns',
'RPB': 'rn',
'*RPLGTSDZ': 'rmgthsds',
'RPLGTSDZ': 'rmgtsds',
'*RPLGTSD': 'rmgthsd',
'RPLGTSD': 'rmgtsd',
'*RPLGTSZ': 'rmgthss',
'RPLGTSZ': 'rmgtss',
'*RPLGTS': 'rmgths',
'RPLGTS': 'rmgts',
'*RPLGTDZ': 'rmgthds',
'RPLGTDZ': 'rmgtds',
'*RPLGTD': 'rmgthd',
'RPLGTD': 'rmgtd',
'*RPLGTZ': 'rmgths',
'RPLGTZ': 'rmgts',
'*RPLGT': 'rmgth',
'RPLGT': 'rmgt',
'*RPLGSDZ': 'rmgcds',
'RPLGSDZ': 'rmgsds',
'*RPLGSD': 'rmgcd',
'RPLGSD': 'rmgsd',
'*RPLGSZ': 'rmgcs',
'RPLGSZ': 'rmgss',
'*RPLGS': 'rmgc',
'RPLGS': 'rmgs',
'*RPLGDZ': 'rmgys',
'RPLGDZ': 'rmgds',
'*RPLGD': 'rmgy',
'RPLGD': 'rmgd',
'*RPLGZ': 'rmgz',
'RPLGZ': 'rmgs',
'RPLG': 'rmg',
'*RPLTSDZ': 'rmthsds',
'RPLTSDZ': 'rmtsds',
'*RPLTSD': 'rmthsd',
'RPLTSD': 'rmtsd',
'*RPLTSZ': 'rmthss',
'RPLTSZ': 'rmtss',
'*RPLTS': 'rmths',
'RPLTS': 'rmts',
'*RPLTDZ': 'rmthds',
'RPLTDZ': 'rmtds',
'*RPLTD': 'rmthd',
'RPLTD': 'rmtd',
'*RPLTZ': 'rmths',
'RPLTZ': 'rmts',
'*RPLT': 'rmth',
'RPLT': 'rmt',
'*RPLSDZ': 'rmcds',
'RPLSDZ': 'rmsds',
'*RPLSD': 'rmcd',
'RPLSD': 'rmsd',
'*RPLSZ': 'rmcs',
'RPLSZ': 'rmss',
'*RPLS': 'rmc',
'RPLS': 'rms',
'*RPLDZ': 'rmys',
'RPLDZ': 'rmds',
'*RPLD': 'rmy',
'RPLD': 'rmd',
'*RPLZ': 'rmz',
'RPLZ': 'rms',
'RPL': 'rm',
'*RPGTSDZ': 'rpgthsds',
'RPGTSDZ': 'rpgtsds',
'*RPGTSD': 'rpgthsd',
'RPGTSD': 'rpgtsd',
'*RPGTSZ': 'rpgthss',
'RPGTSZ': 'rpgtss',
'*RPGTS': 'rpgths',
'RPGTS': 'rpgts',
'*RPGTDZ': 'rpgthds',
'RPGTDZ': 'rpgtds',
'*RPGTD': 'rpgthd',
'RPGTD': 'rpgtd',
'*RPGTZ': 'rpgths',
'RPGTZ': 'rpgts',
'*RPGT': 'rpgth',
'RPGT': 'rpgt',
'*RPGSDZ': 'rpgcds',
'RPGSDZ': 'rpgsds',
'*RPGSD': 'rpgcd',
'RPGSD': 'rpgsd',
'*RPGSZ': 'rpgcs',
'RPGSZ': 'rpgss',
'*RPGS': 'rpgc',
'RPGS': 'rpgs',
'*RPGDZ': 'rpgys',
'RPGDZ': 'rpgds',
'*RPGD': 'rpgy',
'RPGD': 'rpgd',
'*RPGZ': 'rpgz',
'RPGZ': 'rpgs',
'RPG': 'rpg',
'*RPTSDZ': 'rpthsds',
'RPTSDZ': 'rptsds',
'*RPTSD': 'rpthsd',
'RPTSD': 'rptsd',
'*RPTSZ': 'rpthss',
'RPTSZ': 'rptss',
'*RPTS': 'rpths',
'RPTS': 'rpts',
'*RPTDZ': 'rpthds',
'RPTDZ': 'rptds',
'*RPTD': 'rpthd',
'RPTD': 'rptd',
'*RPTZ': 'rpths',
'RPTZ': 'rpts',
'*RPT': 'rpth',
'RPT': 'rpt',
'*RPSDZ': 'rpcds',
'RPSDZ': 'rhds',
'*RPSD': 'rpcd',
'RPSD': 'rhd',
'*RPSZ': 'rpcs',
'RPSZ': 'rhs',
'*RPS': 'rpc',
'RPS': 'rh',
'*RPDZ': 'rpys',
'RPDZ': 'rpds',
'*RPD': 'rpy',
'RPD': 'rpd',
'*RPZ': 'rh',
'RPZ': 'rps',
'RP': 'rp',
'*RBLGTSDZ': 'rcklethsds',
'RBLGTSDZ': 'rrowxtsds',
'*RBLGTSD': 'rcklethsd',
'RBLGTSD': 'rrowxtsd',
'*RBLGTSZ': 'rcklethss',
'RBLGTSZ': 'rrowxtss',
'*RBLGTS': 'rckleths',
'RBLGTS': 'rrowxts',
'*RBLGTDZ': 'rcklethds',
'RBLGTDZ': 'rrowxtds',
'*RBLGTD': 'rcklethd',
'RBLGTD': 'rrowxtd',
'*RBLGTZ': 'rckleths',
'RBLGTZ': 'rrowxts',
'*RBLGT': 'rckleth',
'RBLGT': 'rrowxt',
'*RBLGSDZ': 'rcklecds',
'RBLGSDZ': 'rrowtionds',
'*RBLGSD': 'rcklecd',
'RBLGSD': 'rrowtiond',
'*RBLGSZ': 'rcklecs',
'RBLGSZ': 'rrowtions',
'*RBLGS': 'rcklec',
'RBLGS': 'rrowtion',
'*RBLGDZ': 'rckleys',
'RBLGDZ': 'rckleds',
'*RBLGD': 'rckley',
'RBLGD': 'rckled',
'*RBLGZ': 'rcklez',
'RBLGZ': 'rckles',
'RBLG': 'rckle',
'*RBLTSDZ': 'rrowthsds',
'RBLTSDZ': 'rrowtsds',
'*RBLTSD': 'rrowthsd',
'RBLTSD': 'rrowtsd',
'*RBLTSZ': 'rrowthss',
'RBLTSZ': 'rrowtss',
'*RBLTS': 'rrowths',
'RBLTS': 'rrowts',
'*RBLTDZ': 'rrowthds',
'RBLTDZ': 'rrowtds',
'*RBLTD': 'rrowthd',
'RBLTD': 'rrowtd',
'*RBLTZ': 'rrowths',
'RBLTZ': 'rrowse',
'*RBLT': 'rrowth',
'RBLT': 'rrowt',
'*RBLSDZ': 'rrowcds',
'RBLSDZ': 'rrowes',
'*RBLSD': 'rrowcd',
'RBLSD': 'rrowe',
'*RBLSZ': 'rrowcs',
'RBLSZ': 'rrowss',
'*RBLS': 'rrowc',
'RBLS': 'rrows',
'*RBLDZ': 'rrowe',
'RBLDZ': 'rrowds',
'*RBLD': 'rrowy',
'RBLD': 'rrowd',
'*RBLZ': 'rrowz',
'RBLZ': 'rrows',
'RBL': 'rrow',
'*RBGTSDZ': 'rcktsds',
'RBGTSDZ': 'rctsds',
'*RBGTSD': 'rcktsd',
'RBGTSD': 'rctsd',
'*RBGTSZ': 'rcktss',
'RBGTSZ': 'rctss',
'*RBGTS': 'rckts',
'RBGTS': 'rcts',
'*RBGTDZ': 'rcktds',
'RBGTDZ': 'rctds',
'*RBGTD': 'rcktd',
'RBGTD': 'rctd',
'*RBGTZ': 'rckts',
'RBGTZ': 'rkse',
'*RBGT': 'rckt',
'RBGT': 'rct',
'*RBGSDZ': 'rctionds',
'RBGSDZ': 'rkes',
'*RBGSD': 'rctiond',
'RBGSD': 'rke',
'*RBGSZ': 'rctions',
'RBGSZ': '{,}s',
'*RBGS': 'rction',
'RBGS': '{,}',
'*RBGDZ': 'rckds',
'RBGDZ': 'rkds',
'*RBGD': 'rckd',
'RBGD': 'rkd',
'*RBGZ': 'rcks',
'RBGZ': 'rks',
'*RBG': 'rck',
'RBG': 'rk',
'*RBTSDZ': 'shthsds',
'RBTSDZ': 'tiales',
'*RBTSD': 'shthsd',
'RBTSD': 'tiale',
'*RBTSZ': 'shthss',
'RBTSZ': 'shtss',
'*RBTS': 'shths',
'RBTS': 'shts',
'*RBTDZ': 'shthds',
'RBTDZ': 'tialds',
'*RBTD': 'shthd',
'RBTD': 'tiald',
'*RBTZ': 'shths',
'RBTZ': 'shse',
'*RBT': 'shth',
'RBT': 'tial',
'*RBSDZ': 'shcds',
'RBSDZ': 'shes',
'*RBSD': 'shcd',
'RBSD': 'she',
'*RBSZ': 'shcs',
'RBSZ': 'tiouss',
'*RBS': 'shc',
'RBS': 'tious',
'*RBDZ': 'she',
'RBDZ': 'shds',
'*RBD': 'shy',
'RBD': 'shd',
'*RBZ': 'shz',
'RBZ': 'shs',
'RB': 'sh',
'*RLGTSDZ': 'rlgthsds',
'RLGTSDZ': 'rlgtsds',
'*RLGTSD': 'rlgthsd',
'RLGTSD': 'rlgtsd',
'*RLGTSZ': 'rlgthss',
'RLGTSZ': 'rlgtss',
'*RLGTS': 'rlgths',
'RLGTS': 'rlgts',
'*RLGTDZ': 'rlgthds',
'RLGTDZ': 'rlgtds',
'*RLGTD': 'rlgthd',
'RLGTD': 'rlgtd',
'*RLGTZ': 'rlgths',
'RLGTZ': 'rlgts',
'*RLGT': 'rlgth',
'RLGT': 'rlgt',
'*RLGSDZ': 'rlgcds',
'RLGSDZ': 'rlgsds',
'*RLGSD': 'rlgcd',
'RLGSD': 'rlgsd',
'*RLGSZ': 'rlgcs',
'RLGSZ': 'rlgss',
'*RLGS': 'rlgc',
'RLGS': 'rlgs',
'*RLGDZ': 'rlgys',
'RLGDZ': 'rlgds',
'*RLGD': 'rlgy',
'RLGD': 'rlgd',
'*RLGZ': 'rlgz',
'RLGZ': 'rlgs',
'RLG': 'rlg',
'*RLTSDZ': 'rlthsds',
'RLTSDZ': 'rltsds',
'*RLTSD': 'rlthsd',
'RLTSD': 'rltsd',
'*RLTSZ': 'rlthss',
'RLTSZ': 'rltss',
'*RLTS': 'rlths',
'RLTS': 'rlts',
'*RLTDZ': 'rlthds',
'RLTDZ': 'rltds',
'*RLTD': 'rlthd',
'RLTD': 'rltd',
'*RLTZ': 'rlths',
'RLTZ': 'rlts',
'*RLT': 'rlth',
'RLT': 'rlt',
'*RLSDZ': 'rlcds',
'RLSDZ': 'rlsds',
'*RLSD': 'rlcd',
'RLSD': 'rlsd',
'*RLSZ': 'rlcs',
'RLSZ': 'rlss',
'*RLS': 'rlc',
'RLS': 'rls',
'*RLDZ': 'rlys',
'RLDZ': 'rlds',
'*RLD': 'rly',
'RLD': 'rld',
'*RLZ': 'rlz',
'RLZ': 'rls',
'RL': 'rl',
'*RGTSDZ': 'rgthsds',
'RGTSDZ': 'rxtsds',
'*RGTSD': 'rgthsd',
'RGTSD': 'rxtsd',
'*RGTSZ': 'rgthss',
'RGTSZ': 'rxtss',
'*RGTS': 'rgths',
'RGTS': 'rxts',
'*RGTDZ': 'rgthds',
'RGTDZ': 'rxtds',
'*RGTD': 'rgthd',
'RGTD': 'rxtd',
'*RGTZ': 'rgths',
'RGTZ': 'rxts',
'*RGT': 'rgth',
'RGT': 'rxt',
'*RGSDZ': 'rgcds',
'RGSDZ': 'rtionds',
'*RGSD': 'rgcd',
'RGSD': 'rtiond',
'*RGSZ': 'rgcs',
'RGSZ': 'rtions',
'*RGS': 'rgc',
'RGS': 'rtion',
'*RGDZ': 'rgys',
'RGDZ': 'rgds',
'*RGD': 'rgy',
'RGD': 'rgd',
'*RGZ': 'rgz',
'RGZ': 'rgs',
'RG': 'rg',
'*RTSDZ': 'rthsds',
'RTSDZ': 'rtsds',
'*RTSD': 'rthsd',
'RTSD': 'rtsd',
'*RTSZ': 'rthss',
'RTSZ': 'rtss',
'*RTS': 'rths',
'RTS': 'rts',
'*RTDZ': 'rthds',
'RTDZ': 'rtds',
'*RTD': 'rthd',
'RTD': 'rtd',
'*RTZ': 'rths',
'RTZ': 'rse',
'*RT': 'rth',
'RT': 'rt',
'*RSDZ': 'rcds',
'RSDZ': 'res',
'*RSD': 'rcd',
'RSD': 're',
'*RSZ': 'rcs',
'RSZ': 'rss',
'*RS': 'rc',
'RS': 'rs',
'*RDZ': 're',
'RDZ': 'rds',
'*RD': 'ry',
'RD': 'rd',
'*RZ': 'rz',
'RZ': 'rs',
'R': 'r',
'*PBLGTSDZ': 'dgthsds',
'PBLGTSDZ': 'dgtsds',
'*PBLGTSD': 'dgthsd',
'PBLGTSD': 'dgtsd',
'*PBLGTSZ': 'dgthss',
'PBLGTSZ': 'dgtss',
'*PBLGTS': 'dgths',
'PBLGTS': 'dgts',
'*PBLGTDZ': 'dgthds',
'PBLGTDZ': 'dgtds',
'*PBLGTD': 'dgthd',
'PBLGTD': 'dgtd',
'*PBLGTZ': 'dgths',
'PBLGTZ': 'dgse',
'*PBLGT': 'dgth',
'PBLGT': 'dgt',
'*PBLGSDZ': 'dgcds',
'PBLGSDZ': 'dges',
'*PBLGSD': 'dgcd',
'PBLGSD': 'dge',
'*PBLGSZ': 'dgcs',
'PBLGSZ': 'jections',
'*PBLGS': 'dgc',
'PBLGS': 'jection',
'*PBLGDZ': 'dge',
'PBLGDZ': 'dgds',
'*PBLGD': 'dgy',
'PBLGD': 'dgd',
'*PBLGZ': 'dgz',
'PBLGZ': 'dgs',
'PBLG': 'dg',
'*PBLTSDZ': 'nlthsds',
'PBLTSDZ': 'nltsds',
'*PBLTSD': 'nlthsd',
'PBLTSD': 'nltsd',
'*PBLTSZ': 'nlthss',
'PBLTSZ': 'nltss',
'*PBLTS': 'nlths',
'PBLTS': 'nlts',
'*PBLTDZ': 'nlthds',
'PBLTDZ': 'nltds',
'*PBLTD': 'nlthd',
'PBLTD': 'nltd',
'*PBLTZ': 'nlths',
'PBLTZ': 'nlts',
'*PBLT': 'nlth',
'PBLT': 'nlt',
'*PBLSDZ': 'nlcds',
'PBLSDZ': 'nlsds',
'*PBLSD': 'nlcd',
'PBLSD': 'nlsd',
'*PBLSZ': 'nlcs',
'PBLSZ': 'nlss',
'*PBLS': 'nlc',
'PBLS': 'nls',
'*PBLDZ': 'nlys',
'PBLDZ': 'nlds',
'*PBLD': 'nly',
'PBLD': 'nld',
'*PBLZ': 'nlz',
'PBLZ': 'nls',
'PBL': 'nl',
'*PBGTSDZ': 'nktsds',
'PBGTSDZ': 'pctsds',
'*PBGTSD': 'nktsd',
'PBGTSD': 'pctsd',
'*PBGTSZ': 'nktss',
'PBGTSZ': 'pctss',
'*PBGTS': 'nkts',
'PBGTS': 'pcts',
'*PBGTDZ': 'nktds',
'PBGTDZ': 'pctds',
'*PBGTD': 'nktd',
'PBGTD': 'pctd',
'*PBGTZ': 'nkse',
'PBGTZ': 'ngse',
'*PBGT': 'nkt',
'PBGT': 'pct',
'*PBGSDZ': 'nkes',
'PBGSDZ': 'nges',
'*PBGSD': 'nke',
'PBGSD': 'nge',
'*PBGSZ': 'nkss',
'PBGSZ': 'nctions',
'*PBGS': 'pction',
'PBGS': 'nction',
'*PBGDZ': 'nkds',
'PBGDZ': 'ngds',
'*PBGD': 'nkd',
'PBGD': 'ngd',
'*PBGZ': 'nks',
'PBGZ': 'ngs',
'*PBG': 'nk',
'PBG': 'ng',
'*PBTSDZ': 'nthsds',
'PBTSDZ': 'ntsds',
'*PBTSD': 'nthsd',
'PBTSD': 'ntsd',
'*PBTSZ': 'nthss',
'PBTSZ': 'ntss',
'*PBTS': 'nths',
'PBTS': 'nts',
'*PBTDZ': 'nthds',
'PBTDZ': 'ntds',
'*PBTD': 'nthd',
'PBTD': 'ntd',
'*PBTZ': 'nths',
'PBTZ': 'nse',
'*PBT': 'nth',
'PBT': 'nt',
'*PBSDZ': 'ncds',
'PBSDZ': 'nes',
'*PBSD': 'ncd',
'PBSD': 'ne',
'*PBSZ': 'ncs',
'PBSZ': 'nss',
'*PBS': 'nc',
'PBS': 'ns',
'*PBDZ': 'ne',
'PBDZ': 'nds',
'*PBD': 'ny',
'PBD': 'nd',
'*PBZ': 'nz',
'PBZ': 'ns',
'PB': 'n',
'*PLGTSDZ': 'mgthsds',
'PLGTSDZ': 'mxtsds',
'*PLGTSD': 'mgthsd',
'PLGTSD': 'mxtsd',
'*PLGTSZ': 'mgthss',
'PLGTSZ': 'mxtss',
'*PLGTS': 'mgths',
'PLGTS': 'mxts',
'*PLGTDZ': 'mgthds',
'PLGTDZ': 'mxtds',
'*PLGTD': 'mgthd',
'PLGTD': 'mxtd',
'*PLGTZ': 'mgths',
'PLGTZ': 'mxts',
'*PLGT': 'mgth',
'PLGT': 'mxt',
'*PLGSDZ': 'mgcds',
'PLGSDZ': 'mtionds',
'*PLGSD': 'mgcd',
'PLGSD': 'mtiond',
'*PLGSZ': 'mgcs',
'PLGSZ': 'mtions',
'*PLGS': 'mgc',
'PLGS': 'mtion',
'*PLGDZ': 'mgys',
'PLGDZ': 'mgds',
'*PLGD': 'mgy',
'PLGD': 'mgd',
'*PLGZ': 'mgz',
'PLGZ': 'mgs',
'PLG': 'mg',
'*PLTSDZ': 'mthsds',
'PLTSDZ': 'mtsds',
'*PLTSD': 'mthsd',
'PLTSD': 'mtsd',
'*PLTSZ': 'mthss',
'PLTSZ': 'mtss',
'*PLTS': 'mths',
'PLTS': 'mts',
'*PLTDZ': 'mthds',
'PLTDZ': 'mtds',
'*PLTD': 'mthd',
'PLTD': 'mtd',
'*PLTZ': 'mths',
'PLTZ': 'mse',
'*PLT': 'mth',
'PLT': 'mt',
'*PLSDZ': 'mcds',
'PLSDZ': 'mes',
'*PLSD': 'mcd',
'PLSD': 'me',
'*PLSZ': 'mcs',
'PLSZ': 'mss',
'*PLS': 'mc',
'PLS': 'ms',
'*PLDZ': 'me',
'PLDZ': 'mds',
'*PLD': 'my',
'PLD': 'md',
'*PLZ': 'mz',
'PLZ': 'ms',
'PL': 'm',
'*PGTSDZ': 'pgthsds',
'PGTSDZ': 'pxtsds',
'*PGTSD': 'pgthsd',
'PGTSD': 'pxtsd',
'*PGTSZ': 'pgthss',
'PGTSZ': 'pxtss',
'*PGTS': 'pgths',
'PGTS': 'pxts',
'*PGTDZ': 'pgthds',
'PGTDZ': 'pxtds',
'*PGTD': 'pgthd',
'PGTD': 'pxtd',
'*PGTZ': 'pgths',
'PGTZ': 'pxts',
'*PGT': 'pgth',
'PGT': 'pxt',
'*PGSDZ': 'pgcds',
'PGSDZ': 'ptionds',
'*PGSD': 'pgcd',
'PGSD': 'ptiond',
'*PGSZ': 'pgcs',
'PGSZ': 'ptions',
'*PGS': 'pgc',
'PGS': 'ption',
'*PGDZ': 'pgys',
'PGDZ': 'pgds',
'*PGD': 'pgy',
'PGD': 'pgd',
'*PGZ': 'pgz',
'PGZ': 'pgs',
'PG': 'pg',
'*PTSDZ': 'pthsds',
'PTSDZ': 'ptsds',
'*PTSD': 'pthsd',
'PTSD': 'ptsd',
'*PTSZ': 'pthss',
'PTSZ': 'ptss',
'*PTS': 'pths',
'PTS': 'pts',
'*PTDZ': 'pthds',
'PTDZ': 'ptds',
'*PTD': 'pthd',
'PTD': 'ptd',
'*PTZ': 'pths',
'PTZ': 'pse',
'*PT': 'pth',
'PT': 'pt',
'*PSDZ': 'pcds',
'PSDZ': 'pes',
'*PSD': 'pcd',
'PSD': 'pe',
'*PSZ': 'pcs',
'PSZ': 'hs',
'*PS': 'pc',
'PS': 'h',
'*PDZ': 'pe',
'PDZ': 'pds',
'*PD': 'py',
'PD': 'pd',
'*PZ': 'h',
'PZ': 'ps',
'P': 'p',
'*BLGTSDZ': 'cklethsds',
'BLGTSDZ': 'ckletsds',
'*BLGTSD': 'cklethsd',
'BLGTSD': 'ckletsd',
'*BLGTSZ': 'cklethss',
'BLGTSZ': 'ckletss',
'*BLGTS': 'ckleths',
'BLGTS': 'cklets',
'*BLGTDZ': 'cklethds',
'BLGTDZ': 'ckletds',
'*BLGTD': 'cklethd',
'BLGTD': 'ckletd',
'*BLGTZ': 'ckleths',
'BLGTZ': 'cklese',
'*BLGT': 'ckleth',
'BLGT': 'cklet',
'*BLGSDZ': 'cklecds',
'BLGSDZ': 'cklees',
'*BLGSD': 'cklecd',
'BLGSD': 'cklee',
'*BLGSZ': 'cklecs',
'BLGSZ': 'ckless',
'*BLGS': 'cklec',
'BLGS': 'ckles',
'*BLGDZ': 'cklee',
'BLGDZ': 'ckleds',
'*BLGD': 'ckley',
'BLGD': 'ckled',
'*BLGZ': 'cklez',
'BLGZ': 'ckles',
'BLG': 'ckle',
'*BLTSDZ': 'blthsds',
'BLTSDZ': 'bltsds',
'*BLTSD': 'blthsd',
'BLTSD': 'bltsd',
'*BLTSZ': 'blthss',
'BLTSZ': 'bltss',
'*BLTS': 'blths',
'BLTS': 'blts',
'*BLTDZ': 'blthds',
'BLTDZ': 'bltds',
'*BLTD': 'blthd',
'BLTD': 'bltd',
'*BLTZ': 'blths',
'BLTZ': 'blts',
'*BLT': 'blth',
'BLT': 'blt',
'*BLSDZ': 'blcds',
'BLSDZ': 'blsds',
'*BLSD': 'blcd',
'BLSD': 'blsd',
'*BLSZ': 'blcs',
'BLSZ': 'blss',
'*BLS': 'blc',
'BLS': 'bls',
'*BLDZ': 'blys',
'BLDZ': 'blds',
'*BLD': 'bly',
'BLD': 'bld',
'*BLZ': 'blz',
'BLZ': 'bls',
'BL': 'bl',
'*BGTSDZ': 'cktes',
'BGTSDZ': 'ctes',
'*BGTSD': 'ckte',
'BGTSD': 'cte',
'*BGTSZ': 'cktss',
'BGTSZ': 'ctss',
'*BGTS': 'kths',
'BGTS': 'cts',
'*BGTDZ': 'cktds',
'BGTDZ': 'ctds',
'*BGTD': 'cktd',
'BGTD': 'ctd',
'*BGTZ': 'ckse',
'BGTZ': 'kse',
'*BGT': 'kth',
'BGT': 'ct',
'*BGSDZ': 'ckes',
'BGSDZ': 'kes',
'*BGSD': 'cke',
'BGSD': 'ke',
'*BGSZ': 'ctions',
'BGSZ': 'xs',
'*BGS': 'ction',
'BGS': 'x',
'*BGDZ': 'ckds',
'BGDZ': 'kds',
'*BGD': 'ckd',
'BGD': 'kd',
'*BGZ': 'cks',
'BGZ': 'ks',
'*BG': 'ck',
'BG': 'k',
'*BTSDZ': 'bthsds',
'BTSDZ': 'btsds',
'*BTSD': 'bthsd',
'BTSD': 'btsd',
'*BTSZ': 'bthss',
'BTSZ': 'btss',
'*BTS': 'bths',
'BTS': 'bts',
'*BTDZ': 'bthds',
'BTDZ': 'btds',
'*BTD': 'bthd',
'BTD': 'btd',
'*BTZ': 'bths',
'BTZ': 'bse',
'*BT': 'bth',
'BT': 'bt',
'*BSDZ': 'bcds',
'BSDZ': 'bes',
'*BSD': 'bcd',
'BSD': 'be',
'*BSZ': 'bcs',
'BSZ': 'bss',
'*BS': 'bc',
'BS': 'bs',
'*BDZ': 'be',
'BDZ': 'bds',
'*BD': 'by',
'BD': 'bd',
'*BZ': 'bz',
'BZ': 'bs',
'B': 'b',
'*LGTSDZ': 'lgthsds',
'LGTSDZ': 'lxtsds',
'*LGTSD': 'lgthsd',
'LGTSD': 'lxtsd',
'*LGTSZ': 'lgthss',
'LGTSZ': 'lxtss',
'*LGTS': 'lgths',
'LGTS': 'lxts',
'*LGTDZ': 'lgthds',
'LGTDZ': 'lxtds',
'*LGTD': 'lgthd',
'LGTD': 'lxtd',
'*LGTZ': 'lgths',
'LGTZ': 'lxts',
'*LGT': 'lgth',
'LGT': 'lxt',
'*LGSDZ': 'lgcds',
'LGSDZ': 'ltionds',
'*LGSD': 'lgcd',
'LGSD': 'ltiond',
'*LGSZ': 'lgcs',
'LGSZ': 'ltions',
'*LGS': 'lgc',
'LGS': 'ltion',
'*LGDZ': 'lgys',
'LGDZ': 'lgds',
'*LGD': 'lgy',
'LGD': 'lgd',
'*LGZ': 'lgz',
'LGZ': 'lgs',
'LG': 'lg',
'*LTSDZ': 'lthsds',
'LTSDZ': 'ltsds',
'*LTSD': 'lthsd',
'LTSD': 'ltsd',
'*LTSZ': 'lthss',
'LTSZ': 'ltss',
'*LTS': 'lths',
'LTS': 'lts',
'*LTDZ': 'lthds',
'LTDZ': 'ltds',
'*LTD': 'lthd',
'LTD': 'ltd',
'*LTZ': 'lths',
'LTZ': 'lse',
'*LT': 'lth',
'LT': 'lt',
'*LSDZ': 'lcds',
'LSDZ': 'les',
'*LSD': 'lcd',
'LSD': 'le',
'*LSZ': 'lcs',
'LSZ': 'lss',
'*LS': 'lc',
'LS': 'ls',
'*LDZ': 'le',
'LDZ': 'lds',
'*LD': 'ly',
'LD': 'ld',
'*LZ': 'lz',
'LZ': 'ls',
'L': 'l',
'*GTSDZ': 'gthsds',
'GTSDZ': 'xtes',
'*GTSD': 'gthsd',
'GTSD': 'xte',
'*GTSZ': 'gthss',
'GTSZ': 'gtss',
'*GTS': 'gths',
'GTS': 'gts',
'*GTDZ': 'gthds',
'GTDZ': 'xtds',
'*GTD': 'gthd',
'GTD': 'xtd',
'*GTZ': 'gths',
'GTZ': 'gse',
'*GT': 'gth',
'GT': 'xt',
'*GSDZ': 'gcds',
'GSDZ': 'ges',
'*GSD': 'gcd',
'GSD': 'ge',
'*GSZ': 'gcs',
'GSZ': 'tions',
'*GS': 'gc',
'GS': 'tion',
'*GDZ': 'ge',
'GDZ': 'gds',
'*GD': 'gy',
'GD': 'gd',
'*GZ': 'gz',
'GZ': 'gs',
'G': 'g',
'*TSDZ': 'thes',
'TSDZ': 'tes',
'*TSD': 'the',
'TSD': 'te',
'*TSZ': 'thss',
'TSZ': 'tss',
'*TS': 'tc',
'TS': 'ts',
'*TDZ': 'thds',
'TDZ': 'tds',
'*TD': 'thd',
'TD': 'td',
'*TZ': 'tz',
'TZ': 'se',
'*T': 'th',
'T': 't',
'*SDZ': 'cds',
'SDZ': 'es',
'*SD': 'sy',
'SD': 'e',
'*SZ': 'cs',
'SZ': 'ss',
'*S': 'c',
'S': 's',
'*DZ': 'e',
'DZ': 'ds',
'*D': 'y',
'D': 'd',
'*Z': 'z',
'Z': 's',
}




import re

LONGEST_KEY = 20

numbers_to_letters = {
    "1": "S",
    "2": "T",
    "3": "P",
    "4": "H",
    "5": "A",
    "6": "F",
    "7": "P",
    "8": "L",
    "9": "T",
    "0": "O"
    }

def aericks_denumberizer(old_outline):

    old_strokes = old_outline.split("/")
    new_strokes = []

    for stroke in old_strokes:

        new_strokes.append(stroke)

        for match in numbers_to_letters.keys():

            if match in stroke:

                if new_strokes[-1][0] != "#":
                    new_strokes[-1] = "#" + new_strokes[-1]

                new_strokes[-1] = new_strokes[-1].replace(match, numbers_to_letters[match])

        if new_strokes == []:
            new_strokes = old_strokes

    return "/".join(new_strokes)


def lookup(strokes):

    #I don't know what this does
    #assert len(strokes) <= LONGEST_KEY, '%d/%d' % (len(strokes), LONGEST_KEY)

    if not "+" in strokes[0]:
        raise KeyError


    
    output_string=""

    for stroke in strokes:
        if stroke=="+":
            raise KeyError

        #punctuation
        if stroke=="TK-LS":
            raise KeyError
        if stroke=="S-P":
            raise KeyError
        if stroke=="KPA":
            raise KeyError
        if stroke=="KPA*":
            raise KeyError
        if stroke=="R-R":
            raise KeyError
        if stroke=="TP-PL":
            raise KeyError
        if stroke=="KW-PL":
            raise KeyError
        if stroke=="TP-BG":
            raise KeyError

        #navigation
        if stroke=="STPH-R":
            raise KeyError
        if stroke=="STPH-RB":
            raise KeyError
        if stroke=="STPH-P":
            raise KeyError
        if stroke=="STPH-B":
            raise KeyError
        if stroke=="STPH-BG":
            raise KeyError
        if stroke=="STPH-G":
            raise KeyError
        
        #Emily's stuff (might also have to do this for my phrasing too?)
        if "SKWH"in stroke:
            raise KeyError
        if "LTZ" in stroke:
            raise KeyError

    for stroke_number in range(len(strokes)):

            

        if not stroke_number ==0 and "+" in strokes[stroke_number]:
            raise KeyError


        #match the strokes
        match= re.fullmatch(
            #dissect the string to starter_letters, vowels and ender_letters
            r'(#?)(\^?S?T?K?P?W?H?R?)(A?O?\*?\-?E?U?)(F?R?P?B?L?G?T?S?D?Z?)',

            #this string:
            aericks_denumberizer(strokes[stroke_number].replace("+","")))

        if not match:
            raise KeyError

        start_thing=starter_letter[match[2]]
        if "*" in match[3]:
            end_thing=ender_letter["*"+match[4]]
            if not end_thing:
                raise KeyError
        else:
            end_thing=ender_letter[match[4]]
        middle_thing=vowels[match[3].replace("*","")]

    


        if "#" in match[1]:
            output_string+=(
                (start_thing+
                middle_thing+
                end_thing
                ).capitalize())

        else:
            output_string+=(
                start_thing+
                middle_thing+
                end_thing
                )
    return output_string
