"""
@Jalexu on discord had an idea for fingerspelling using the whole keyboard, not just one letter at a time
Key considerations were that it wasn't tailored for English, as this is mostly for foreign words/names


@Jalexu is not on GitHub so DM them for the most up to date version
"""

starterstroke = '#T'   #if you don't have Lapwing's plug-in, #T will have to be 2
startercap = '#TP'


starter_letter={
    "":"",
    '^STKPWHR': 'azl',
    '^STKPWH': 'azh',
    '^STKPWR': 'azr',
    '^STKPW': 'az',
    '^STKPHR': 'adispl',
    '^STKPH': 'adism',
    '^STKPR': 'astxr',
    '^STKP': 'adisp',
    '^STKWHR': 'asdevl',
    '^STKWH': 'asdevh',
    '^STKWR': 'asty',
    '^STKW': 'asdev',
    '^STKHR': 'adisl',
    '^STKH': 'adish',
    '^STKR': 'asdr',
    '^STK': 'adis',
    '^STPWHR': 'astbl',
    '^STPWH': 'astbh',
    '^STPWR': 'astbr',
    '^STPW': 'astb',
    '^STPHR': 'astpl',
    '^STPH': 'asn',
    '^STPR': 'asfr',
    '^STP': 'asf',
    '^STWHR': 'astwl',
    '^STWH': 'astwh',
    '^STWR': 'astwr',
    '^STW': 'astw',
    '^STHR': 'astl',
    '^STH': 'asth',
    '^STR': 'astr',
    '^ST': 'ast',
    '^SKPWHR': 'asimpl',
    '^SKPWH': 'asimph',
    '^SKPWR': 'asimpr',
    '^SKPW': 'exb',
    '^SKPHR': 'expl',
    '^SKPH': 'em',
    '^SKPR': 'aandr',
    '^SKP': 'asx',
    '^SKWHR': 'asql',
    '^SKWH': 'asqh',
    '^SKWR': 'eng',
    '^SKW': 'exw',
    '^SKHR': 'excl',
    '^SKH': 'exh',
    '^SKR': 'excr',
    '^SK': 'ex',
    '^SPWHR': 'aintl',
    '^SPWH': 'ainth',
    '^SPWR': 'aintr',
    '^SPW': 'aint',
    '^SPHR': 'aspl',
    '^SPH': 'asm',
    '^SPR': 'aspr',
    '^SP': 'asp',
    '^SWHR': 'aswl',
    '^SWH': 'aswh',
    '^SWR': 'aswr',
    '^SW': 'asw',
    '^SHR': 'asl',
    '^SH': 'ash',
    '^SR': 'av',
    '^S': 'as',
    '^TKPWHR': 'agl',
    '^TKPWH': 'agh',
    '^TKPWR': 'agr',
    '^TKPW': 'ag',
    '^TKPHR': 'adpl',
    '^TKPH': 'adm',
    '^TKPR': 'atxr',
    '^TKP': 'atx',
    '^TKWHR': 'adevl',
    '^TKWH': 'adevh',
    '^TKWR': 'aty',
    '^TKW': 'adev',
    '^TKHR': 'adl',
    '^TKH': 'atch',
    '^TKR': 'adr',
    '^TK': 'ad',
    '^TPWHR': 'atbl',
    '^TPWH': 'atbh',
    '^TPWR': 'atbr',
    '^TPW': 'atb',
    '^TPHR': 'on r',
    '^TPH': 'on ',
    '^TPR': 'afr',
    '^TP': 'af',
    '^TWHR': 'atwl',
    '^TWH': 'atwh',
    '^TWR': 'atwr',
    '^TW': 'atw',
    '^THR': 'atl',
    '^TH': 'ath',
    '^TR': 'atr',
    '^T': 'at',
    '^KPWHR': 'aimpl',
    '^KPWH': 'aimph',
    '^KPWR': 'aimpr',
    '^KPW': 'aimp',
    '^KPHR': 'akpl',
    '^KPH': 'akm',
    '^KPR': 'axr',
    '^KP': 'ax',
    '^KWHR': 'aql',
    '^KWH': 'aqh',
    '^KWR': 'ay',
    '^KW': 'aq',
    '^KHR': 'akl',
    '^KH': 'ach',
    '^KR': 'ac',
    '^K': 'ak',
    '^PWHR': 'abl',
    '^PWH': 'abh',
    '^PWR': 'abr',
    '^PW': 'ab',
    '^PHR': 'apl',
    '^PH': 'am',
    '^PR': 'apr',
    '^P': 'ap',
    '^WHR': 'awl',
    '^WH': 'awh',
    '^WR': 'awr',
    '^W': 'aw',
    '^HR': 'al',
    '^H': 'ah',
    '^R': 'ar',
    '^': 'a',
    'STKPWHR': 'zl',
    'STKPWH': 'zh',
    'STKPWR': 'zr',
    'STKPW': 'z',
    'STKPHR': 'displ',
    'STKPH': 'dism',
    'STKPR': 'stxr',
    'STKP': 'disp',
    'STKWHR': 'sdevl',
    'STKWH': 'sdevh',
    'STKWR': 'sty',
    'STKW': 'sdev',
    'STKHR': 'disl',
    'STKH': 'dish',
    'STKR': 'sdr',
    'STK': 'dis',
    'STPWHR': 'stbl',
    'STPWH': 'stbh',
    'STPWR': 'stbr',
    'STPW': 'stb',
    'STPHR': 'stpl',
    'STPH': 'sn',
    'STPR': 'sfr',
    'STP': 'sf',
    'STWHR': 'stwl',
    'STWH': 'stwh',
    'STWR': 'stwr',
    'STW': 'stw',
    'STHR': 'stl',
    'STH': 'sth',
    'STR': 'str',
    'ST': 'st',
    'SKPWHR': 'simpl',
    'SKPWH': 'simph',
    'SKPWR': 'simpr',
    'SKPW': 'simp',
    'SKPHR': 'sxl',
    'SKPH': 'im',
    'SKPR': 'sxr',
    'SKP': 'sx',
    'SKWHR': 'sql',
    'SKWH': 'sqh',
    'SKWR': 'j',
    'SKW': 'sq',
    'SKHR': 'shr',
    'SKH': 'sch',
    'SKR': 'sc',
    'SK': 'sk',
    'SPWHR': 'intl',
    'SPWH': 'inth',
    'SPWR': 'intr',
    'SPW': 'int',
    'SPHR': 'spl',
    'SPH': 'sm',
    'SPR': 'spr',
    'SP': 'sp',
    'SWHR': 'swl',
    'SWH': 'swh',
    'SWR': 'swr',
    'SW': 'sw',
    'SHR': 'sl',
    'SH': 'sh',
    'SR': 'v',
    'S': 's',
    'TKPWHR': 'gl',
    'TKPWH': 'gh',
    'TKPWR': 'gr',
    'TKPW': 'g',
    'TKPHR': 'dpl',
    'TKPH': 'dm',
    'TKPR': 'txr',
    'TKP': 'tx',
    'TKWHR': 'devl',
    'TKWH': 'devh',
    'TKWR': 'ty',
    'TKW': 'dev',
    'TKHR': 'dl',
    'TKH': 'tch',
    'TKR': 'dr',
    'TK': 'd',
    'TPWHR': 'tbl',
    'TPWH': 'tbh',
    'TPWR': 'tbr',
    'TPW': 'tb',
    'TPHR': 'tpl',
    'TPH': 'n',
    'TPR': 'fr',
    'TP': 'f',
    'TWHR': 'twl',
    'TWH': 'twh',
    'TWR': 'twr',
    'TW': 'tw',
    'THR': 'tl',
    'TH': 'th',
    'TR': 'tr',
    'T': 't',
    'KPWHR': 'impl',
    'KPWH': 'imph',
    'KPWR': 'impr',
    'KPW': 'imp',
    'KPHR': 'kpl',
    'KPH': 'km',
    'KPR': 'xr',
    'KP': 'x',
    'KWHR': 'ql',
    'KWH': 'qh',
    'KWR': 'y',
    'KW': 'q',
    'KHR': 'kl',
    'KH': 'ch',
    'KR': 'c',
    'K': 'k',
    'PWHR': 'bl',
    'PWH': 'bh',
    'PWR': 'br',
    'PW': 'b',
    'PHR': 'pl',
    'PH': 'm',
    'PR': 'pr',
    'P': 'p',
    'WHR': 'wl',
    'WH': 'wh',
    'WR': 'wr',
    'W': 'w',
    'HR': 'l',
    'H': 'h',
    'R': 'r',
}


vowels={
    "-":"",
    
    "":"",

    "*":"",

    "A"   :"a",
    "AO"  :"oo",
    "AOE" :"ee",
    "AOEU":"ie",
    "AOU" :"ue",
    "AE"  :"ea",
    "AEU" :"ai",
    "AU"  :"au",

    "O"   :"o",
    "OE"  :"oe",
    "OEU" :"oi",
    "OU"  :"ou",

    "E"   :"e",
    "EU"  :"i",

    "U"   :"u"
}

ender_letter={
    "":"",
    '*FRPBLGTSDZ': 'nchlgtsde',
    'FRPBLGTSDZ': 'frgtsde',
    '*FRPBLGTSD': 'nchlgtsd',
    'FRPBLGTSD': 'frgtsd',
    '*FRPBLGTSZ': 'nchlgtse',
    'FRPBLGTSZ': 'frgtse',
    '*FRPBLGTS': 'nchlgts',
    'FRPBLGTS': 'frgts',
    '*FRPBLGTDZ': 'nchlgtde',
    'FRPBLGTDZ': 'frgtde',
    '*FRPBLGTD': 'nchlgtd',
    'FRPBLGTD': 'frgtd',
    '*FRPBLGTZ': 'nchlgte',
    'FRPBLGTZ': 'frgte',
    '*FRPBLGT': 'nchlgt',
    'FRPBLGT': 'frgt',
    '*FRPBLGSDZ': 'nchlgsde',
    'FRPBLGSDZ': 'frgsde',
    '*FRPBLGSD': 'nchlgsd',
    'FRPBLGSD': 'frgsd',
    '*FRPBLGSZ': 'nchlgse',
    'FRPBLGSZ': 'frgse',
    '*FRPBLGS': 'nchlgs',
    'FRPBLGS': 'frgs',
    '*FRPBLGDZ': 'nchlgde',
    'FRPBLGDZ': 'frgde',
    '*FRPBLGD': 'nchlgd',
    'FRPBLGD': 'frgd',
    '*FRPBLGZ': 'nchlge',
    'FRPBLGZ': 'frge',
    '*FRPBLG': 'nchlg',
    'FRPBLG': 'frg',
    '*FRPBLTSDZ': 'nchltsde',
    'FRPBLTSDZ': 'rchltsde',
    '*FRPBLTSD': 'nchltsd',
    'FRPBLTSD': 'rchltsd',
    '*FRPBLTSZ': 'nchltse',
    'FRPBLTSZ': 'rchltse',
    '*FRPBLTS': 'nchlts',
    'FRPBLTS': 'rchlts',
    '*FRPBLTDZ': 'nchltde',
    'FRPBLTDZ': 'rchltde',
    '*FRPBLTD': 'nchltd',
    'FRPBLTD': 'rchltd',
    '*FRPBLTZ': 'nchlte',
    'FRPBLTZ': 'rchlte',
    '*FRPBLT': 'nchlt',
    'FRPBLT': 'rchlt',
    '*FRPBLSDZ': 'nchlsde',
    'FRPBLSDZ': 'rchlsde',
    '*FRPBLSD': 'nchlsd',
    'FRPBLSD': 'rchlsd',
    '*FRPBLSZ': 'nchlse',
    'FRPBLSZ': 'rchlse',
    '*FRPBLS': 'nchls',
    'FRPBLS': 'rchls',
    '*FRPBLDZ': 'nchlde',
    'FRPBLDZ': 'rchlde',
    '*FRPBLD': 'nchld',
    'FRPBLD': 'rchld',
    '*FRPBLZ': 'nchle',
    'FRPBLZ': 'rchle',
    '*FRPBL': 'nchl',
    'FRPBL': 'rchl',
    '*FRPBGTSDZ': 'nchxtsde',
    'FRPBGTSDZ': 'mpctsde',
    '*FRPBGTSD': 'nchxtsd',
    'FRPBGTSD': 'mpctsd',
    '*FRPBGTSZ': 'nchxtse',
    'FRPBGTSZ': 'mpctse',
    '*FRPBGTS': 'nchxts',
    'FRPBGTS': 'mpcts',
    '*FRPBGTDZ': 'nchxtde',
    'FRPBGTDZ': 'mpctde',
    '*FRPBGTD': 'nchxtd',
    'FRPBGTD': 'mpctd',
    '*FRPBGTZ': 'nchxte',
    'FRPBGTZ': 'mpcte',
    '*FRPBGT': 'nchxt',
    'FRPBGT': 'mpct',
    '*FRPBGSDZ': 'nchtionde',
    'FRPBGSDZ': 'mpxde',
    '*FRPBGSD': 'nchtiond',
    'FRPBGSD': 'mpxd',
    '*FRPBGSZ': 'nchtione',
    'FRPBGSZ': 'mpxe',
    '*FRPBGS': 'nchtion',
    'FRPBGS': 'mpx',
    '*FRPBGDZ': 'nchgde',
    'FRPBGDZ': 'mpkde',
    '*FRPBGD': 'nchgd',
    'FRPBGD': 'mpkd',
    '*FRPBGZ': 'nchge',
    'FRPBGZ': 'mpke',
    '*FRPBG': 'nchg',
    'FRPBG': 'mpk',
    '*FRPBTSDZ': 'nchtsde',
    'FRPBTSDZ': 'rchtsde',
    '*FRPBTSD': 'nchtsd',
    'FRPBTSD': 'rchtsd',
    '*FRPBTSZ': 'nchtse',
    'FRPBTSZ': 'rchtse',
    '*FRPBTS': 'nchts',
    'FRPBTS': 'rchts',
    '*FRPBTDZ': 'nchtde',
    'FRPBTDZ': 'rchtde',
    '*FRPBTD': 'nchtd',
    'FRPBTD': 'rchtd',
    '*FRPBTZ': 'nchte',
    'FRPBTZ': 'rchte',
    '*FRPBT': 'ncht',
    'FRPBT': 'rcht',
    '*FRPBSDZ': 'nchsde',
    'FRPBSDZ': 'rchsde',
    '*FRPBSD': 'nchsd',
    'FRPBSD': 'rchsd',
    '*FRPBSZ': 'nchse',
    'FRPBSZ': 'rchse',
    '*FRPBS': 'nchs',
    'FRPBS': 'rchs',
    '*FRPBDZ': 'nchde',
    'FRPBDZ': 'rchde',
    '*FRPBD': 'nchd',
    'FRPBD': 'rchd',
    '*FRPBZ': 'nche',
    'FRPBZ': 'rche',
    '*FRPB': 'nch',
    'FRPB': 'rch',
    '*FRPLGTSDZ': 'mplgthsde',
    'FRPLGTSDZ': 'mplxtsde',
    '*FRPLGTSD': 'mplgthsd',
    'FRPLGTSD': 'mplxtsd',
    '*FRPLGTSZ': 'mplgthse',
    'FRPLGTSZ': 'mplxtse',
    '*FRPLGTS': 'mplgths',
    'FRPLGTS': 'mplxts',
    '*FRPLGTDZ': 'mplgthde',
    'FRPLGTDZ': 'mplxtde',
    '*FRPLGTD': 'mplgthd',
    'FRPLGTD': 'mplxtd',
    '*FRPLGTZ': 'mplgthe',
    'FRPLGTZ': 'mplxte',
    '*FRPLGT': 'mplgth',
    'FRPLGT': 'mplxt',
    '*FRPLGSDZ': 'mplgstde',
    'FRPLGSDZ': 'mpltionde',
    '*FRPLGSD': 'mplgstd',
    'FRPLGSD': 'mpltiond',
    '*FRPLGSZ': 'mplgste',
    'FRPLGSZ': 'mpltione',
    '*FRPLGS': 'mplgst',
    'FRPLGS': 'mpltion',
    '*FRPLGDZ': 'mplgye',
    'FRPLGDZ': 'mplgde',
    '*FRPLGD': 'mplgy',
    'FRPLGD': 'mplgd',
    '*FRPLGZ': 'mplgz',
    'FRPLGZ': 'mplge',
    'FRPLG': 'mplg',
    '*FRPLTSDZ': 'mplthsde',
    'FRPLTSDZ': 'mpltsde',
    '*FRPLTSD': 'mplthsd',
    'FRPLTSD': 'mpltsd',
    '*FRPLTSZ': 'mplthse',
    'FRPLTSZ': 'mpltse',
    '*FRPLTS': 'mplths',
    'FRPLTS': 'mplts',
    '*FRPLTDZ': 'mplthde',
    'FRPLTDZ': 'mpltde',
    '*FRPLTD': 'mplthd',
    'FRPLTD': 'mpltd',
    '*FRPLTZ': 'mplthe',
    'FRPLTZ': 'mplte',
    '*FRPLT': 'mplth',
    'FRPLT': 'mplt',
    '*FRPLSDZ': 'mplstde',
    'FRPLSDZ': 'mplsde',
    '*FRPLSD': 'mplstd',
    'FRPLSD': 'mplsd',
    '*FRPLSZ': 'mplste',
    'FRPLSZ': 'mplse',
    '*FRPLS': 'mplst',
    'FRPLS': 'mpls',
    '*FRPLDZ': 'mple',
    'FRPLDZ': 'mplde',
    '*FRPLD': 'mply',
    'FRPLD': 'mpld',
    '*FRPLZ': 'mplz',
    'FRPLZ': 'mple',
    'FRPL': 'mpl',
    '*FRPGTSDZ': 'mpgthsde',
    'FRPGTSDZ': 'mpxtsde',
    '*FRPGTSD': 'mpgthsd',
    'FRPGTSD': 'mpxtsd',
    '*FRPGTSZ': 'mpgthse',
    'FRPGTSZ': 'mpxtse',
    '*FRPGTS': 'mpgths',
    'FRPGTS': 'mpxts',
    '*FRPGTDZ': 'mpgthde',
    'FRPGTDZ': 'mpxtde',
    '*FRPGTD': 'mpgthd',
    'FRPGTD': 'mpxtd',
    '*FRPGTZ': 'mpgthe',
    'FRPGTZ': 'mpxte',
    '*FRPGT': 'mpgth',
    'FRPGT': 'mpxt',
    '*FRPGSDZ': 'mpgstde',
    'FRPGSDZ': 'mptionde',
    '*FRPGSD': 'mpgstd',
    'FRPGSD': 'mptiond',
    '*FRPGSZ': 'mpgste',
    'FRPGSZ': 'mptione',
    '*FRPGS': 'mpgst',
    'FRPGS': 'mption',
    '*FRPGDZ': 'mpgye',
    'FRPGDZ': 'mpgde',
    '*FRPGD': 'mpgy',
    'FRPGD': 'mpgd',
    '*FRPGZ': 'mpgz',
    'FRPGZ': 'mpge',
    'FRPG': 'mpg',
    '*FRPTSDZ': 'mpthsde',
    'FRPTSDZ': 'mptsde',
    '*FRPTSD': 'mpthsd',
    'FRPTSD': 'mptsd',
    '*FRPTSZ': 'mpthse',
    'FRPTSZ': 'mptse',
    '*FRPTS': 'mpths',
    'FRPTS': 'mpts',
    '*FRPTDZ': 'mpthde',
    'FRPTDZ': 'mptde',
    '*FRPTD': 'mpthd',
    'FRPTD': 'mptd',
    '*FRPTZ': 'mpthe',
    'FRPTZ': 'mpte',
    '*FRPT': 'mpth',
    'FRPT': 'mpt',
    '*FRPSDZ': 'mpstde',
    'FRPSDZ': 'mpsde',
    '*FRPSD': 'mpstd',
    'FRPSD': 'mpsd',
    '*FRPSZ': 'mpste',
    'FRPSZ': 'mpse',
    '*FRPS': 'mpst',
    'FRPS': 'mps',
    '*FRPDZ': 'mpe',
    'FRPDZ': 'mpde',
    '*FRPD': 'mpy',
    'FRPD': 'mpd',
    '*FRPZ': 'frh',
    'FRPZ': 'mpe',
    'FRP': 'mp',
    '*FRBLGTSDZ': 'mblgthsde',
    'FRBLGTSDZ': 'mblxtsde',
    '*FRBLGTSD': 'mblgthsd',
    'FRBLGTSD': 'mblxtsd',
    '*FRBLGTSZ': 'mblgthse',
    'FRBLGTSZ': 'mblxtse',
    '*FRBLGTS': 'mblgths',
    'FRBLGTS': 'mblxts',
    '*FRBLGTDZ': 'mblgthde',
    'FRBLGTDZ': 'mblxtde',
    '*FRBLGTD': 'mblgthd',
    'FRBLGTD': 'mblxtd',
    '*FRBLGTZ': 'mblgthe',
    'FRBLGTZ': 'mblxte',
    '*FRBLGT': 'mblgth',
    'FRBLGT': 'mblxt',
    '*FRBLGSDZ': 'mblgstde',
    'FRBLGSDZ': 'mbltionde',
    '*FRBLGSD': 'mblgstd',
    'FRBLGSD': 'mbltiond',
    '*FRBLGSZ': 'mblgste',
    'FRBLGSZ': 'mbltione',
    '*FRBLGS': 'mblgst',
    'FRBLGS': 'mbltion',
    '*FRBLGDZ': 'mblgye',
    'FRBLGDZ': 'mblgde',
    '*FRBLGD': 'mblgy',
    'FRBLGD': 'mblgd',
    '*FRBLGZ': 'mblgz',
    'FRBLGZ': 'mblge',
    'FRBLG': 'mblg',
    '*FRBLTSDZ': 'mblthsde',
    'FRBLTSDZ': 'mbltsde',
    '*FRBLTSD': 'mblthsd',
    'FRBLTSD': 'mbltsd',
    '*FRBLTSZ': 'mblthse',
    'FRBLTSZ': 'mbltse',
    '*FRBLTS': 'mblths',
    'FRBLTS': 'mblts',
    '*FRBLTDZ': 'mblthde',
    'FRBLTDZ': 'mbltde',
    '*FRBLTD': 'mblthd',
    'FRBLTD': 'mbltd',
    '*FRBLTZ': 'mblthe',
    'FRBLTZ': 'mblte',
    '*FRBLT': 'mblth',
    'FRBLT': 'mblt',
    '*FRBLSDZ': 'mblstde',
    'FRBLSDZ': 'mblsde',
    '*FRBLSD': 'mblstd',
    'FRBLSD': 'mblsd',
    '*FRBLSZ': 'mblste',
    'FRBLSZ': 'mblse',
    '*FRBLS': 'mblst',
    'FRBLS': 'mbls',
    '*FRBLDZ': 'mble',
    'FRBLDZ': 'mblde',
    '*FRBLD': 'mbly',
    'FRBLD': 'mbld',
    '*FRBLZ': 'mblz',
    'FRBLZ': 'mble',
    'FRBL': 'mbl',
    '*FRBGTSDZ': 'frctsde',
    'FRBGTSDZ': 'mbxtsde',
    '*FRBGTSD': 'frctsd',
    'FRBGTSD': 'mbxtsd',
    '*FRBGTSZ': 'frctse',
    'FRBGTSZ': 'mbxtse',
    '*FRBGTS': 'frcts',
    'FRBGTS': 'mbxts',
    '*FRBGTDZ': 'frctde',
    'FRBGTDZ': 'mbxtde',
    '*FRBGTD': 'frctd',
    'FRBGTD': 'mbxtd',
    '*FRBGTZ': 'frcte',
    'FRBGTZ': 'mbxte',
    '*FRBGT': 'frct',
    'FRBGT': 'mbxt',
    '*FRBGSDZ': 'frcsde',
    'FRBGSDZ': 'f{,}de',
    '*FRBGSD': 'frcsd',
    'FRBGSD': 'f{,}d',
    '*FRBGSZ': 'frcse',
    'FRBGSZ': 'f{,}e',
    '*FRBGS': 'frcs',
    'FRBGS': 'f{,}',
    '*FRBGDZ': 'frcde',
    'FRBGDZ': 'frkde',
    '*FRBGD': 'frcd',
    'FRBGD': 'frkd',
    '*FRBGZ': 'frce',
    'FRBGZ': 'frke',
    '*FRBG': 'frc',
    'FRBG': 'frk',
    '*FRBTSDZ': 'mbthsde',
    'FRBTSDZ': 'mbtsde',
    '*FRBTSD': 'mbthsd',
    'FRBTSD': 'mbtsd',
    '*FRBTSZ': 'mbthse',
    'FRBTSZ': 'mbtse',
    '*FRBTS': 'mbths',
    'FRBTS': 'mbts',
    '*FRBTDZ': 'mbthde',
    'FRBTDZ': 'ftialde',
    '*FRBTD': 'mbthd',
    'FRBTD': 'ftiald',
    '*FRBTZ': 'mbthe',
    'FRBTZ': 'mbte',
    '*FRBT': 'mbth',
    'FRBT': 'ftial',
    '*FRBSDZ': 'mbstde',
    'FRBSDZ': 'mbsde',
    '*FRBSD': 'mbstd',
    'FRBSD': 'mbsd',
    '*FRBSZ': 'mbste',
    'FRBSZ': 'ftiouse',
    '*FRBS': 'mbst',
    'FRBS': 'ftious',
    '*FRBDZ': 'mbe',
    'FRBDZ': 'mbde',
    '*FRBD': 'mby',
    'FRBD': 'mbd',
    '*FRBZ': 'mbz',
    'FRBZ': 'mbe',
    'FRB': 'mb',
    '*FRLGTSDZ': 'mlgthsde',
    'FRLGTSDZ': 'mlxtsde',
    '*FRLGTSD': 'mlgthsd',
    'FRLGTSD': 'mlxtsd',
    '*FRLGTSZ': 'mlgthse',
    'FRLGTSZ': 'mlxtse',
    '*FRLGTS': 'mlgths',
    'FRLGTS': 'mlxts',
    '*FRLGTDZ': 'mlgthde',
    'FRLGTDZ': 'mlxtde',
    '*FRLGTD': 'mlgthd',
    'FRLGTD': 'mlxtd',
    '*FRLGTZ': 'mlgthe',
    'FRLGTZ': 'mlxte',
    '*FRLGT': 'mlgth',
    'FRLGT': 'mlxt',
    '*FRLGSDZ': 'mlgstde',
    'FRLGSDZ': 'mltionde',
    '*FRLGSD': 'mlgstd',
    'FRLGSD': 'mltiond',
    '*FRLGSZ': 'mlgste',
    'FRLGSZ': 'mltione',
    '*FRLGS': 'mlgst',
    'FRLGS': 'mltion',
    '*FRLGDZ': 'mlgye',
    'FRLGDZ': 'mlgde',
    '*FRLGD': 'mlgy',
    'FRLGD': 'mlgd',
    '*FRLGZ': 'mlgz',
    'FRLGZ': 'mlge',
    'FRLG': 'mlg',
    '*FRLTSDZ': 'mlthsde',
    'FRLTSDZ': 'mltsde',
    '*FRLTSD': 'mlthsd',
    'FRLTSD': 'mltsd',
    '*FRLTSZ': 'mlthse',
    'FRLTSZ': 'mltse',
    '*FRLTS': 'mlths',
    'FRLTS': 'mlts',
    '*FRLTDZ': 'mlthde',
    'FRLTDZ': 'mltde',
    '*FRLTD': 'mlthd',
    'FRLTD': 'mltd',
    '*FRLTZ': 'mlthe',
    'FRLTZ': 'mlte',
    '*FRLT': 'mlth',
    'FRLT': 'mlt',
    '*FRLSDZ': 'mlstde',
    'FRLSDZ': 'mlsde',
    '*FRLSD': 'mlstd',
    'FRLSD': 'mlsd',
    '*FRLSZ': 'mlste',
    'FRLSZ': 'mlse',
    '*FRLS': 'mlst',
    'FRLS': 'mls',
    '*FRLDZ': 'mle',
    'FRLDZ': 'mlde',
    '*FRLD': 'mly',
    'FRLD': 'mld',
    '*FRLZ': 'mlz',
    'FRLZ': 'mle',
    'FRL': 'ml',
    '*FRGTSDZ': 'frgthsde',
    'FRGTSDZ': 'frgtsde',
    '*FRGTSD': 'frgthsd',
    'FRGTSD': 'frgtsd',
    '*FRGTSZ': 'frgthse',
    'FRGTSZ': 'frgtse',
    '*FRGTS': 'frgths',
    'FRGTS': 'frgts',
    '*FRGTDZ': 'frgthde',
    'FRGTDZ': 'frgtde',
    '*FRGTD': 'frgthd',
    'FRGTD': 'frgtd',
    '*FRGTZ': 'frgthe',
    'FRGTZ': 'frgte',
    '*FRGT': 'frgth',
    'FRGT': 'frgt',
    '*FRGSDZ': 'frgstde',
    'FRGSDZ': 'frgsde',
    '*FRGSD': 'frgstd',
    'FRGSD': 'frgsd',
    '*FRGSZ': 'frgste',
    'FRGSZ': 'frgse',
    '*FRGS': 'frgst',
    'FRGS': 'frgs',
    '*FRGDZ': 'frgye',
    'FRGDZ': 'frgde',
    '*FRGD': 'frgy',
    'FRGD': 'frgd',
    '*FRGZ': 'frgz',
    'FRGZ': 'frge',
    'FRG': 'frg',
    '*FRTSDZ': 'frthsde',
    'FRTSDZ': 'frtsde',
    '*FRTSD': 'frthsd',
    'FRTSD': 'frtsd',
    '*FRTSZ': 'frthse',
    'FRTSZ': 'frtse',
    '*FRTS': 'frths',
    'FRTS': 'frts',
    '*FRTDZ': 'frthde',
    'FRTDZ': 'frtde',
    '*FRTD': 'frthd',
    'FRTD': 'frtd',
    '*FRTZ': 'frthe',
    'FRTZ': 'frte',
    '*FRT': 'frth',
    'FRT': 'frt',
    '*FRSDZ': 'frstde',
    'FRSDZ': 'frsde',
    '*FRSD': 'frstd',
    'FRSD': 'frsd',
    '*FRSZ': 'frste',
    'FRSZ': 'frse',
    '*FRS': 'frst',
    'FRS': 'frs',
    '*FRDZ': 'frye',
    'FRDZ': 'frde',
    '*FRD': 'fry',
    'FRD': 'frd',
    '*FRZ': 'frz',
    'FRZ': 'fre',
    'FR': 'fr',
    '*FPBLGTSDZ': 'fdgthsde',
    'FPBLGTSDZ': 'fdgtsde',
    '*FPBLGTSD': 'fdgthsd',
    'FPBLGTSD': 'fdgtsd',
    '*FPBLGTSZ': 'fdgthse',
    'FPBLGTSZ': 'fdgtse',
    '*FPBLGTS': 'fdgths',
    'FPBLGTS': 'fdgts',
    '*FPBLGTDZ': 'fdgthde',
    'FPBLGTDZ': 'fdgtde',
    '*FPBLGTD': 'fdgthd',
    'FPBLGTD': 'fdgtd',
    '*FPBLGTZ': 'fdgthe',
    'FPBLGTZ': 'fdgte',
    '*FPBLGT': 'fdgth',
    'FPBLGT': 'fdgt',
    '*FPBLGSDZ': 'fdgstde',
    'FPBLGSDZ': 'fjectionde',
    '*FPBLGSD': 'fdgstd',
    'FPBLGSD': 'fjectiond',
    '*FPBLGSZ': 'fdgste',
    'FPBLGSZ': 'fjectione',
    '*FPBLGS': 'fdgst',
    'FPBLGS': 'fjection',
    '*FPBLGDZ': 'fdgye',
    'FPBLGDZ': 'fdgde',
    '*FPBLGD': 'fdgy',
    'FPBLGD': 'fdgd',
    '*FPBLGZ': 'fdgz',
    'FPBLGZ': 'fdge',
    'FPBLG': 'fdg',
    '*FPBLTSDZ': 'fnlthsde',
    'FPBLTSDZ': 'fnltsde',
    '*FPBLTSD': 'fnlthsd',
    'FPBLTSD': 'fnltsd',
    '*FPBLTSZ': 'fnlthse',
    'FPBLTSZ': 'fnltse',
    '*FPBLTS': 'fnlths',
    'FPBLTS': 'fnlts',
    '*FPBLTDZ': 'fnlthde',
    'FPBLTDZ': 'fnltde',
    '*FPBLTD': 'fnlthd',
    'FPBLTD': 'fnltd',
    '*FPBLTZ': 'fnlthe',
    'FPBLTZ': 'fnlte',
    '*FPBLT': 'fnlth',
    'FPBLT': 'fnlt',
    '*FPBLSDZ': 'fnlstde',
    'FPBLSDZ': 'fnlsde',
    '*FPBLSD': 'fnlstd',
    'FPBLSD': 'fnlsd',
    '*FPBLSZ': 'fnlste',
    'FPBLSZ': 'fnlse',
    '*FPBLS': 'fnlst',
    'FPBLS': 'fnls',
    '*FPBLDZ': 'fnlye',
    'FPBLDZ': 'fnlde',
    '*FPBLD': 'fnly',
    'FPBLD': 'fnld',
    '*FPBLZ': 'fnlz',
    'FPBLZ': 'fnle',
    'FPBL': 'fnl',
    '*FPBGTSDZ': 'fnktsde',
    'FPBGTSDZ': 'chctsde',
    '*FPBGTSD': 'fnktsd',
    'FPBGTSD': 'chctsd',
    '*FPBGTSZ': 'fnktse',
    'FPBGTSZ': 'chctse',
    '*FPBGTS': 'fnkts',
    'FPBGTS': 'chcts',
    '*FPBGTDZ': 'fnktde',
    'FPBGTDZ': 'chctde',
    '*FPBGTD': 'fnktd',
    'FPBGTD': 'chctd',
    '*FPBGTZ': 'fnkte',
    'FPBGTZ': 'chcte',
    '*FPBGT': 'fnkt',
    'FPBGT': 'chct',
    '*FPBGSDZ': 'fnksde',
    'FPBGSDZ': 'fnctionde',
    '*FPBGSD': 'fnksd',
    'FPBGSD': 'fnctiond',
    '*FPBGSZ': 'fnkse',
    'FPBGSZ': 'fnctione',
    '*FPBGS': 'fnks',
    'FPBGS': 'fnction',
    '*FPBGDZ': 'fnkde',
    'FPBGDZ': 'fngde',
    '*FPBGD': 'fnkd',
    'FPBGD': 'fngd',
    '*FPBGZ': 'fnke',
    'FPBGZ': 'fnge',
    '*FPBG': 'fnk',
    'FPBG': 'fng',
    '*FPBTSDZ': 'fnthsde',
    'FPBTSDZ': 'fntsde',
    '*FPBTSD': 'fnthsd',
    'FPBTSD': 'fntsd',
    '*FPBTSZ': 'fnthse',
    'FPBTSZ': 'fntse',
    '*FPBTS': 'fnths',
    'FPBTS': 'fnts',
    '*FPBTDZ': 'fnthde',
    'FPBTDZ': 'fntde',
    '*FPBTD': 'fnthd',
    'FPBTD': 'fntd',
    '*FPBTZ': 'fnthe',
    'FPBTZ': 'fnte',
    '*FPBT': 'fnth',
    'FPBT': 'fnt',
    '*FPBSDZ': 'fnstde',
    'FPBSDZ': 'fnsde',
    '*FPBSD': 'fnstd',
    'FPBSD': 'fnsd',
    '*FPBSZ': 'fnste',
    'FPBSZ': 'fnse',
    '*FPBS': 'fnst',
    'FPBS': 'fns',
    '*FPBDZ': 'fnye',
    'FPBDZ': 'fnde',
    '*FPBD': 'fny',
    'FPBD': 'fnd',
    '*FPBZ': 'fnz',
    'FPBZ': 'fne',
    'FPB': 'fn',
    '*FPLGTSDZ': 'tualgthsde',
    'FPLGTSDZ': 'tualxtsde',
    '*FPLGTSD': 'tualgthsd',
    'FPLGTSD': 'tualxtsd',
    '*FPLGTSZ': 'tualgthse',
    'FPLGTSZ': 'tualxtse',
    '*FPLGTS': 'tualgths',
    'FPLGTS': 'tualxts',
    '*FPLGTDZ': 'tualgthde',
    'FPLGTDZ': 'tualxtde',
    '*FPLGTD': 'tualgthd',
    'FPLGTD': 'tualxtd',
    '*FPLGTZ': 'tualgthe',
    'FPLGTZ': 'tualxte',
    '*FPLGT': 'tualgth',
    'FPLGT': 'tualxt',
    '*FPLGSDZ': 'tualgstde',
    'FPLGSDZ': 'tualtionde',
    '*FPLGSD': 'tualgstd',
    'FPLGSD': 'tualtiond',
    '*FPLGSZ': 'tualgste',
    'FPLGSZ': 'tualtione',
    '*FPLGS': 'tualgst',
    'FPLGS': 'tualtion',
    '*FPLGDZ': 'tualgye',
    'FPLGDZ': 'tualgde',
    '*FPLGD': 'tualgy',
    'FPLGD': 'tualgd',
    '*FPLGZ': 'tualgz',
    'FPLGZ': 'tualge',
    'FPLG': 'tualg',
    '*FPLTSDZ': 'tualthsde',
    'FPLTSDZ': '{.}sde',
    '*FPLTSD': 'tualthsd',
    'FPLTSD': '{.}sd',
    '*FPLTSZ': 'tualthse',
    'FPLTSZ': 'tualtse',
    '*FPLTS': 'tualths',
    'FPLTS': 'tualts',
    '*FPLTDZ': 'tualthde',
    'FPLTDZ': '{.}de',
    '*FPLTD': 'tualthd',
    'FPLTD': '{.}d',
    '*FPLTZ': 'tualthe',
    'FPLTZ': 'tualte',
    '*FPLT': 'tualth',
    'FPLT': '{.}',
    '*FPLSDZ': 'tualstde',
    'FPLSDZ': 'tualsde',
    '*FPLSD': 'tualstd',
    'FPLSD': 'tualsd',
    '*FPLSZ': 'tualste',
    'FPLSZ': 'tualse',
    '*FPLS': 'tualst',
    'FPLS': 'tuals',
    '*FPLDZ': 'tuale',
    'FPLDZ': 'tualde',
    '*FPLD': 'tualy',
    'FPLD': 'tuald',
    '*FPLZ': 'tualz',
    'FPLZ': 'tuale',
    'FPL': 'tual',
    '*FPGTSDZ': 'chgthsde',
    'FPGTSDZ': 'chxtsde',
    '*FPGTSD': 'chgthsd',
    'FPGTSD': 'chxtsd',
    '*FPGTSZ': 'chgthse',
    'FPGTSZ': 'chxtse',
    '*FPGTS': 'chgths',
    'FPGTS': 'chxts',
    '*FPGTDZ': 'chgthde',
    'FPGTDZ': 'chxtde',
    '*FPGTD': 'chgthd',
    'FPGTD': 'chxtd',
    '*FPGTZ': 'chgthe',
    'FPGTZ': 'chxte',
    '*FPGT': 'chgth',
    'FPGT': 'chxt',
    '*FPGSDZ': 'chgstde',
    'FPGSDZ': 'chtionde',
    '*FPGSD': 'chgstd',
    'FPGSD': 'chtiond',
    '*FPGSZ': 'chgste',
    'FPGSZ': 'chtione',
    '*FPGS': 'chgst',
    'FPGS': 'chtion',
    '*FPGDZ': 'chgye',
    'FPGDZ': 'chgde',
    '*FPGD': 'chgy',
    'FPGD': 'chgd',
    '*FPGZ': 'chgz',
    'FPGZ': 'chge',
    'FPG': 'chg',
    '*FPTSDZ': 'chthsde',
    'FPTSDZ': 'chtsde',
    '*FPTSD': 'chthsd',
    'FPTSD': 'chtsd',
    '*FPTSZ': 'chthse',
    'FPTSZ': 'chtse',
    '*FPTS': 'chths',
    'FPTS': 'chts',
    '*FPTDZ': 'chthde',
    'FPTDZ': 'chtde',
    '*FPTD': 'chthd',
    'FPTD': 'chtd',
    '*FPTZ': 'chthe',
    'FPTZ': 'chte',
    '*FPT': 'chth',
    'FPT': 'cht',
    '*FPSDZ': 'chstde',
    'FPSDZ': 'chsde',
    '*FPSD': 'chstd',
    'FPSD': 'chsd',
    '*FPSZ': 'chste',
    'FPSZ': 'fhe',
    '*FPS': 'chst',
    'FPS': 'fh',
    '*FPDZ': 'che',
    'FPDZ': 'chde',
    '*FPD': 'chy',
    'FPD': 'chd',
    '*FPZ': 'fh',
    'FPZ': 'fh',
    'FP': 'ch',
    '*FBLGTSDZ': 'fcklethsde',
    'FBLGTSDZ': 'fckletsde',
    '*FBLGTSD': 'fcklethsd',
    'FBLGTSD': 'fckletsd',
    '*FBLGTSZ': 'fcklethse',
    'FBLGTSZ': 'fckletse',
    '*FBLGTS': 'fckleths',
    'FBLGTS': 'fcklets',
    '*FBLGTDZ': 'fcklethde',
    'FBLGTDZ': 'fckletde',
    '*FBLGTD': 'fcklethd',
    'FBLGTD': 'fckletd',
    '*FBLGTZ': 'fcklethe',
    'FBLGTZ': 'fcklete',
    '*FBLGT': 'fckleth',
    'FBLGT': 'fcklet',
    '*FBLGSDZ': 'fcklestde',
    'FBLGSDZ': 'fcklesde',
    '*FBLGSD': 'fcklestd',
    'FBLGSD': 'fcklesd',
    '*FBLGSZ': 'fckleste',
    'FBLGSZ': 'fcklese',
    '*FBLGS': 'fcklest',
    'FBLGS': 'fckles',
    '*FBLGDZ': 'fckleye',
    'FBLGDZ': 'fcklede',
    '*FBLGD': 'fckley',
    'FBLGD': 'fckled',
    '*FBLGZ': 'fcklez',
    'FBLGZ': 'fcklee',
    'FBLG': 'fckle',
    '*FBLTSDZ': 'vlthsde',
    'FBLTSDZ': 'vltsde',
    '*FBLTSD': 'vlthsd',
    'FBLTSD': 'vltsd',
    '*FBLTSZ': 'vlthse',
    'FBLTSZ': 'vltse',
    '*FBLTS': 'vlths',
    'FBLTS': 'vlts',
    '*FBLTDZ': 'vlthde',
    'FBLTDZ': 'vltde',
    '*FBLTD': 'vlthd',
    'FBLTD': 'vltd',
    '*FBLTZ': 'vlthe',
    'FBLTZ': 'vlte',
    '*FBLT': 'vlth',
    'FBLT': 'vlt',
    '*FBLSDZ': 'vlstde',
    'FBLSDZ': 'vlsde',
    '*FBLSD': 'vlstd',
    'FBLSD': 'vlsd',
    '*FBLSZ': 'vlste',
    'FBLSZ': 'vlse',
    '*FBLS': 'vlst',
    'FBLS': 'vls',
    '*FBLDZ': 'vlye',
    'FBLDZ': 'vlde',
    '*FBLD': 'vly',
    'FBLD': 'vld',
    '*FBLZ': 'vlz',
    'FBLZ': 'vle',
    'FBL': 'vl',
    '*FBGTSDZ': 'fctsde',
    'FBGTSDZ': 'fctsde',
    '*FBGTSD': 'fctsd',
    'FBGTSD': 'fctsd',
    '*FBGTSZ': 'fctse',
    'FBGTSZ': 'fctse',
    '*FBGTS': 'fcts',
    'FBGTS': 'fcts',
    '*FBGTDZ': 'fctde',
    'FBGTDZ': 'fctde',
    '*FBGTD': 'fctd',
    'FBGTD': 'fctd',
    '*FBGTZ': 'fcte',
    'FBGTZ': 'fcte',
    '*FBGT': 'fct',
    'FBGT': 'fct',
    '*FBGSDZ': 'fctionde',
    'FBGSDZ': 'fxde',
    '*FBGSD': 'fctiond',
    'FBGSD': 'fxd',
    '*FBGSZ': 'fctione',
    'FBGSZ': 'fxe',
    '*FBGS': 'fction',
    'FBGS': 'fx',
    '*FBGDZ': 'fcde',
    'FBGDZ': 'fkde',
    '*FBGD': 'fcd',
    'FBGD': 'fkd',
    '*FBGZ': 'fce',
    'FBGZ': 'fke',
    '*FBG': 'fc',
    'FBG': 'fk',
    '*FBTSDZ': 'vthsde',
    'FBTSDZ': 'vtsde',
    '*FBTSD': 'vthsd',
    'FBTSD': 'vtsd',
    '*FBTSZ': 'vthse',
    'FBTSZ': 'vtse',
    '*FBTS': 'vths',
    'FBTS': 'vts',
    '*FBTDZ': 'vthde',
    'FBTDZ': 'vtde',
    '*FBTD': 'vthd',
    'FBTD': 'vtd',
    '*FBTZ': 'vthe',
    'FBTZ': 'vte',
    '*FBT': 'vth',
    'FBT': 'vt',
    '*FBSDZ': 'vstde',
    'FBSDZ': 'vsde',
    '*FBSD': 'vstd',
    'FBSD': 'vsd',
    '*FBSZ': 'vste',
    'FBSZ': 'vse',
    '*FBS': 'vst',
    'FBS': 'vs',
    '*FBDZ': 've',
    'FBDZ': 'vde',
    '*FBD': 'vy',
    'FBD': 'vd',
    '*FBZ': 'vz',
    'FBZ': 've',
    'FB': 'v',
    '*FLGTSDZ': 'flgthsde',
    'FLGTSDZ': 'flgtsde',
    '*FLGTSD': 'flgthsd',
    'FLGTSD': 'flgtsd',
    '*FLGTSZ': 'flgthse',
    'FLGTSZ': 'flgtse',
    '*FLGTS': 'flgths',
    'FLGTS': 'flgts',
    '*FLGTDZ': 'flgthde',
    'FLGTDZ': 'flgtde',
    '*FLGTD': 'flgthd',
    'FLGTD': 'flgtd',
    '*FLGTZ': 'flgthe',
    'FLGTZ': 'flgte',
    '*FLGT': 'flgth',
    'FLGT': 'flgt',
    '*FLGSDZ': 'flgstde',
    'FLGSDZ': 'flgsde',
    '*FLGSD': 'flgstd',
    'FLGSD': 'flgsd',
    '*FLGSZ': 'flgste',
    'FLGSZ': 'flgse',
    '*FLGS': 'flgst',
    'FLGS': 'flgs',
    '*FLGDZ': 'flgye',
    'FLGDZ': 'flgde',
    '*FLGD': 'flgy',
    'FLGD': 'flgd',
    '*FLGZ': 'flgz',
    'FLGZ': 'flge',
    'FLG': 'flg',
    '*FLTSDZ': 'flthsde',
    'FLTSDZ': 'fltsde',
    '*FLTSD': 'flthsd',
    'FLTSD': 'fltsd',
    '*FLTSZ': 'flthse',
    'FLTSZ': 'fltse',
    '*FLTS': 'flths',
    'FLTS': 'flts',
    '*FLTDZ': 'flthde',
    'FLTDZ': 'fltde',
    '*FLTD': 'flthd',
    'FLTD': 'fltd',
    '*FLTZ': 'flthe',
    'FLTZ': 'flte',
    '*FLT': 'flth',
    'FLT': 'flt',
    '*FLSDZ': 'flstde',
    'FLSDZ': 'flsde',
    '*FLSD': 'flstd',
    'FLSD': 'flsd',
    '*FLSZ': 'flste',
    'FLSZ': 'flse',
    '*FLS': 'flst',
    'FLS': 'fls',
    '*FLDZ': 'flye',
    'FLDZ': 'flde',
    '*FLD': 'fly',
    'FLD': 'fld',
    '*FLZ': 'flz',
    'FLZ': 'fle',
    'FL': 'fl',
    '*FGTSDZ': 'fgthsde',
    'FGTSDZ': 'fxtsde',
    '*FGTSD': 'fgthsd',
    'FGTSD': 'fxtsd',
    '*FGTSZ': 'fgthse',
    'FGTSZ': 'fxtse',
    '*FGTS': 'fgths',
    'FGTS': 'fxts',
    '*FGTDZ': 'fgthde',
    'FGTDZ': 'fxtde',
    '*FGTD': 'fgthd',
    'FGTD': 'fxtd',
    '*FGTZ': 'fgthe',
    'FGTZ': 'fxte',
    '*FGT': 'fgth',
    'FGT': 'fxt',
    '*FGSDZ': 'fgstde',
    'FGSDZ': 'ftionde',
    '*FGSD': 'fgstd',
    'FGSD': 'ftiond',
    '*FGSZ': 'fgste',
    'FGSZ': 'ftione',
    '*FGS': 'fgst',
    'FGS': 'ftion',
    '*FGDZ': 'fgye',
    'FGDZ': 'fgde',
    '*FGD': 'fgy',
    'FGD': 'fgd',
    '*FGZ': 'fgz',
    'FGZ': 'fge',
    'FG': 'fg',
    '*FTSDZ': 'ftsde',
    'FTSDZ': 'ftsde',
    '*FTSD': 'ftsd',
    'FTSD': 'ftsd',
    '*FTSZ': 'ftse',
    'FTSZ': 'ftse',
    '*FTS': 'fts',
    'FTS': 'fts',
    '*FTDZ': 'ftde',
    'FTDZ': 'ftde',
    '*FTD': 'ftd',
    'FTD': 'ftd',
    '*FTZ': 'fte',
    'FTZ': 'fte',
    '*FT': 'ft',
    'FT': 'ft',
    '*FSDZ': 'fstde',
    'FSDZ': 'fsde',
    '*FSD': 'fstd',
    'FSD': 'fsd',
    '*FSZ': 'fste',
    'FSZ': 'fse',
    '*FS': 'fst',
    'FS': 'fs',
    '*FDZ': 'fe',
    'FDZ': 'fde',
    '*FD': 'fy',
    'FD': 'fd',
    '*FZ': 'fz',
    'FZ': 'fe',
    'F': 'f',
    '*RPBLGTSDZ': 'rgthsde',
    'RPBLGTSDZ': 'rgtsde',
    '*RPBLGTSD': 'rgthsd',
    'RPBLGTSD': 'rgtsd',
    '*RPBLGTSZ': 'rgthse',
    'RPBLGTSZ': 'rgtse',
    '*RPBLGTS': 'rgths',
    'RPBLGTS': 'rgts',
    '*RPBLGTDZ': 'rgthde',
    'RPBLGTDZ': 'rgtde',
    '*RPBLGTD': 'rgthd',
    'RPBLGTD': 'rgtd',
    '*RPBLGTZ': 'rgthe',
    'RPBLGTZ': 'rgte',
    '*RPBLGT': 'rgth',
    'RPBLGT': 'rgt',
    '*RPBLGSDZ': 'rgstde',
    'RPBLGSDZ': 'rgsde',
    '*RPBLGSD': 'rgstd',
    'RPBLGSD': 'rgsd',
    '*RPBLGSZ': 'rgste',
    'RPBLGSZ': 'rjectione',
    '*RPBLGS': 'rgst',
    'RPBLGS': 'rjection',
    '*RPBLGDZ': 'rge',
    'RPBLGDZ': 'rgde',
    '*RPBLGD': 'rgy',
    'RPBLGD': 'rgd',
    '*RPBLGZ': 'rgz',
    'RPBLGZ': 'rge',
    'RPBLG': 'rg',
    '*RPBLTSDZ': 'rnlthsde',
    'RPBLTSDZ': 'rnltsde',
    '*RPBLTSD': 'rnlthsd',
    'RPBLTSD': 'rnltsd',
    '*RPBLTSZ': 'rnlthse',
    'RPBLTSZ': 'rnltse',
    '*RPBLTS': 'rnlths',
    'RPBLTS': 'rnlts',
    '*RPBLTDZ': 'rnlthde',
    'RPBLTDZ': 'rnltde',
    '*RPBLTD': 'rnlthd',
    'RPBLTD': 'rnltd',
    '*RPBLTZ': 'rnlthe',
    'RPBLTZ': 'rnlte',
    '*RPBLT': 'rnlth',
    'RPBLT': 'rnlt',
    '*RPBLSDZ': 'rnlstde',
    'RPBLSDZ': 'rnlsde',
    '*RPBLSD': 'rnlstd',
    'RPBLSD': 'rnlsd',
    '*RPBLSZ': 'rnlste',
    'RPBLSZ': 'rnlse',
    '*RPBLS': 'rnlst',
    'RPBLS': 'rnls',
    '*RPBLDZ': 'rnlye',
    'RPBLDZ': 'rnlde',
    '*RPBLD': 'rnly',
    'RPBLD': 'rnld',
    '*RPBLZ': 'rnlz',
    'RPBLZ': 'rnle',
    'RPBL': 'rnl',
    '*RPBGTSDZ': 'rnktsde',
    'RPBGTSDZ': 'rngtsde',
    '*RPBGTSD': 'rnktsd',
    'RPBGTSD': 'rngtsd',
    '*RPBGTSZ': 'rnktse',
    'RPBGTSZ': 'rngtse',
    '*RPBGTS': 'rnkts',
    'RPBGTS': 'rngts',
    '*RPBGTDZ': 'rnktde',
    'RPBGTDZ': 'rngtde',
    '*RPBGTD': 'rnktd',
    'RPBGTD': 'rngtd',
    '*RPBGTZ': 'rnkte',
    'RPBGTZ': 'rngte',
    '*RPBGT': 'rnkt',
    'RPBGT': 'rngt',
    '*RPBGSDZ': 'rnksde',
    'RPBGSDZ': 'rnctionde',
    '*RPBGSD': 'rnksd',
    'RPBGSD': 'rnctiond',
    '*RPBGSZ': 'rnkse',
    'RPBGSZ': 'rnctione',
    '*RPBGS': 'rnks',
    'RPBGS': 'rnction',
    '*RPBGDZ': 'rnkde',
    'RPBGDZ': 'rngde',
    '*RPBGD': 'rnkd',
    'RPBGD': 'rngd',
    '*RPBGZ': 'rnke',
    'RPBGZ': 'rnge',
    '*RPBG': 'rnk',
    'RPBG': 'rng',
    '*RPBTSDZ': 'rnthsde',
    'RPBTSDZ': 'rntsde',
    '*RPBTSD': 'rnthsd',
    'RPBTSD': 'rntsd',
    '*RPBTSZ': 'rnthse',
    'RPBTSZ': 'rntse',
    '*RPBTS': 'rnths',
    'RPBTS': 'rnts',
    '*RPBTDZ': 'rnthde',
    'RPBTDZ': 'rntde',
    '*RPBTD': 'rnthd',
    'RPBTD': 'rntd',
    '*RPBTZ': 'rnthe',
    'RPBTZ': 'rnte',
    '*RPBT': 'rnth',
    'RPBT': 'rnt',
    '*RPBSDZ': 'rnstde',
    'RPBSDZ': 'rnsde',
    '*RPBSD': 'rnstd',
    'RPBSD': 'rnsd',
    '*RPBSZ': 'rnste',
    'RPBSZ': 'rnse',
    '*RPBS': 'rnst',
    'RPBS': 'rns',
    '*RPBDZ': 'rnye',
    'RPBDZ': 'rnde',
    '*RPBD': 'rny',
    'RPBD': 'rnd',
    '*RPBZ': 'rnz',
    'RPBZ': 'rne',
    'RPB': 'rn',
    '*RPLGTSDZ': 'rmgthsde',
    'RPLGTSDZ': 'rmgtsde',
    '*RPLGTSD': 'rmgthsd',
    'RPLGTSD': 'rmgtsd',
    '*RPLGTSZ': 'rmgthse',
    'RPLGTSZ': 'rmgtse',
    '*RPLGTS': 'rmgths',
    'RPLGTS': 'rmgts',
    '*RPLGTDZ': 'rmgthde',
    'RPLGTDZ': 'rmgtde',
    '*RPLGTD': 'rmgthd',
    'RPLGTD': 'rmgtd',
    '*RPLGTZ': 'rmgthe',
    'RPLGTZ': 'rmgte',
    '*RPLGT': 'rmgth',
    'RPLGT': 'rmgt',
    '*RPLGSDZ': 'rmgstde',
    'RPLGSDZ': 'rmgsde',
    '*RPLGSD': 'rmgstd',
    'RPLGSD': 'rmgsd',
    '*RPLGSZ': 'rmgste',
    'RPLGSZ': 'rmgse',
    '*RPLGS': 'rmgst',
    'RPLGS': 'rmgs',
    '*RPLGDZ': 'rmgye',
    'RPLGDZ': 'rmgde',
    '*RPLGD': 'rmgy',
    'RPLGD': 'rmgd',
    '*RPLGZ': 'rmgz',
    'RPLGZ': 'rmge',
    'RPLG': 'rmg',
    '*RPLTSDZ': 'rmthsde',
    'RPLTSDZ': 'rmtsde',
    '*RPLTSD': 'rmthsd',
    'RPLTSD': 'rmtsd',
    '*RPLTSZ': 'rmthse',
    'RPLTSZ': 'rmtse',
    '*RPLTS': 'rmths',
    'RPLTS': 'rmts',
    '*RPLTDZ': 'rmthde',
    'RPLTDZ': 'rmtde',
    '*RPLTD': 'rmthd',
    'RPLTD': 'rmtd',
    '*RPLTZ': 'rmthe',
    'RPLTZ': 'rmte',
    '*RPLT': 'rmth',
    'RPLT': 'rmt',
    '*RPLSDZ': 'rmstde',
    'RPLSDZ': 'rmsde',
    '*RPLSD': 'rmstd',
    'RPLSD': 'rmsd',
    '*RPLSZ': 'rmste',
    'RPLSZ': 'rmse',
    '*RPLS': 'rmst',
    'RPLS': 'rms',
    '*RPLDZ': 'rmye',
    'RPLDZ': 'rmde',
    '*RPLD': 'rmy',
    'RPLD': 'rmd',
    '*RPLZ': 'rmz',
    'RPLZ': 'rme',
    'RPL': 'rm',
    '*RPGTSDZ': 'rpgthsde',
    'RPGTSDZ': 'rpgtsde',
    '*RPGTSD': 'rpgthsd',
    'RPGTSD': 'rpgtsd',
    '*RPGTSZ': 'rpgthse',
    'RPGTSZ': 'rpgtse',
    '*RPGTS': 'rpgths',
    'RPGTS': 'rpgts',
    '*RPGTDZ': 'rpgthde',
    'RPGTDZ': 'rpgtde',
    '*RPGTD': 'rpgthd',
    'RPGTD': 'rpgtd',
    '*RPGTZ': 'rpgthe',
    'RPGTZ': 'rpgte',
    '*RPGT': 'rpgth',
    'RPGT': 'rpgt',
    '*RPGSDZ': 'rpgstde',
    'RPGSDZ': 'rpgsde',
    '*RPGSD': 'rpgstd',
    'RPGSD': 'rpgsd',
    '*RPGSZ': 'rpgste',
    'RPGSZ': 'rpgse',
    '*RPGS': 'rpgst',
    'RPGS': 'rpgs',
    '*RPGDZ': 'rpgye',
    'RPGDZ': 'rpgde',
    '*RPGD': 'rpgy',
    'RPGD': 'rpgd',
    '*RPGZ': 'rpgz',
    'RPGZ': 'rpge',
    'RPG': 'rpg',
    '*RPTSDZ': 'rpthsde',
    'RPTSDZ': 'rptsde',
    '*RPTSD': 'rpthsd',
    'RPTSD': 'rptsd',
    '*RPTSZ': 'rpthse',
    'RPTSZ': 'rptse',
    '*RPTS': 'rpths',
    'RPTS': 'rpts',
    '*RPTDZ': 'rpthde',
    'RPTDZ': 'rptde',
    '*RPTD': 'rpthd',
    'RPTD': 'rptd',
    '*RPTZ': 'rpthe',
    'RPTZ': 'rpte',
    '*RPT': 'rpth',
    'RPT': 'rpt',
    '*RPSDZ': 'rpstde',
    'RPSDZ': 'rhde',
    '*RPSD': 'rpstd',
    'RPSD': 'rhd',
    '*RPSZ': 'rpste',
    'RPSZ': 'rhe',
    '*RPS': 'rpst',
    'RPS': 'rh',
    '*RPDZ': 'rpye',
    'RPDZ': 'rpde',
    '*RPD': 'rpy',
    'RPD': 'rpd',
    '*RPZ': 'rh',
    'RPZ': 'rh',
    'RP': 'rp',
    '*RBLGTSDZ': 'rcklethsde',
    'RBLGTSDZ': 'rrowxtsde',
    '*RBLGTSD': 'rcklethsd',
    'RBLGTSD': 'rrowxtsd',
    '*RBLGTSZ': 'rcklethse',
    'RBLGTSZ': 'rrowxtse',
    '*RBLGTS': 'rckleths',
    'RBLGTS': 'rrowxts',
    '*RBLGTDZ': 'rcklethde',
    'RBLGTDZ': 'rrowxtde',
    '*RBLGTD': 'rcklethd',
    'RBLGTD': 'rrowxtd',
    '*RBLGTZ': 'rcklethe',
    'RBLGTZ': 'rrowxte',
    '*RBLGT': 'rckleth',
    'RBLGT': 'rrowxt',
    '*RBLGSDZ': 'rcklestde',
    'RBLGSDZ': 'rrowtionde',
    '*RBLGSD': 'rcklestd',
    'RBLGSD': 'rrowtiond',
    '*RBLGSZ': 'rckleste',
    'RBLGSZ': 'rrowtione',
    '*RBLGS': 'rcklest',
    'RBLGS': 'rrowtion',
    '*RBLGDZ': 'rckleye',
    'RBLGDZ': 'rcklede',
    '*RBLGD': 'rckley',
    'RBLGD': 'rckled',
    '*RBLGZ': 'rcklez',
    'RBLGZ': 'rcklee',
    'RBLG': 'rckle',
    '*RBLTSDZ': 'rrowthsde',
    'RBLTSDZ': 'rrowtsde',
    '*RBLTSD': 'rrowthsd',
    'RBLTSD': 'rrowtsd',
    '*RBLTSZ': 'rrowthse',
    'RBLTSZ': 'rrowtse',
    '*RBLTS': 'rrowths',
    'RBLTS': 'rrowts',
    '*RBLTDZ': 'rrowthde',
    'RBLTDZ': 'rrowtde',
    '*RBLTD': 'rrowthd',
    'RBLTD': 'rrowtd',
    '*RBLTZ': 'rrowthe',
    'RBLTZ': 'rrowte',
    '*RBLT': 'rrowth',
    'RBLT': 'rrowt',
    '*RBLSDZ': 'rrowstde',
    'RBLSDZ': 'rrowsde',
    '*RBLSD': 'rrowstd',
    'RBLSD': 'rrowsd',
    '*RBLSZ': 'rrowste',
    'RBLSZ': 'rrowse',
    '*RBLS': 'rrowst',
    'RBLS': 'rrows',
    '*RBLDZ': 'rrowe',
    'RBLDZ': 'rrowde',
    '*RBLD': 'rrowy',
    'RBLD': 'rrowd',
    '*RBLZ': 'rrowz',
    'RBLZ': 'rrowe',
    'RBL': 'rrow',
    '*RBGTSDZ': 'rctsde',
    'RBGTSDZ': 'rctsde',
    '*RBGTSD': 'rctsd',
    'RBGTSD': 'rctsd',
    '*RBGTSZ': 'rctse',
    'RBGTSZ': 'rctse',
    '*RBGTS': 'rcts',
    'RBGTS': 'rcts',
    '*RBGTDZ': 'rctde',
    'RBGTDZ': 'rctde',
    '*RBGTD': 'rctd',
    'RBGTD': 'rctd',
    '*RBGTZ': 'rcte',
    'RBGTZ': 'rkte',
    '*RBGT': 'rct',
    'RBGT': 'rct',
    '*RBGSDZ': 'rctionde',
    'RBGSDZ': 'rksde',
    '*RBGSD': 'rctiond',
    'RBGSD': 'rksd',
    '*RBGSZ': 'rctione',
    'RBGSZ': '{,}e',
    '*RBGS': 'rction',
    'RBGS': '{,}',
    '*RBGDZ': 'rcde',
    'RBGDZ': 'rkde',
    '*RBGD': 'rcd',
    'RBGD': 'rkd',
    '*RBGZ': 'rce',
    'RBGZ': 'rke',
    '*RBG': 'rc',
    'RBG': 'rk',
    '*RBTSDZ': 'shthsde',
    'RBTSDZ': 'tialsde',
    '*RBTSD': 'shthsd',
    'RBTSD': 'tialsd',
    '*RBTSZ': 'shthse',
    'RBTSZ': 'shtse',
    '*RBTS': 'shths',
    'RBTS': 'shts',
    '*RBTDZ': 'shthde',
    'RBTDZ': 'tialde',
    '*RBTD': 'shthd',
    'RBTD': 'tiald',
    '*RBTZ': 'shthe',
    'RBTZ': 'shte',
    '*RBT': 'shth',
    'RBT': 'tial',
    '*RBSDZ': 'shstde',
    'RBSDZ': 'shsde',
    '*RBSD': 'shstd',
    'RBSD': 'shsd',
    '*RBSZ': 'shste',
    'RBSZ': 'tiouse',
    '*RBS': 'shst',
    'RBS': 'tious',
    '*RBDZ': 'she',
    'RBDZ': 'shde',
    '*RBD': 'shy',
    'RBD': 'shd',
    '*RBZ': 'shz',
    'RBZ': 'she',
    'RB': 'sh',
    '*RLGTSDZ': 'rlgthsde',
    'RLGTSDZ': 'rlgtsde',
    '*RLGTSD': 'rlgthsd',
    'RLGTSD': 'rlgtsd',
    '*RLGTSZ': 'rlgthse',
    'RLGTSZ': 'rlgtse',
    '*RLGTS': 'rlgths',
    'RLGTS': 'rlgts',
    '*RLGTDZ': 'rlgthde',
    'RLGTDZ': 'rlgtde',
    '*RLGTD': 'rlgthd',
    'RLGTD': 'rlgtd',
    '*RLGTZ': 'rlgthe',
    'RLGTZ': 'rlgte',
    '*RLGT': 'rlgth',
    'RLGT': 'rlgt',
    '*RLGSDZ': 'rlgstde',
    'RLGSDZ': 'rlgsde',
    '*RLGSD': 'rlgstd',
    'RLGSD': 'rlgsd',
    '*RLGSZ': 'rlgste',
    'RLGSZ': 'rlgse',
    '*RLGS': 'rlgst',
    'RLGS': 'rlgs',
    '*RLGDZ': 'rlgye',
    'RLGDZ': 'rlgde',
    '*RLGD': 'rlgy',
    'RLGD': 'rlgd',
    '*RLGZ': 'rlgz',
    'RLGZ': 'rlge',
    'RLG': 'rlg',
    '*RLTSDZ': 'rlthsde',
    'RLTSDZ': 'rltsde',
    '*RLTSD': 'rlthsd',
    'RLTSD': 'rltsd',
    '*RLTSZ': 'rlthse',
    'RLTSZ': 'rltse',
    '*RLTS': 'rlths',
    'RLTS': 'rlts',
    '*RLTDZ': 'rlthde',
    'RLTDZ': 'rltde',
    '*RLTD': 'rlthd',
    'RLTD': 'rltd',
    '*RLTZ': 'rlthe',
    'RLTZ': 'rlte',
    '*RLT': 'rlth',
    'RLT': 'rlt',
    '*RLSDZ': 'rlstde',
    'RLSDZ': 'rlsde',
    '*RLSD': 'rlstd',
    'RLSD': 'rlsd',
    '*RLSZ': 'rlste',
    'RLSZ': 'rlse',
    '*RLS': 'rlst',
    'RLS': 'rls',
    '*RLDZ': 'rlye',
    'RLDZ': 'rlde',
    '*RLD': 'rly',
    'RLD': 'rld',
    '*RLZ': 'rlz',
    'RLZ': 'rle',
    'RL': 'rl',
    '*RGTSDZ': 'rgthsde',
    'RGTSDZ': 'rxtsde',
    '*RGTSD': 'rgthsd',
    'RGTSD': 'rxtsd',
    '*RGTSZ': 'rgthse',
    'RGTSZ': 'rxtse',
    '*RGTS': 'rgths',
    'RGTS': 'rxts',
    '*RGTDZ': 'rgthde',
    'RGTDZ': 'rxtde',
    '*RGTD': 'rgthd',
    'RGTD': 'rxtd',
    '*RGTZ': 'rgthe',
    'RGTZ': 'rxte',
    '*RGT': 'rgth',
    'RGT': 'rxt',
    '*RGSDZ': 'rgstde',
    'RGSDZ': 'rtionde',
    '*RGSD': 'rgstd',
    'RGSD': 'rtiond',
    '*RGSZ': 'rgste',
    'RGSZ': 'rtione',
    '*RGS': 'rgst',
    'RGS': 'rtion',
    '*RGDZ': 'rgye',
    'RGDZ': 'rgde',
    '*RGD': 'rgy',
    'RGD': 'rgd',
    '*RGZ': 'rgz',
    'RGZ': 'rge',
    'RG': 'rg',
    '*RTSDZ': 'rthsde',
    'RTSDZ': 'rtsde',
    '*RTSD': 'rthsd',
    'RTSD': 'rtsd',
    '*RTSZ': 'rthse',
    'RTSZ': 'rtse',
    '*RTS': 'rths',
    'RTS': 'rts',
    '*RTDZ': 'rthde',
    'RTDZ': 'rtde',
    '*RTD': 'rthd',
    'RTD': 'rtd',
    '*RTZ': 'rthe',
    'RTZ': 'rte',
    '*RT': 'rth',
    'RT': 'rt',
    '*RSDZ': 'rstde',
    'RSDZ': 'rsde',
    '*RSD': 'rstd',
    'RSD': 'rsd',
    '*RSZ': 'rste',
    'RSZ': 'rse',
    '*RS': 'rst',
    'RS': 'rs',
    '*RDZ': 're',
    'RDZ': 'rde',
    '*RD': 'ry',
    'RD': 'rd',
    '*RZ': 'rz',
    'RZ': 're',
    'R': 'r',
    '*PBLGTSDZ': 'dgthsde',
    'PBLGTSDZ': 'dgtsde',
    '*PBLGTSD': 'dgthsd',
    'PBLGTSD': 'dgtsd',
    '*PBLGTSZ': 'dgthse',
    'PBLGTSZ': 'dgtse',
    '*PBLGTS': 'dgths',
    'PBLGTS': 'dgts',
    '*PBLGTDZ': 'dgthde',
    'PBLGTDZ': 'dgtde',
    '*PBLGTD': 'dgthd',
    'PBLGTD': 'dgtd',
    '*PBLGTZ': 'dgthe',
    'PBLGTZ': 'dgte',
    '*PBLGT': 'dgth',
    'PBLGT': 'dgt',
    '*PBLGSDZ': 'dgstde',
    'PBLGSDZ': 'dgsde',
    '*PBLGSD': 'dgstd',
    'PBLGSD': 'dgsd',
    '*PBLGSZ': 'dgste',
    'PBLGSZ': 'jectione',
    '*PBLGS': 'dgst',
    'PBLGS': 'jection',
    '*PBLGDZ': 'dge',
    'PBLGDZ': 'dgde',
    '*PBLGD': 'dgy',
    'PBLGD': 'dgd',
    '*PBLGZ': 'dgz',
    'PBLGZ': 'dge',
    'PBLG': 'dg',
    '*PBLTSDZ': 'nlthsde',
    'PBLTSDZ': 'nltsde',
    '*PBLTSD': 'nlthsd',
    'PBLTSD': 'nltsd',
    '*PBLTSZ': 'nlthse',
    'PBLTSZ': 'nltse',
    '*PBLTS': 'nlths',
    'PBLTS': 'nlts',
    '*PBLTDZ': 'nlthde',
    'PBLTDZ': 'nltde',
    '*PBLTD': 'nlthd',
    'PBLTD': 'nltd',
    '*PBLTZ': 'nlthe',
    'PBLTZ': 'nlte',
    '*PBLT': 'nlth',
    'PBLT': 'nlt',
    '*PBLSDZ': 'nlstde',
    'PBLSDZ': 'nlsde',
    '*PBLSD': 'nlstd',
    'PBLSD': 'nlsd',
    '*PBLSZ': 'nlste',
    'PBLSZ': 'nlse',
    '*PBLS': 'nlst',
    'PBLS': 'nls',
    '*PBLDZ': 'nlye',
    'PBLDZ': 'nlde',
    '*PBLD': 'nly',
    'PBLD': 'nld',
    '*PBLZ': 'nlz',
    'PBLZ': 'nle',
    'PBL': 'nl',
    '*PBGTSDZ': 'nktsde',
    'PBGTSDZ': 'pctsde',
    '*PBGTSD': 'nktsd',
    'PBGTSD': 'pctsd',
    '*PBGTSZ': 'nktse',
    'PBGTSZ': 'pctse',
    '*PBGTS': 'nkts',
    'PBGTS': 'pcts',
    '*PBGTDZ': 'nktde',
    'PBGTDZ': 'pctde',
    '*PBGTD': 'nktd',
    'PBGTD': 'pctd',
    '*PBGTZ': 'nkte',
    'PBGTZ': 'ngte',
    '*PBGT': 'nkt',
    'PBGT': 'pct',
    '*PBGSDZ': 'nksde',
    'PBGSDZ': 'ngsde',
    '*PBGSD': 'nksd',
    'PBGSD': 'ngsd',
    '*PBGSZ': 'nkse',
    'PBGSZ': 'nctione',
    '*PBGS': 'pction',
    'PBGS': 'nction',
    '*PBGDZ': 'nkde',
    'PBGDZ': 'ngde',
    '*PBGD': 'nkd',
    'PBGD': 'ngd',
    '*PBGZ': 'nke',
    'PBGZ': 'nge',
    '*PBG': 'nk',
    'PBG': 'ng',
    '*PBTSDZ': 'nthsde',
    'PBTSDZ': 'ntsde',
    '*PBTSD': 'nthsd',
    'PBTSD': 'ntsd',
    '*PBTSZ': 'nthse',
    'PBTSZ': 'ntse',
    '*PBTS': 'nths',
    'PBTS': 'nts',
    '*PBTDZ': 'nthde',
    'PBTDZ': 'ntde',
    '*PBTD': 'nthd',
    'PBTD': 'ntd',
    '*PBTZ': 'nthe',
    'PBTZ': 'nte',
    '*PBT': 'nth',
    'PBT': 'nt',
    '*PBSDZ': 'nstde',
    'PBSDZ': 'nsde',
    '*PBSD': 'nstd',
    'PBSD': 'nsd',
    '*PBSZ': 'nste',
    'PBSZ': 'nse',
    '*PBS': 'nst',
    'PBS': 'ns',
    '*PBDZ': 'ne',
    'PBDZ': 'nde',
    '*PBD': 'ny',
    'PBD': 'nd',
    '*PBZ': 'nz',
    'PBZ': 'ne',
    'PB': 'n',
    '*PLGTSDZ': 'mgthsde',
    'PLGTSDZ': 'mxtsde',
    '*PLGTSD': 'mgthsd',
    'PLGTSD': 'mxtsd',
    '*PLGTSZ': 'mgthse',
    'PLGTSZ': 'mxtse',
    '*PLGTS': 'mgths',
    'PLGTS': 'mxts',
    '*PLGTDZ': 'mgthde',
    'PLGTDZ': 'mxtde',
    '*PLGTD': 'mgthd',
    'PLGTD': 'mxtd',
    '*PLGTZ': 'mgthe',
    'PLGTZ': 'mxte',
    '*PLGT': 'mgth',
    'PLGT': 'mxt',
    '*PLGSDZ': 'mgstde',
    'PLGSDZ': 'mtionde',
    '*PLGSD': 'mgstd',
    'PLGSD': 'mtiond',
    '*PLGSZ': 'mgste',
    'PLGSZ': 'mtione',
    '*PLGS': 'mgst',
    'PLGS': 'mtion',
    '*PLGDZ': 'mgye',
    'PLGDZ': 'mgde',
    '*PLGD': 'mgy',
    'PLGD': 'mgd',
    '*PLGZ': 'mgz',
    'PLGZ': 'mge',
    'PLG': 'mg',
    '*PLTSDZ': 'mthsde',
    'PLTSDZ': 'mtsde',
    '*PLTSD': 'mthsd',
    'PLTSD': 'mtsd',
    '*PLTSZ': 'mthse',
    'PLTSZ': 'mtse',
    '*PLTS': 'mths',
    'PLTS': 'mts',
    '*PLTDZ': 'mthde',
    'PLTDZ': 'mtde',
    '*PLTD': 'mthd',
    'PLTD': 'mtd',
    '*PLTZ': 'mthe',
    'PLTZ': 'mte',
    '*PLT': 'mth',
    'PLT': 'mt',
    '*PLSDZ': 'mstde',
    'PLSDZ': 'msde',
    '*PLSD': 'mstd',
    'PLSD': 'msd',
    '*PLSZ': 'mste',
    'PLSZ': 'mse',
    '*PLS': 'mst',
    'PLS': 'ms',
    '*PLDZ': 'me',
    'PLDZ': 'mde',
    '*PLD': 'my',
    'PLD': 'md',
    '*PLZ': 'mz',
    'PLZ': 'me',
    'PL': 'm',
    '*PGTSDZ': 'pgthsde',
    'PGTSDZ': 'pxtsde',
    '*PGTSD': 'pgthsd',
    'PGTSD': 'pxtsd',
    '*PGTSZ': 'pgthse',
    'PGTSZ': 'pxtse',
    '*PGTS': 'pgths',
    'PGTS': 'pxts',
    '*PGTDZ': 'pgthde',
    'PGTDZ': 'pxtde',
    '*PGTD': 'pgthd',
    'PGTD': 'pxtd',
    '*PGTZ': 'pgthe',
    'PGTZ': 'pxte',
    '*PGT': 'pgth',
    'PGT': 'pxt',
    '*PGSDZ': 'pgstde',
    'PGSDZ': 'ptionde',
    '*PGSD': 'pgstd',
    'PGSD': 'ptiond',
    '*PGSZ': 'pgste',
    'PGSZ': 'ptione',
    '*PGS': 'pgst',
    'PGS': 'ption',
    '*PGDZ': 'pgye',
    'PGDZ': 'pgde',
    '*PGD': 'pgy',
    'PGD': 'pgd',
    '*PGZ': 'pgz',
    'PGZ': 'pge',
    'PG': 'pg',
    '*PTSDZ': 'pthsde',
    'PTSDZ': 'ptsde',
    '*PTSD': 'pthsd',
    'PTSD': 'ptsd',
    '*PTSZ': 'pthse',
    'PTSZ': 'ptse',
    '*PTS': 'pths',
    'PTS': 'pts',
    '*PTDZ': 'pthde',
    'PTDZ': 'ptde',
    '*PTD': 'pthd',
    'PTD': 'ptd',
    '*PTZ': 'pthe',
    'PTZ': 'pte',
    '*PT': 'pth',
    'PT': 'pt',
    '*PSDZ': 'pstde',
    'PSDZ': 'psde',
    '*PSD': 'pstd',
    'PSD': 'psd',
    '*PSZ': 'pste',
    'PSZ': 'he',
    '*PS': 'pst',
    'PS': 'h',
    '*PDZ': 'pe',
    'PDZ': 'pde',
    '*PD': 'py',
    'PD': 'pd',
    '*PZ': 'h',
    'PZ': 'h',
    'P': 'p',
    '*BLGTSDZ': 'cklethsde',
    'BLGTSDZ': 'ckletsde',
    '*BLGTSD': 'cklethsd',
    'BLGTSD': 'ckletsd',
    '*BLGTSZ': 'cklethse',
    'BLGTSZ': 'ckletse',
    '*BLGTS': 'ckleths',
    'BLGTS': 'cklets',
    '*BLGTDZ': 'cklethde',
    'BLGTDZ': 'ckletde',
    '*BLGTD': 'cklethd',
    'BLGTD': 'ckletd',
    '*BLGTZ': 'cklethe',
    'BLGTZ': 'cklete',
    '*BLGT': 'ckleth',
    'BLGT': 'cklet',
    '*BLGSDZ': 'cklestde',
    'BLGSDZ': 'cklesde',
    '*BLGSD': 'cklestd',
    'BLGSD': 'cklesd',
    '*BLGSZ': 'ckleste',
    'BLGSZ': 'cklese',
    '*BLGS': 'cklest',
    'BLGS': 'ckles',
    '*BLGDZ': 'cklee',
    'BLGDZ': 'cklede',
    '*BLGD': 'ckley',
    'BLGD': 'ckled',
    '*BLGZ': 'cklez',
    'BLGZ': 'cklee',
    'BLG': 'ckle',
    '*BLTSDZ': 'blthsde',
    'BLTSDZ': 'bltsde',
    '*BLTSD': 'blthsd',
    'BLTSD': 'bltsd',
    '*BLTSZ': 'blthse',
    'BLTSZ': 'bltse',
    '*BLTS': 'blths',
    'BLTS': 'blts',
    '*BLTDZ': 'blthde',
    'BLTDZ': 'bltde',
    '*BLTD': 'blthd',
    'BLTD': 'bltd',
    '*BLTZ': 'blthe',
    'BLTZ': 'blte',
    '*BLT': 'blth',
    'BLT': 'blt',
    '*BLSDZ': 'blstde',
    'BLSDZ': 'blsde',
    '*BLSD': 'blstd',
    'BLSD': 'blsd',
    '*BLSZ': 'blste',
    'BLSZ': 'blse',
    '*BLS': 'blst',
    'BLS': 'bls',
    '*BLDZ': 'blye',
    'BLDZ': 'blde',
    '*BLD': 'bly',
    'BLD': 'bld',
    '*BLZ': 'blz',
    'BLZ': 'ble',
    'BL': 'bl',
    '*BGTSDZ': 'ctsde',
    'BGTSDZ': 'ctsde',
    '*BGTSD': 'ctsd',
    'BGTSD': 'ctsd',
    '*BGTSZ': 'ctse',
    'BGTSZ': 'ctse',
    '*BGTS': 'kths',
    'BGTS': 'cts',
    '*BGTDZ': 'ctde',
    'BGTDZ': 'ctde',
    '*BGTD': 'ctd',
    'BGTD': 'ctd',
    '*BGTZ': 'cte',
    'BGTZ': 'kte',
    '*BGT': 'kth',
    'BGT': 'ct',
    '*BGSDZ': 'csde',
    'BGSDZ': 'ksde',
    '*BGSD': 'csd',
    'BGSD': 'ksd',
    '*BGSZ': 'ctione',
    'BGSZ': 'xe',
    '*BGS': 'ction',
    'BGS': 'x',
    '*BGDZ': 'cde',
    'BGDZ': 'kde',
    '*BGD': 'cd',
    'BGD': 'kd',
    '*BGZ': 'ce',
    'BGZ': 'ke',
    '*BG': 'c',
    'BG': 'k',
    '*BTSDZ': 'bthsde',
    'BTSDZ': 'btsde',
    '*BTSD': 'bthsd',
    'BTSD': 'btsd',
    '*BTSZ': 'bthse',
    'BTSZ': 'btse',
    '*BTS': 'bths',
    'BTS': 'bts',
    '*BTDZ': 'bthde',
    'BTDZ': 'btde',
    '*BTD': 'bthd',
    'BTD': 'btd',
    '*BTZ': 'bthe',
    'BTZ': 'bte',
    '*BT': 'bth',
    'BT': 'bt',
    '*BSDZ': 'bstde',
    'BSDZ': 'bsde',
    '*BSD': 'bstd',
    'BSD': 'bsd',
    '*BSZ': 'bste',
    'BSZ': 'bse',
    '*BS': 'bst',
    'BS': 'bs',
    '*BDZ': 'be',
    'BDZ': 'bde',
    '*BD': 'by',
    'BD': 'bd',
    '*BZ': 'bz',
    'BZ': 'be',
    'B': 'b',
    '*LGTSDZ': 'lgthsde',
    'LGTSDZ': 'lxtsde',
    '*LGTSD': 'lgthsd',
    'LGTSD': 'lxtsd',
    '*LGTSZ': 'lgthse',
    'LGTSZ': 'lxtse',
    '*LGTS': 'lgths',
    'LGTS': 'lxts',
    '*LGTDZ': 'lgthde',
    'LGTDZ': 'lxtde',
    '*LGTD': 'lgthd',
    'LGTD': 'lxtd',
    '*LGTZ': 'lgthe',
    'LGTZ': 'lxte',
    '*LGT': 'lgth',
    'LGT': 'lxt',
    '*LGSDZ': 'lgstde',
    'LGSDZ': 'ltionde',
    '*LGSD': 'lgstd',
    'LGSD': 'ltiond',
    '*LGSZ': 'lgste',
    'LGSZ': 'ltione',
    '*LGS': 'lgst',
    'LGS': 'ltion',
    '*LGDZ': 'lgye',
    'LGDZ': 'lgde',
    '*LGD': 'lgy',
    'LGD': 'lgd',
    '*LGZ': 'lgz',
    'LGZ': 'lge',
    'LG': 'lg',
    '*LTSDZ': 'lthsde',
    'LTSDZ': 'ltsde',
    '*LTSD': 'lthsd',
    'LTSD': 'ltsd',
    '*LTSZ': 'lthse',
    'LTSZ': 'ltse',
    '*LTS': 'lths',
    'LTS': 'lts',
    '*LTDZ': 'lthde',
    'LTDZ': 'ltde',
    '*LTD': 'lthd',
    'LTD': 'ltd',
    '*LTZ': 'lthe',
    'LTZ': 'lte',
    '*LT': 'lth',
    'LT': 'lt',
    '*LSDZ': 'lstde',
    'LSDZ': 'lsde',
    '*LSD': 'lstd',
    'LSD': 'lsd',
    '*LSZ': 'lste',
    'LSZ': 'lse',
    '*LS': 'lst',
    'LS': 'ls',
    '*LDZ': 'le',
    'LDZ': 'lde',
    '*LD': 'ly',
    'LD': 'ld',
    '*LZ': 'lz',
    'LZ': 'le',
    'L': 'l',
    '*GTSDZ': 'gthsde',
    'GTSDZ': 'xtsde',
    '*GTSD': 'gthsd',
    'GTSD': 'xtsd',
    '*GTSZ': 'gthse',
    'GTSZ': 'gtse',
    '*GTS': 'gths',
    'GTS': 'gts',
    '*GTDZ': 'gthde',
    'GTDZ': 'xtde',
    '*GTD': 'gthd',
    'GTD': 'xtd',
    '*GTZ': 'gthe',
    'GTZ': 'gte',
    '*GT': 'gth',
    'GT': 'xt',
    '*GSDZ': 'gstde',
    'GSDZ': 'gsde',
    '*GSD': 'gstd',
    'GSD': 'gsd',
    '*GSZ': 'gste',
    'GSZ': "{^}'{^}",
    '*GS': 'gst',
    'GS': 'tion',
    '*GDZ': 'ge',
    'GDZ': 'gde',
    '*GD': 'gy',
    'GD': 'gd',
    '*GZ': 'gz',
    'GZ': 'ge',
    'G': 'g',
    '*TSDZ': 'thsde',
    'TSDZ': 'tsde',
    '*TSD': 'thsd',
    'TSD': 'tsd',
    '*TSZ': 'thse',
    'TSZ': 'tse',
    '*TS': 'tst',
    'TS': 'ts',
    '*TDZ': 'thde',
    'TDZ': 'tde',
    '*TD': 'thd',
    'TD': 'td',
    '*TZ': 'tz',
    'TZ': 'te',
    '*T': 'th',
    'T': 't',
    '*SDZ': 'stde',
    'SDZ': 'sde',
    '*SD': 'sy',
    'SD': 'sd',
    '*SZ': 'ste',
    'SZ': 'se',
    '*S': 'st',
    'S': 's',
    '*DZ': 'e',
    'DZ': 'de',
    '*D': 'y',
    'D': 'd',
    '*Z': 'z',
    'Z': 'e',
}




import re

LONGEST_KEY = 20

numbers_to_letters = {
    "1": "S",
    "2": "T",
    "3": "P",
    "4": "H",
    "5": "A",
    "6": "F",
    "7": "P",
    "8": "L",
    "9": "T",
    "0": "O"
    }

def aericks_denumberizer(old_outline):

    old_strokes = old_outline.split("/")
    new_strokes = []

    for stroke in old_strokes:

        new_strokes.append(stroke)

        for match in numbers_to_letters.keys():

            if match in stroke:

                if new_strokes[-1][0] != "#":
                    new_strokes[-1] = "#" + new_strokes[-1]

                new_strokes[-1] = new_strokes[-1].replace(match, numbers_to_letters[match])

        if new_strokes == []:
            new_strokes = old_strokes

    return "/".join(new_strokes)


def lookup(strokes):

    if (not strokes[0] == starterstroke) and (not strokes[0] == startercap):
        raise KeyError
    
    output_string=""

    for stroke in strokes:
        if stroke=="+":
            raise KeyError

        #punctuation
        if stroke=="TK-LS":
            raise KeyError
        if stroke=="S-P":
            raise KeyError
        if stroke=="KPA":
            raise KeyError
        if stroke=="KPA*":
            raise KeyError
        if stroke=="R-R":
            raise KeyError
        if stroke=="TP-PL":
            raise KeyError
        if stroke=="KW-PL":
            raise KeyError
        if stroke=="TP-BG":
            raise KeyError
        if stroke=="KW-BG":
            raise KeyError
        if stroke=="AEZ":
            raise KeyError
        if stroke=="A*ES":
            raise KeyError
        if stroke=="AES":
            raise KeyError
        if stroke=="HAESH":
            raise KeyError
        if stroke=="KWRA*T":
            raise KeyError
        if stroke=="P-P":
            raise KeyError
        if stroke=="H-N":
            raise KeyError
        if stroke=="H*N":
            raise KeyError
        
        #navigation
        if stroke=="STPH-R":
            raise KeyError
        if stroke=="STPH-RB":
            raise KeyError
        if stroke=="STPH-P":
            raise KeyError
        if stroke=="STPH-B":
            raise KeyError
        if stroke=="STPH-BG":
            raise KeyError
        if stroke=="STPH-G":
            raise KeyError
        if stroke=="PW-FP":
            raise KeyError
        
        #Emily's stuff (might also have to do this for my phrasing too?)
        if "SKWH"in stroke:
            raise KeyError
        if "LTZ" in stroke:
            raise KeyError

    if (len(strokes)) == 1:
        return(" ")

    for stroke_number in range(len(strokes)):

        if (not stroke_number ==0 and strokes[stroke_number] == starterstroke) and (not stroke_number ==0 and strokes[stroke_number] == startercap):
            raise KeyError

        #match the strokes
        match= re.fullmatch(
            #dissect the string to starter_letters, vowels and ender_letters
            r'(#?)(S?T?K?P?W?H?R?)(A?O?\*?\-?E?U?)(F?R?P?B?L?G?T?S?D?Z?)',

            #this string:
            aericks_denumberizer(strokes[stroke_number]))

        if not match:
            raise KeyError

        start_thing=starter_letter[match[2]]
        if "*" in match[3]:
            end_thing=ender_letter["*"+match[4]]
            if not end_thing:
                raise KeyError
        else:
            end_thing=ender_letter[match[4]]
        middle_thing=vowels[match[3].replace("*","")]

        if not stroke_number==0:
            if "#" in match[1]:
                output_string+=(
                    (start_thing+
                    middle_thing+
                    end_thing
                    ).capitalize())

            else:
                output_string+=(
                    start_thing+
                    middle_thing+
                    end_thing
                    )
    if strokes[0] == startercap:
        return output_string.capitalize()
    return output_string
